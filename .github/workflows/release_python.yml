# Workflow for releasing a Python package to PyPI based on the current repository.
name: Release Python
on:
  workflow_dispatch:
  push:
     branches:
      - publish-test
jobs:
  build:
    uses: ./.github/workflows/build_python.yml
  publish:
    name: Publish release to PyPI
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: testpypi
      url: https://test.pypi.org/p/novatel-edie
    permissions:
      id-token: write
    steps:
      - name: Print dir
        run: |
          ls
          
      - name: List wheel artifacts
        run: |
          curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/actions/artifacts" \
          | jq -r '.artifacts[] | select(.name | endswith("-wheels")) | .name' \
          | sort | uniq > artifacts.txt
          cat artifacts.txt
          
      - name: Download and extract artifacts
        run: |
          mkdir -p ./all_wheels
          while read -r artifact_name; do
            echo "Downloading $artifact_name"
            artifact_dir="./all_wheels/${artifact_name}"
            mkdir -p "$artifact_dir"
            curl -s -L -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/artifacts" \
            | jq -r ".artifacts[] | select(.name == \"$artifact_name\") | .archive_download_url" \
            | xargs -I {} curl -sL -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -o "$artifact_dir/${artifact_name}.zip" {}
            unzip -q "$artifact_dir/${artifact_name}.zip" -d "$artifact_dir"
            rm "$artifact_dir/${artifact_name}.zip"
          done < artifacts.txt
          tree
      - name: Upload to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          verbose: true
          packages-dir: all_wheels/

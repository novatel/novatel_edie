# The workflow to run on merges or pushes to the main branch.
name: Main

on:
  push:
    branches:
      - dev-riley-kinahan-enable-prerelease
jobs:
  # build-python:
  #   uses: ./.github/workflows/build_python.yml
  # build-cpp:
  #   uses: ./.github/workflows/build_cpp.yml

  increment-version:
    runs-on: ubuntu-latest
    # needs: [build-python, build-cpp]
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Install BumpMyVersion
        run: |
          pip install bump-my-version

      - name: Get Pull Request Info
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            commit_sha=$(git rev-parse HEAD)
            pr_info=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/${{ github.repository }}/commits/$commit_sha/pulls" \
            | jq '.[0]')

            if [ "$pr_info" == "null" ]; then
              echo "No pull request found for commit $commit_sha"
              VERSION_TYPE=automatic
              PRERELEASE=false
            else
              echo "Pull Request Number: $(echo $pr_info | jq '.number')"
              echo "Title: $(echo $pr_info | jq '.title')"
              echo "Merged By: $(echo $pr_info | jq '.user.login')"
              pr_number=$(echo $pr_info | jq '.number')
              pr_tags=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
              "https://api.github.com/repos/${{ github.repository }}/issues/$pr_number/labels" \
              | jq -r '.[].name')
              echo "Tags: $pr_tags"

              if echo "$pr_tags" | grep -q "major"; then
                VERSION_TYPE=major
              elif echo "$pr_tags" | grep -q "minor"; then
                VERSION_TYPE=minor
              elif echo "$pr_tags" | grep -q "patch"; then
                VERSION_TYPE=patch
              else
                VERSION_TYPE=automatic
              fi

              if echo "$pr_tags" | grep -q "prerelease"; then
                PRERELEASE=true
              else
                PRERELEASE=false
              fi
            fi


            PRERELEASE=false

            echo "VERSION_TYPE=$VERSION_TYPE"
            echo "VERSION_TYPE=$VERSION_TYPE" >> $GITHUB_ENV

            echo "PRERELEASE=$PRERELEASE"
            echo "PRERELEASE=$PRERELEASE" >> $GITHUB_ENV

      - name: Bump Python version
        run: |
          current_version=$(bump-my-version show current_version)
          if [[ "$current_version" == *"a"* ]] && [[ "$VERSION_TYPE" == "automatic" ]] ; then
            if [[ "$PRERELEASE" == true ]]; then
              echo "Bumping pre-release to next iteration"
              bump-my-version bump pre_n
            else
              echo "Dropping pre-release label"
              bump-my-version bump pre_label
            fi
          else
            if [[ "$VERSION_TYPE" == "automatic" ]]; then
              VERSION_TYPE=patch
            fi
            echo "Bumping version by ${VERSION_TYPE}"
            bump-my-version bump ${VERSION_TYPE}
            if [[ "$PRERELEASE" == true ]]; then
              echo "Adding pre-release label"
              bump-my-version bump pre_n
            fi
          fi

      - name: Get C++ version
        run: |
          if [[ "$VERSION_TYPE" == "automatic" ]]; then
            VERSION_TYPE=patch
          fi
          cpp_version=$(grep -E "set\(RELEASE_VERSION (.*)\)" CMakeLists.txt | awk -F'[()]' '{print $2}' | awk '{print $2}')
          echo "current_version=$cpp_version"
          new_cpp_version=$(bump-my-version show --current-version $cpp_version --increment ${VERSION_TYPE} new_version)
          sed -i -r "s/set\(RELEASE_VERSION (.*)\)/set\(RELEASE_VERSION ${new_cpp_version})/" CMakeLists.txt
          updated_version=$(grep -E "set\(RELEASE_VERSION (.*)\)" CMakeLists.txt | awk -F'[()]' '{print $2}' | awk '{print $2}')
          echo "updated_version=$updated_version"

      - name: Reset credentials
        run: |
          git remote set-url origin https://$GITHUB_ACTOR:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: Increment versions

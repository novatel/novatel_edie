################################################################################
#
# COPYRIGHT NovAtel Inc, 2022. All rights reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
################################################################################
#                            DESCRIPTION
#
# \file novateltest.hpp
# \brief Unit tests for OEM Framer, HeaderDecoder, MessageDecoder,
# Encoder and Filter.
################################################################################

from pathlib import Path

import novatel_edie as ne
from novatel_edie import HEADERFORMAT, STATUS
import pytest
# -------------------------------------------------------------------------------------------------------
# Filter Unit Tests
# -------------------------------------------------------------------------------------------------------
class FilterTest : public .testing.Test

protected:
   static JsonReader* my_json_db;
   static HeaderDecoder* my_header_decoder;
   static Filter* my_filter;

   # Per-test-suite setup
   static void SetUpTestSuite():
      try:
         my_json_db = ne.JsonReader();
         my_json_db.load_file(*TEST_DB_PATH);
         my_header_decoder = ne.HeaderDecoder(my_json_db);
         my_filter = ne.Filter();
      catch (JsonReaderFailure e):
         printf("%s\n", e.what());

         if (my_json_db)
         {
            my_json_db = nullptr;
         }

         if (my_header_decoder)
         {
            my_header_decoder = nullptr;
         }

         if (my_filter)
         {
            my_filter = nullptr;
         }

   # Per-test-suite teardown
   static void TearDownTestSuite():
      if my_json_db:
         my_json_db = nullptr;

      if my_header_decoder:
         my_header_decoder = nullptr;

      if my_filter:
         my_filter.shutdown_logger();
         my_filter = nullptr;

   void SetUp() override:
      my_filter.clear_filters();

public:
   bool TestFilter(unsigned char* message_):
      MetaData meta_data;
      IntermediateHeader header;
      const STATUS status = my_header_decoder.decode(message_, header, meta_data);
      if STATUS.SUCCESS != status  STATUS.UNSUPPORTED != status:
         printf("HeaderDecoder Failed!\n");
         return False;

      return my_filter.do_filtering(meta_data);;
JsonReader* FilterTest.my_json_db = nullptr;
HeaderDecoder* FilterTest.my_header_decoder = nullptr;
Filter* FilterTest.my_filter = nullptr;

def test_LOGGER():
   level = spdlog.level.off;

   assert spdlog.get("novatel_filter") != nullptr
   std.shared_ptr<spdlog.logger> novatel_filter = my_filter.get_logger();
   my_filter.set_logger_level(level);
   assert novatel_filter.level() == level

def test_NONE():
   const char* log = "#BESTPOSA,COM1,0,8.0,FINESTEERING,2180,313698.000,024000a0,cdba,32768;SOL_COMPUTED,SINGLE,51.15045046450,-114.03068725072,1097.2706,-17.0000,WGS84,1.3811,1.1629,3.1178,\"\",0.000,0.000,24,22,22,0,00,02,11,11*c64c3d4a\r\n";

   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log)))

def test_TIME_RANGE():
   const char* early_bestpos_log = "#BESTPOSA,COM1,0,8.5,FINESTEERING,2180,324433.000,02000020,cdba,32768;SOL_COMPUTED,SINGLE,51.15043040645,-114.03067196833,1097.5312,-17.0000,WGS84,0.9659,0.6980,1.7027,\"\",0.000,0.000,36,32,32,32,00,06,39,33*df69e14a\r\n";
   const char* bestpos_log1      = "#BESTPOSA,COM1,0,8.5,FINESTEERING,2180,324434.000,02000020,cdba,32768;SOL_COMPUTED,SINGLE,51.15043043561,-114.03067194872,1097.5245,-17.0000,WGS84,0.9659,0.6980,1.7027,\"\",0.000,0.000,36,32,32,32,00,06,39,33*3bed5c1b\r\n";
   const char* bestpos_log2      = "#BESTPOSA,COM1,0,8.5,FINESTEERING,2180,324435.000,02000020,cdba,32768;SOL_COMPUTED,SINGLE,51.15043043561,-114.03067194872,1097.5245,-17.0000,WGS84,0.9659,0.6980,1.7027,\"\",0.000,0.000,36,32,32,32,00,06,39,33*3bed5c1b\r\n";
   const char* bestpos_log3      = "#BESTPOSA,COM1,0,8.5,FINESTEERING,2180,324436.000,02000020,cdba,32768;SOL_COMPUTED,SINGLE,51.15043043561,-114.03067194872,1097.5245,-17.0000,WGS84,0.9659,0.6980,1.7027,\"\",0.000,0.000,36,32,32,32,00,06,39,33*3bed5c1b\r\n";
   const char* bestpos_log4      = "#BESTPOSA,COM1,0,8.5,FINESTEERING,2180,324437.000,02000020,cdba,32768;SOL_COMPUTED,SINGLE,51.15043043561,-114.03067194872,1097.5245,-17.0000,WGS84,0.9659,0.6980,1.7027,\"\",0.000,0.000,36,32,32,32,00,06,39,33*3bed5c1b\r\n";
   const char* late_bestpos_log  = "#BESTPOSA,COM1,0,8.5,FINESTEERING,2180,324438.000,02000020,cdba,32768;SOL_COMPUTED,SINGLE,51.15043044465,-114.03067191095,1097.5169,-17.0000,WGS84,0.9659,0.6980,1.7027,\"\",0.000,0.000,36,32,32,32,00,06,39,33*668e4c66\r\n";

   my_filter.set_include_lower_time_bound(2180, 324434);
   my_filter.set_include_upper_time_bound(2180, 324437);

   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(early_bestpos_log)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(bestpos_log1)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(bestpos_log2)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(bestpos_log3)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(bestpos_log4)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(late_bestpos_log)))

   my_filter.invert_time_filter(True);

   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(early_bestpos_log)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(bestpos_log1)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(bestpos_log2)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(bestpos_log3)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(bestpos_log4)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(late_bestpos_log)))

def test_ABBREV_ASCII_NAME_FILTER():
   const char* bestpos_log = "<BESTPOS USB3 0 47.0 FINESTEERING 2236 97396.000 03000000 cdba 16809\r\n<     SOL_COMPUTED WAAS 17.44306670742 78.37412051449 649.8287 -76.8000 WGS84 1.1040 1.1218 2.5477 \"128\" 5.000 0.000 61 11 11 11 00 06 00 03\r\n";
   const char* bestvel_log = "<BESTVEL USB3 0 47.0 FINESTEERING 2236 97396.000 03000000 10a2 16809\r\n<     SOL_COMPUTED WAAS 0.000 5.000 0.0154 23.182594 0.0384 0\r\n";

   my_filter.include_message_name("BESTPOS");
   my_filter.invert_message_name_filter(True);

   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(bestpos_log)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(bestvel_log)))

def test_SHORT_ABBREV_ASCII_NAME_FILTER():
   const char* corrimus_log = "<CORRIMUS 2221 285950.000\r\n<     37 0.0000000000000000 0.0000000000000000 0.0000000000000000 0.0000000000000000 0.0000000000000000 0.0000000000000000 8.066 0\r\n";
   const char* insatts_log  = "<INSATTS 2221 285963.000\r\n<     2221 285963.000000000 -0.980733135 0.769729364 -0.000000000 WAITING_AZIMUTH\r\n";

   my_filter.include_message_name("INSATTS");

   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(corrimus_log)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(insatts_log)))

def test_FINE_TIME_STATUS():
   const char* coarseadjusting_log = "#BESTPOSA,COM1,0,8.5,COARSEADJUSTING,2180,313691.000,02400020,cdba,32768;SOL_COMPUTED,SINGLE,51.15045261052,-114.03068986465,1097.3728,-17.0000,WGS84,1.5831,1.2508,3.3114,\"\",0.000,0.000,23,19,19,0,00,02,11,11*7473f577\r\n";
   const char* coarsesteering_log  = "#BESTPOSA,COM1,0,8.5,COARSESTEERING,2180,313692.000,02400020,cdba,32768;SOL_COMPUTED,SINGLE,51.15045261052,-114.03068986465,1097.3728,-17.0000,WGS84,1.5831,1.2508,3.3114,\"\",0.000,0.000,23,19,19,0,00,02,11,11*7473f577\r\n";
   const char* fineadjusting_log   = "#BESTPOSA,COM1,0,8.5,FINEADJUSTING,2180,313693.000,02400020,cdba,32768;SOL_COMPUTED,SINGLE,51.15045261052,-114.03068986465,1097.3728,-17.0000,WGS84,1.5831,1.2508,3.3114,\"\",0.000,0.000,23,19,19,0,00,02,11,11*7473f577\r\n";
   const char* finesteering_log    = "#BESTPOSA,COM1,0,8.0,FINESTEERING,2180,313694.000,024000a0,cdba,32768;SOL_COMPUTED,SINGLE,51.15045046450,-114.03068725072,1097.2706,-17.0000,WGS84,1.3811,1.1629,3.1178,\"\",0.000,0.000,24,22,22,0,00,02,11,11*c64c3d4a\r\n";

   my_filter.include_time_status(TIME_STATUS.FINEADJUSTING);

   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(coarseadjusting_log)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(coarsesteering_log)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(fineadjusting_log)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(finesteering_log)))

   my_filter.invert_time_status_filter(True);

   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(coarseadjusting_log)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(coarsesteering_log)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(fineadjusting_log)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(finesteering_log)))

def test_MULTIPLE_TIME_STATUS():
   const char* coarseadjusting_log = "#BESTPOSA,COM1,0,8.5,COARSEADJUSTING,2180,313691.000,02400020,cdba,32768;SOL_COMPUTED,SINGLE,51.15045261052,-114.03068986465,1097.3728,-17.0000,WGS84,1.5831,1.2508,3.3114,\"\",0.000,0.000,23,19,19,0,00,02,11,11*7473f577\r\n";
   const char* coarsesteering_log  = "#BESTPOSA,COM1,0,8.5,COARSESTEERING,2180,313692.000,02400020,cdba,32768;SOL_COMPUTED,SINGLE,51.15045261052,-114.03068986465,1097.3728,-17.0000,WGS84,1.5831,1.2508,3.3114,\"\",0.000,0.000,23,19,19,0,00,02,11,11*7473f577\r\n";
   const char* fineadjusting_log   = "#BESTPOSA,COM1,0,8.5,FINEADJUSTING,2180,313693.000,02400020,cdba,32768;SOL_COMPUTED,SINGLE,51.15045261052,-114.03068986465,1097.3728,-17.0000,WGS84,1.5831,1.2508,3.3114,\"\",0.000,0.000,23,19,19,0,00,02,11,11*7473f577\r\n";
   const char* finesteering_log    = "#BESTPOSA,COM1,0,8.0,FINESTEERING,2180,313694.000,024000a0,cdba,32768;SOL_COMPUTED,SINGLE,51.15045046450,-114.03068725072,1097.2706,-17.0000,WGS84,1.3811,1.1629,3.1178,\"\",0.000,0.000,24,22,22,0,00,02,11,11*c64c3d4a\r\n";
   std.vector<TIME_STATUS> time_statuses  = [ TIME_STATUS.COARSEADJUSTING, TIME_STATUS.COARSESTEERING ];

   my_filter.include_time_status(time_statuses);

   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(coarseadjusting_log)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(coarsesteering_log)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(fineadjusting_log)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(finesteering_log)))

def test_START_TIME():
   const char* early_bestpos_log1 = "#BESTPOSA,COM1,0,8.5,FINESTEERING,2180,324433.000,02000020,cdba,32768;SOL_COMPUTED,SINGLE,51.15043040645,-114.03067196833,1097.5312,-17.0000,WGS84,0.9659,0.6980,1.7027,\"\",0.000,0.000,36,32,32,32,00,06,39,33*df69e14a\r\n";
   const char* early_bestpos_log2 = "#BESTPOSA,COM1,0,8.5,FINESTEERING,2180,324434.000,02000020,cdba,32768;SOL_COMPUTED,SINGLE,51.15043040645,-114.03067196833,1097.5312,-17.0000,WGS84,0.9659,0.6980,1.7027,\"\",0.000,0.000,36,32,32,32,00,06,39,33*df69e14a\r\n";
   const char* bestpos_log1       = "#BESTPOSA,COM1,0,8.5,FINESTEERING,2180,324435.000,02000020,cdba,32768;SOL_COMPUTED,SINGLE,51.15043043561,-114.03067194872,1097.5245,-17.0000,WGS84,0.9659,0.6980,1.7027,\"\",0.000,0.000,36,32,32,32,00,06,39,33*3bed5c1b\r\n";
   const char* bestpos_log2       = "#BESTPOSA,COM1,0,8.5,FINESTEERING,2180,324436.000,02000020,cdba,32768;SOL_COMPUTED,SINGLE,51.15043043561,-114.03067194872,1097.5245,-17.0000,WGS84,0.9659,0.6980,1.7027,\"\",0.000,0.000,36,32,32,32,00,06,39,33*3bed5c1b\r\n";

   my_filter.set_include_lower_time_bound(2180, 324435);

   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(early_bestpos_log1)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(early_bestpos_log2)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(bestpos_log1)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(bestpos_log2)))

def test_STOP_TIME():
   const char* bestpos_log1      = "#BESTPOSA,COM1,0,8.5,FINESTEERING,2180,324434.000,02000020,cdba,32768;SOL_COMPUTED,SINGLE,51.15043040645,-114.03067196833,1097.5312,-17.0000,WGS84,0.9659,0.6980,1.7027,\"\",0.000,0.000,36,32,32,32,00,06,39,33*df69e14a\r\n";
   const char* bestpos_log2      = "#BESTPOSA,COM1,0,8.5,FINESTEERING,2180,324435.000,02000020,cdba,32768;SOL_COMPUTED,SINGLE,51.15043040645,-114.03067196833,1097.5312,-17.0000,WGS84,0.9659,0.6980,1.7027,\"\",0.000,0.000,36,32,32,32,00,06,39,33*df69e14a\r\n";
   const char* late_bestpos_log1 = "#BESTPOSA,COM1,0,8.5,FINESTEERING,2180,324436.000,02000020,cdba,32768;SOL_COMPUTED,SINGLE,51.15043043561,-114.03067194872,1097.5245,-17.0000,WGS84,0.9659,0.6980,1.7027,\"\",0.000,0.000,36,32,32,32,00,06,39,33*3bed5c1b\r\n";
   const char* late_bestpos_log2 = "#BESTPOSA,COM1,0,8.5,FINESTEERING,2180,324437.000,02000020,cdba,32768;SOL_COMPUTED,SINGLE,51.15043043561,-114.03067194872,1097.5245,-17.0000,WGS84,0.9659,0.6980,1.7027,\"\",0.000,0.000,36,32,32,32,00,06,39,33*3bed5c1b\r\n";

   my_filter.set_include_upper_time_bound(2180, 324435);

   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(bestpos_log1)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(bestpos_log2)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(late_bestpos_log1)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(late_bestpos_log2)))

def test_MESSAGE_FORMAT():
   const char* ascii_bestpos_log = "#BESTPOSA,COM1,0,8.0,FINESTEERING,2180,313698.000,024000a0,cdba,32768;SOL_COMPUTED,SINGLE,51.15045046450,-114.03068725072,1097.2706,-17.0000,WGS84,1.3811,1.1629,3.1178,\"\",0.000,0.000,24,22,22,0,00,02,11,11*c64c3d4a\r\n";
   const char* shortascii_rawimus_log = "%RAWIMUSXA,1692,484620.664;00,11,1692,484620.664389000,00801503,43110635,-817242,-202184,-215194,-41188,-9895*a5db8c7b\r\n";
   unsigned char binary_bestpos_log[]  = [ 0xAA, 0x44, 0x12, 0x1C, 0x2A, 0x00, 0x00, 0x20, 0x48, 0x00, 0x00, 0x00, 0xA4, 0xB4, 0xAC, 0x07, 0xD8, 0x16, 0x6D, 0x08, 0x08, 0x40, 0x00, 0x02, 0xF6, 0xB1, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0xD7, 0x03, 0xB0, 0x4C, 0xE5, 0x8E, 0x49, 0x40, 0x52, 0xC4, 0x26, 0xD1, 0x72, 0x82, 0x5C, 0xC0, 0x29, 0xCB, 0x10, 0xC7, 0x7A, 0xA2, 0x90, 0x40, 0x33, 0x33, 0x87, 0xC1, 0x3D, 0x00, 0x00, 0x00, 0xFA, 0x7E, 0xBA, 0x3F, 0x3F, 0x57, 0x83, 0x3F, 0xA9, 0xA4, 0x0A, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x16, 0x16, 0x16, 0x00, 0x06, 0x39, 0x33, 0x23, 0xC4, 0x89, 0x7A ];
   unsigned char shortbinary_rawimu_log[]  = [ 0xAA, 0x44, 0x13, 0x28, 0xB6, 0x05, 0x9C, 0x06, 0x78, 0xB9, 0xE2, 0x1C, 0x00, 0x0B, 0x9C, 0x06, 0x0B, 0x97, 0x55, 0xA8, 0x32, 0x94, 0x1D, 0x41, 0x03, 0x15, 0x80, 0x00, 0xEB, 0xD0, 0x91, 0x02, 0xA6, 0x87, 0xF3, 0xFF, 0x38, 0xEA, 0xFC, 0xFF, 0x66, 0xB7, 0xFC, 0xFF, 0x1C, 0x5F, 0xFF, 0xFF, 0x59, 0xD9, 0xFF, 0xFF, 0x47, 0x5F, 0xAF, 0xBA ];

   std.vector<std.tuple<std.string, HEADERFORMAT, MEASUREMENT_SOURCE>> filterlist  = [:"BESTPOS", HEADERFORMAT.ASCII, MEASUREMENT_SOURCE.PRIMARY},:"RAWIMUSX", HEADERFORMAT.SHORT_ASCII, MEASUREMENT_SOURCE.PRIMARY];
   my_filter.include_message_name(filterlist);

   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(ascii_bestpos_log)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(shortascii_rawimus_log)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(binary_bestpos_log)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(shortbinary_rawimu_log)))

def test_MESSAGE_ID():
   const char* bestpos_log    = "#BESTPOSA,COM1,0,8.0,FINESTEERING,2180,313698.000,024000a0,cdba,32768;SOL_COMPUTED,SINGLE,51.15045046450,-114.03068725072,1097.2706,-17.0000,WGS84,1.3811,1.1629,3.1178,\"\",0.000,0.000,24,22,22,0,00,02,11,11*c64c3d4a\r\n";
   const char* version_log    = "#VERSIONA,COM1,0,55.5,FINESTEERING,2167,254938.857,02000000,3681,16248;8,GPSCARD,\"FFNBYNTMNP1\",\"BMHR15470120X\",\"OEM719N-0.00C\",\"OM7CR0707RN0000\",\"OM7BR0000RBG000\",\"2020/Apr/09\",\"13:40:45\",OEM7FPGA,\"\",\"\",\"\",\"OMV070001RN0000\",\"\",\"\",\"\",DEFAULT_CONFIG,\"\",\"\",\"\",\"EZDCD0707RN0001\",\"\",\"2020/Apr/09\",\"13:41:07\",APPLICATION,\"\",\"\",\"\",\"EZAPR0707RN0000\",\"\",\"2020/Apr/09\",\"13:41:00\",PACKAGE,\"\",\"\",\"\",\"EZPKR0103RN0000\",\"\",\"2020/Apr/09\",\"13:41:14\",ENCLOSURE,\"\",\"NMJC14520001W\",\"0.0.0.H\",\"\",\"\",\"\",\"\",IMUCARD,\"Epson G320N 125\",\"E0000114\",\"G320PDGN\",\"2302\",\"\",\"\",\"\",RADIO,\"M3-R4\",\"1843000570\",\"SPL0020d12\",\"V07.34.2.5.1.11\",\"\",\"\",\"\"*4b995016\r\n";
   const char* range_log      = "#RANGEA,COM1,0,49.0,FINESTEERING,2167,159740.000,02000000,5103,16248;115,20,0,23291390.821,0.051,-122397109.320305,0.011,-3214.414,44.0,16498.975,1810bc04,20,0,23291389.349,0.184,-95374376.486282,0.013,-2504.740,41.1,16492.754,11303c0b,29,0,20705108.295,0.022,-108806118.750397,0.005,-1620.698,51.2,14908.774,0810bc44,29,0,20705106.528,0.061,-84783996.294254,0.006,-1262.882,50.7,14902.754,01303c4b,29,0,20705107.069,0.025,-84783990.539554,0.005,-1262.882,51.3,14905.534,02309c4b,13,0,22941454.717,0.042,-120558183.531157,0.009,2111.590,45.7,3984.555,1810bc64,13,0,22941453.693,0.180,-93941456.741696,0.011,1645.396,41.2,3978.255,11303c6b,15,0,22752775.227,0.046,-119566687.005913,0.012,3112.730,44.8,3628.275,0810bc84,15,0,22752775.420,0.118,-93168858.308908,0.012,2425.506,44.9,3622.754,01303c8b,15,0,22752775.932,0.043,-93168851.550483,0.012,2425.505,46.7,3625.014,02309c8b,16,0,23437165.563,0.058,-123163154.592686,0.010,1667.743,42.8,3318.855,1810bca4,16,0,23437164.832,0.179,-95971289.711375,0.012,1299.540,41.3,3313.415,11303cab,18,0,20870226.835,0.024,-109673843.056839,0.005,1782.527,50.4,7988.975,1810bcc4,18,0,20870225.520,0.080,-85460161.951054,0.006,1388.983,48.3,7983.255,11303ccb,18,0,20870225.982,0.024,-85460166.200662,0.006,1388.983,51.9,7985.814,02309ccb,18,0,20870231.341,0.004,-81899348.012827,0.003,1331.096,55.4,7987.255,01d03cc4,5,0,20977730.840,0.024,-110238771.341810,0.006,-1850.683,50.6,12588.896,0810bd04,5,0,20977729.403,0.070,-85900356.288455,0.006,-1442.091,49.4,12583.755,01303d0b,5,0,20977730.127,0.030,-85900355.538492,0.006,-1442.091,49.8,12585.716,02309d0b,26,0,22753733.201,0.042,-119571694.561007,0.008,-494.798,45.7,7318.775,1810bd24,26,0,22753735.163,0.118,-93172767.333088,0.010,-385.557,44.9,7312.755,11303d2b,26,0,22753735.387,0.043,-93172769.582418,0.009,-385.557,46.7,7315.375,02309d2b,26,0,22753735.481,0.008,-89290576.088766,0.005,-369.472,50.1,7316.815,01d03d24,23,0,23067782.934,0.040,-121222050.181679,0.009,3453.274,46.0,3078.894,0810bd44,23,0,23067783.254,0.142,-94458759.273215,0.010,2690.865,43.3,3073.754,01303d4b,23,0,23067783.763,0.040,-94458764.522108,0.009,2690.865,47.3,3076.395,02309d4b,23,0,23067789.450,0.007,-90523004.360543,0.004,2578.883,51.2,3077.834,01d03d44,194,0,43027813.095,0.065,-226112681.899748,0.013,43.499,41.9,17178.695,1815be04,194,0,43027815.196,0.059,-176191709.875251,0.014,33.896,44.0,17173.014,02359e0b,194,0,43027817.865,0.014,-168850394.176443,0.007,32.406,45.4,17177.053,01d53e04,131,0,38480107.260,0.124,-202214296.438902,0.009,-0.922,46.2,292335.531,48023e84,133,0,38618703.555,0.119,-202942631.161186,0.007,0.421,46.7,916697.188,58023ec4,138,0,38495561.597,0.116,-202295515.714333,0.008,-4.752,46.8,292343.625,48023ee4,45,13,20655319.254,0.111,-110608334.938276,0.006,-1928.119,46.3,9728.839,18119f04,45,13,20655320.731,0.021,-86028727.119001,0.006,-1499.649,45.9,9724.239,10b13f0b,45,13,20655321.099,0.092,-86028721.367030,0.006,-1499.649,46.1,9725.238,10319f0b,53,6,23361335.550,0.284,-124792043.406215,0.017,1741.893,38.1,444.840,08119f24,53,6,23361340.271,0.098,-97060514.793435,0.017,1354.807,32.6,444.741,00b13f2b,53,6,23361339.423,0.393,-97060517.036654,0.018,1354.806,33.5,444.801,10319f2b,60,10,20724752.466,0.106,-110863493.957380,0.007,-2492.451,46.7,16549.037,18019f44,39,3,23534282.253,0.169,-125583452.109842,0.012,4608.280,42.6,557.668,08119f84,39,3,23534291.023,0.027,-97676038.550992,0.013,3584.223,43.8,552.119,10b13f8b,39,3,23534290.639,0.108,-97676048.806539,0.013,3584.223,44.7,552.959,10319f8b,61,9,19285134.504,0.086,-103126338.171372,0.005,228.766,48.6,11128.199,08119fa4,61,9,19285138.043,0.020,-80209402.132964,0.005,177.929,46.3,11124.118,00b13fab,61,9,19285138.376,0.084,-80209411.390794,0.005,177.929,46.9,11125.037,00319fab,52,7,22348227.548,0.137,-119422164.171132,0.008,-1798.230,44.4,7458.668,08119fc4,52,7,22348232.044,0.025,-92883929.564420,0.008,-1398.625,44.4,7453.898,00b13fcb,52,7,22348232.124,0.104,-92883930.822797,0.008,-1398.624,45.0,7455.038,10319fcb,54,11,21518220.426,0.169,-115148393.440041,0.010,3262.249,42.6,3877.098,18119fe4,54,11,21518225.678,0.025,-89559888.534930,0.010,2537.306,44.6,3871.818,00b13feb,54,11,21518226.376,0.107,-89559882.794247,0.010,2537.307,44.8,3872.818,10319feb,51,0,23917426.780,0.130,-127493324.706900,0.008,-3976.867,44.9,13028.379,08119c04,51,0,23917434.944,0.031,-99161492.405944,0.010,-3093.121,42.6,13024.238,10b13c0b,51,0,23917434.780,0.126,-99161488.657552,0.010,-3093.121,43.4,13025.178,00319c0b,38,8,19851538.779,0.107,-106117893.493769,0.007,1849.414,46.6,6208.818,08119c24,38,8,19851544.763,0.031,-82536182.471767,0.007,1438.434,42.6,6204.118,00b13c2b,38,8,19851543.771,0.124,-82536181.722576,0.007,1438.434,43.6,6205.038,00319c2b,25,0,27861125.116,0.078,-146411169.405727,0.011,-3136.592,43.2,21188.543,08539cc4,25,0,27861133.366,0.009,-109333028.194067,0.005,-2342.203,49.0,21186.443,01933cc4,25,0,27861129.463,0.011,-112185182.897162,0.006,-2403.344,47.0,21186.443,02333cc4,25,0,27861129.580,0.007,-110759098.611107,0.006,-2372.787,50.8,21186.164,02933cc4,4,0,25274631.488,0.038,-132819124.897734,0.006,997.361,49.6,7638.783,08539ce4,4,0,25274635.181,0.007,-99183140.380658,0.004,744.803,50.8,7636.565,01933ce4,4,0,25274631.890,0.007,-101770517.169783,0.004,764.254,50.9,7636.444,02333ce4,4,0,25274631.708,0.005,-100476824.840813,0.004,754.545,53.6,7636.363,02933ce4,12,0,26373649.887,0.092,-138594449.111813,0.012,-2565.281,41.8,26740.730,08539d04,12,0,26373653.619,0.019,-103495853.823161,0.008,-1915.449,42.6,26738.648,01933d04,12,0,26373650.081,0.023,-106195738.067164,0.011,-1965.500,41.1,26738.449,02333d04,12,0,26373650.251,0.015,-104845791.009488,0.010,-1940.442,44.6,26738.371,02933d04,11,0,22137124.256,0.039,-116331408.305147,0.015,-1200.216,49.2,19415.590,08539d24,11,0,22137125.344,0.008,-86870883.829203,0.011,-896.289,49.8,19413.172,01933d24,11,0,22137122.146,0.008,-89137066.170706,0.012,-919.719,49.6,19413.248,02333d24,11,0,22137121.891,0.006,-88003971.568373,0.011,-908.028,52.4,19413.172,02933d24,30,0,25928558.680,0.072,-136255508.290211,0.010,743.664,43.9,3960.112,08539d44,30,0,25928564.638,0.011,-101749279.487957,0.006,555.328,47.5,4752.748,01933d44,30,0,25928561.460,0.010,-104403592.595320,0.005,569.759,48.1,4753.047,02333d44,30,0,25928561.332,0.008,-103076425.609137,0.006,562.539,50.5,4752.767,02933d44,2,0,25889111.981,0.043,-136048218.157560,0.006,-1792.931,48.4,12654.424,08539d64,2,0,25889117.006,0.009,-101594476.864922,0.005,-1338.866,48.7,12652.444,01933d64,2,0,25889114.168,0.009,-104244753.680674,0.004,-1373.765,49.5,12651.978,02333d64,2,0,25889113.739,0.007,-102919609.843844,0.005,-1356.370,51.8,12651.943,02933d64,19,0,27039623.380,0.118,-142094196.888887,0.015,-1878.632,39.7,11125.104,08539d84,19,0,27039628.887,0.020,-106109319.847355,0.010,-1402.842,41.9,11123.043,01933d84,19,0,27039625.153,0.024,-108877382.476710,0.011,-1439.341,40.6,11122.757,02333d84,19,0,27039625.337,0.016,-107493348.232960,0.010,-1421.103,44.1,11122.765,02933d84,36,0,23927504.603,0.030,-125739945.419298,0.005,1241.596,51.7,11037.264,08539da4,36,0,23927510.217,0.006,-93896767.646843,0.004,927.156,52.9,11035.164,01933da4,36,0,23927507.273,0.006,-96346233.181780,0.004,951.361,53.2,11035.376,02333da4,36,0,23927507.057,0.004,-95121494.979676,0.004,939.285,55.8,11031.874,02933da4,9,0,24890379.004,0.046,-130799846.144936,0.007,3052.621,47.8,2955.889,08539dc4,9,0,24890384.304,0.009,-97675250.055577,0.005,2279.540,49.1,2953.828,01933dc4,9,0,24890381.065,0.008,-100223286.825938,0.004,2338.979,50.0,2953.762,02333dc4,9,0,24890381.366,0.006,-98949262.506583,0.005,2309.297,52.2,2949.700,02933dc4,23,0,26593863.945,0.036,-138481231.000933,0.010,-48.553,44.1,2628.888,08149ec4,23,0,26593862.563,0.010,-104360035.310223,0.005,-36.590,48.2,2623.647,41343ec4,34,0,23330414.273,0.017,-121487628.857801,0.005,2280.558,50.6,6539.069,58149ee4,34,0,23330415.641,0.008,-91553618.939049,0.005,1718.641,50.1,6533.770,41343ee4,35,0,24822913.452,0.024,-129259432.414616,0.007,-2925.143,47.4,23499.049,58149f04,35,0,24822915.980,0.012,-97410461.716286,0.006,-2204.368,46.7,23493.830,41343f04,11,0,24964039.739,0.052,-129994328.361984,0.014,2939.333,40.8,2708.970,18149f24,11,0,24964038.060,0.022,-100519869.959755,0.006,2272.851,48.3,2708.810,00349f24,19,0,23905947.282,0.033,-124484578.888819,0.009,-2342.726,44.8,13489.051,18149f44,19,0,23905949.046,0.008,-93812119.376225,0.005,-1765.479,50.1,13483.831,41343f44,21,0,24577306.170,0.027,-127980528.823414,0.008,3242.344,46.7,3439.068,18149f84,21,0,24577307.993,0.008,-96446682.849511,0.005,2443.502,49.7,3433.828,41343f84,22,0,22438270.920,0.015,-116842012.781567,0.005,729.096,51.5,8979.049,18149fa4,22,0,22438269.274,0.005,-88052653.428423,0.003,549.506,54.1,8973.770,41343fa4,44,0,21553538.984,0.014,-112234979.640419,0.005,-679.127,52.1,15439.131,48149ca4,44,0,21553540.824,0.005,-84580779.869687,0.003,-511.716,53.6,15433.829,41343ca4,57,0,26771391.610,0.021,-139405685.309616,0.007,-2069.940,48.5,20196.455,48049d04,12,0,21542689.063,0.021,-112178498.767984,0.006,952.964,48.8,11229.051,18149d24,12,0,21542686.409,0.013,-86743545.297369,0.004,736.976,52.6,11228.890,00349d24,25,0,26603375.741,0.069,-138530755.415895,0.019,-2155.462,38.4,9789.050,18149d44,25,0,26603380.238,0.015,-104397363.013083,0.007,-1624.205,44.7,9783.829,41343d44*5e9785bd\r\n";
   const char* gloalmanac_log = "#GLOALMANACA,COM1,0,54.0,SATTIME,2167,159108.000,02000000,ba83,16248;24,2167,115150.343,1,1,1,0,39532.343750000,1.316556988,0.022644193,0.000380516,-0.200759736,-2655.375000000,-0.000305176,-0.000080109,2167,80546.843,2,-4,1,0,4928.843750000,-2.415465471,0.030652651,0.001904488,-2.240858310,-2655.851562500,0.000305176,-0.000484467,2167,85554.000,3,5,1,0,9936.000000000,-2.786838624,0.027761457,0.001849174,-2.155051259,-2655.845703125,0.000244141,-0.000038147,2167,90494.343,4,6,1,0,14876.343750000,3.138599593,0.033250232,0.000991821,-1.632539054,-2655.865234375,0.000061035,-0.000095367,2167,95426.781,5,1,1,0,19808.781250000,2.781340861,0.033516881,0.000567436,-2.318803708,-2655.912109375,0.000000000,-0.000072479,2167,101118.375,6,-4,1,0,25500.375000000,2.337855630,0.022338595,0.000492096,2.475749118,-2655.802734375,-0.000183105,-0.000198364,2167,106019.281,7,5,1,0,30401.281250000,2.004915886,0.027902272,0.001599312,-2.137026985,-2655.806640625,-0.000122070,0.000041962,2167,110772.718,8,6,1,0,35154.718750000,1.658347082,0.028034098,0.002008438,-1.757079119,-2655.869140625,-0.000183105,0.000057220,2167,114259.031,9,-2,1,0,38641.031250000,-2.800770285,0.013374395,0.001688004,-2.688301331,-2655.992187500,-0.000915527,-0.000000000,2167,78451.250,10,-7,1,0,2833.250000000,-0.189087101,0.025562352,0.001439095,0.043239083,-2656.169921875,-0.001342773,0.000072479,2167,83619.250,11,0,1,1,8001.250000000,-0.568264981,0.030221219,0.000588417,-2.044029400,-2656.169921875,-0.001342773,0.000022888,2167,88863.437,12,-1,1,0,13245.437500000,-0.938955033,0.026368291,0.001175880,-1.256138518,-2655.986328125,-0.001159668,-0.000244141,2167,93781.406,13,-2,1,0,18163.406250000,-1.308018227,0.025406557,0.000337601,1.744136156,-2656.201171875,-0.001037598,0.000057220,2167,99049.875,14,-7,1,0,23431.875000000,-1.683226333,0.021385849,0.000715256,-2.112099797,-2656.009765625,-0.001098633,-0.000064850,2167,104050.250,15,0,1,0,28432.250000000,-2.043945510,0.025130920,0.000899315,-1.639250219,-2656.019531250,-0.001037598,-0.000099182,2167,109475.187,16,-1,1,0,33857.187500000,-2.465775247,0.018401777,0.002746582,0.205936921,-2655.822265625,-0.000854492,0.000015259,2167,112381.000,17,4,1,0,36763.000000000,-0.550378525,0.044683183,0.000854492,-3.118007699,-2655.976562500,0.001098633,-0.000438690,2167,76649.656,18,-3,1,0,1031.656250000,2.061364581,0.049192247,0.001056671,-0.229426002,-2656.011718750,0.001037598,-0.000083923,2167,81216.375,19,3,1,0,5598.375000000,1.753316072,0.053257895,0.000308990,2.031661680,-2656.169921875,0.000915527,0.000148773,2167,86932.187,20,2,1,0,11314.187500000,1.338137581,0.053485596,0.000810623,0.016106798,-2656.033203125,0.001037598,0.000049591,2167,92471.875,21,4,1,0,16853.875000000,0.905492081,0.048149620,0.000671387,2.711982159,-2655.875000000,0.001098633,0.000225067,2167,97225.437,22,-3,1,0,21607.437500000,0.566332524,0.051370380,0.002092361,0.380906604,-2656.091796875,0.001159668,0.000122070,2167,103403.781,23,3,1,0,27785.781250000,0.114991634,0.051142680,0.000539780,1.610679827,-2656.626953125,0.001098633,0.000007629,2167,107403.343,24,2,1,0,31785.343750000,-0.171967635,0.033052492,0.000456810,-2.399433574,-2656.039062500,0.001037598,-0.000049591*6dee109c\r\n";

   my_filter.include_message_id(42, HEADERFORMAT.ASCII, MEASUREMENT_SOURCE.PRIMARY);

   ASSERT_FALSE(TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(version_log))));    # Version ID: 37
   ASSERT_TRUE(TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(bestpos_log))));     # Bestpos ID: 42
   ASSERT_FALSE(TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(range_log))));      # Range ID: 43
   ASSERT_FALSE(TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(gloalmanac_log)))); # Gloalmanac ID: 718

def test_MULTIPLE_MESSAGE_ID():
   const char* bestpos_log    = "#BESTPOSA,COM1,0,8.0,FINESTEERING,2180,313698.000,024000a0,cdba,32768;SOL_COMPUTED,SINGLE,51.15045046450,-114.03068725072,1097.2706,-17.0000,WGS84,1.3811,1.1629,3.1178,\"\",0.000,0.000,24,22,22,0,00,02,11,11*c64c3d4a\r\n";
   const char* version_log    = "#VERSIONA,COM1,0,55.5,FINESTEERING,2167,254938.857,02000000,3681,16248;8,GPSCARD,\"FFNBYNTMNP1\",\"BMHR15470120X\",\"OEM719N-0.00C\",\"OM7CR0707RN0000\",\"OM7BR0000RBG000\",\"2020/Apr/09\",\"13:40:45\",OEM7FPGA,\"\",\"\",\"\",\"OMV070001RN0000\",\"\",\"\",\"\",DEFAULT_CONFIG,\"\",\"\",\"\",\"EZDCD0707RN0001\",\"\",\"2020/Apr/09\",\"13:41:07\",APPLICATION,\"\",\"\",\"\",\"EZAPR0707RN0000\",\"\",\"2020/Apr/09\",\"13:41:00\",PACKAGE,\"\",\"\",\"\",\"EZPKR0103RN0000\",\"\",\"2020/Apr/09\",\"13:41:14\",ENCLOSURE,\"\",\"NMJC14520001W\",\"0.0.0.H\",\"\",\"\",\"\",\"\",IMUCARD,\"Epson G320N 125\",\"E0000114\",\"G320PDGN\",\"2302\",\"\",\"\",\"\",RADIO,\"M3-R4\",\"1843000570\",\"SPL0020d12\",\"V07.34.2.5.1.11\",\"\",\"\",\"\"*4b995016\r\n";
   const char* range_log      = "#RANGEA,COM1,0,49.0,FINESTEERING,2167,159740.000,02000000,5103,16248;115,20,0,23291390.821,0.051,-122397109.320305,0.011,-3214.414,44.0,16498.975,1810bc04,20,0,23291389.349,0.184,-95374376.486282,0.013,-2504.740,41.1,16492.754,11303c0b,29,0,20705108.295,0.022,-108806118.750397,0.005,-1620.698,51.2,14908.774,0810bc44,29,0,20705106.528,0.061,-84783996.294254,0.006,-1262.882,50.7,14902.754,01303c4b,29,0,20705107.069,0.025,-84783990.539554,0.005,-1262.882,51.3,14905.534,02309c4b,13,0,22941454.717,0.042,-120558183.531157,0.009,2111.590,45.7,3984.555,1810bc64,13,0,22941453.693,0.180,-93941456.741696,0.011,1645.396,41.2,3978.255,11303c6b,15,0,22752775.227,0.046,-119566687.005913,0.012,3112.730,44.8,3628.275,0810bc84,15,0,22752775.420,0.118,-93168858.308908,0.012,2425.506,44.9,3622.754,01303c8b,15,0,22752775.932,0.043,-93168851.550483,0.012,2425.505,46.7,3625.014,02309c8b,16,0,23437165.563,0.058,-123163154.592686,0.010,1667.743,42.8,3318.855,1810bca4,16,0,23437164.832,0.179,-95971289.711375,0.012,1299.540,41.3,3313.415,11303cab,18,0,20870226.835,0.024,-109673843.056839,0.005,1782.527,50.4,7988.975,1810bcc4,18,0,20870225.520,0.080,-85460161.951054,0.006,1388.983,48.3,7983.255,11303ccb,18,0,20870225.982,0.024,-85460166.200662,0.006,1388.983,51.9,7985.814,02309ccb,18,0,20870231.341,0.004,-81899348.012827,0.003,1331.096,55.4,7987.255,01d03cc4,5,0,20977730.840,0.024,-110238771.341810,0.006,-1850.683,50.6,12588.896,0810bd04,5,0,20977729.403,0.070,-85900356.288455,0.006,-1442.091,49.4,12583.755,01303d0b,5,0,20977730.127,0.030,-85900355.538492,0.006,-1442.091,49.8,12585.716,02309d0b,26,0,22753733.201,0.042,-119571694.561007,0.008,-494.798,45.7,7318.775,1810bd24,26,0,22753735.163,0.118,-93172767.333088,0.010,-385.557,44.9,7312.755,11303d2b,26,0,22753735.387,0.043,-93172769.582418,0.009,-385.557,46.7,7315.375,02309d2b,26,0,22753735.481,0.008,-89290576.088766,0.005,-369.472,50.1,7316.815,01d03d24,23,0,23067782.934,0.040,-121222050.181679,0.009,3453.274,46.0,3078.894,0810bd44,23,0,23067783.254,0.142,-94458759.273215,0.010,2690.865,43.3,3073.754,01303d4b,23,0,23067783.763,0.040,-94458764.522108,0.009,2690.865,47.3,3076.395,02309d4b,23,0,23067789.450,0.007,-90523004.360543,0.004,2578.883,51.2,3077.834,01d03d44,194,0,43027813.095,0.065,-226112681.899748,0.013,43.499,41.9,17178.695,1815be04,194,0,43027815.196,0.059,-176191709.875251,0.014,33.896,44.0,17173.014,02359e0b,194,0,43027817.865,0.014,-168850394.176443,0.007,32.406,45.4,17177.053,01d53e04,131,0,38480107.260,0.124,-202214296.438902,0.009,-0.922,46.2,292335.531,48023e84,133,0,38618703.555,0.119,-202942631.161186,0.007,0.421,46.7,916697.188,58023ec4,138,0,38495561.597,0.116,-202295515.714333,0.008,-4.752,46.8,292343.625,48023ee4,45,13,20655319.254,0.111,-110608334.938276,0.006,-1928.119,46.3,9728.839,18119f04,45,13,20655320.731,0.021,-86028727.119001,0.006,-1499.649,45.9,9724.239,10b13f0b,45,13,20655321.099,0.092,-86028721.367030,0.006,-1499.649,46.1,9725.238,10319f0b,53,6,23361335.550,0.284,-124792043.406215,0.017,1741.893,38.1,444.840,08119f24,53,6,23361340.271,0.098,-97060514.793435,0.017,1354.807,32.6,444.741,00b13f2b,53,6,23361339.423,0.393,-97060517.036654,0.018,1354.806,33.5,444.801,10319f2b,60,10,20724752.466,0.106,-110863493.957380,0.007,-2492.451,46.7,16549.037,18019f44,39,3,23534282.253,0.169,-125583452.109842,0.012,4608.280,42.6,557.668,08119f84,39,3,23534291.023,0.027,-97676038.550992,0.013,3584.223,43.8,552.119,10b13f8b,39,3,23534290.639,0.108,-97676048.806539,0.013,3584.223,44.7,552.959,10319f8b,61,9,19285134.504,0.086,-103126338.171372,0.005,228.766,48.6,11128.199,08119fa4,61,9,19285138.043,0.020,-80209402.132964,0.005,177.929,46.3,11124.118,00b13fab,61,9,19285138.376,0.084,-80209411.390794,0.005,177.929,46.9,11125.037,00319fab,52,7,22348227.548,0.137,-119422164.171132,0.008,-1798.230,44.4,7458.668,08119fc4,52,7,22348232.044,0.025,-92883929.564420,0.008,-1398.625,44.4,7453.898,00b13fcb,52,7,22348232.124,0.104,-92883930.822797,0.008,-1398.624,45.0,7455.038,10319fcb,54,11,21518220.426,0.169,-115148393.440041,0.010,3262.249,42.6,3877.098,18119fe4,54,11,21518225.678,0.025,-89559888.534930,0.010,2537.306,44.6,3871.818,00b13feb,54,11,21518226.376,0.107,-89559882.794247,0.010,2537.307,44.8,3872.818,10319feb,51,0,23917426.780,0.130,-127493324.706900,0.008,-3976.867,44.9,13028.379,08119c04,51,0,23917434.944,0.031,-99161492.405944,0.010,-3093.121,42.6,13024.238,10b13c0b,51,0,23917434.780,0.126,-99161488.657552,0.010,-3093.121,43.4,13025.178,00319c0b,38,8,19851538.779,0.107,-106117893.493769,0.007,1849.414,46.6,6208.818,08119c24,38,8,19851544.763,0.031,-82536182.471767,0.007,1438.434,42.6,6204.118,00b13c2b,38,8,19851543.771,0.124,-82536181.722576,0.007,1438.434,43.6,6205.038,00319c2b,25,0,27861125.116,0.078,-146411169.405727,0.011,-3136.592,43.2,21188.543,08539cc4,25,0,27861133.366,0.009,-109333028.194067,0.005,-2342.203,49.0,21186.443,01933cc4,25,0,27861129.463,0.011,-112185182.897162,0.006,-2403.344,47.0,21186.443,02333cc4,25,0,27861129.580,0.007,-110759098.611107,0.006,-2372.787,50.8,21186.164,02933cc4,4,0,25274631.488,0.038,-132819124.897734,0.006,997.361,49.6,7638.783,08539ce4,4,0,25274635.181,0.007,-99183140.380658,0.004,744.803,50.8,7636.565,01933ce4,4,0,25274631.890,0.007,-101770517.169783,0.004,764.254,50.9,7636.444,02333ce4,4,0,25274631.708,0.005,-100476824.840813,0.004,754.545,53.6,7636.363,02933ce4,12,0,26373649.887,0.092,-138594449.111813,0.012,-2565.281,41.8,26740.730,08539d04,12,0,26373653.619,0.019,-103495853.823161,0.008,-1915.449,42.6,26738.648,01933d04,12,0,26373650.081,0.023,-106195738.067164,0.011,-1965.500,41.1,26738.449,02333d04,12,0,26373650.251,0.015,-104845791.009488,0.010,-1940.442,44.6,26738.371,02933d04,11,0,22137124.256,0.039,-116331408.305147,0.015,-1200.216,49.2,19415.590,08539d24,11,0,22137125.344,0.008,-86870883.829203,0.011,-896.289,49.8,19413.172,01933d24,11,0,22137122.146,0.008,-89137066.170706,0.012,-919.719,49.6,19413.248,02333d24,11,0,22137121.891,0.006,-88003971.568373,0.011,-908.028,52.4,19413.172,02933d24,30,0,25928558.680,0.072,-136255508.290211,0.010,743.664,43.9,3960.112,08539d44,30,0,25928564.638,0.011,-101749279.487957,0.006,555.328,47.5,4752.748,01933d44,30,0,25928561.460,0.010,-104403592.595320,0.005,569.759,48.1,4753.047,02333d44,30,0,25928561.332,0.008,-103076425.609137,0.006,562.539,50.5,4752.767,02933d44,2,0,25889111.981,0.043,-136048218.157560,0.006,-1792.931,48.4,12654.424,08539d64,2,0,25889117.006,0.009,-101594476.864922,0.005,-1338.866,48.7,12652.444,01933d64,2,0,25889114.168,0.009,-104244753.680674,0.004,-1373.765,49.5,12651.978,02333d64,2,0,25889113.739,0.007,-102919609.843844,0.005,-1356.370,51.8,12651.943,02933d64,19,0,27039623.380,0.118,-142094196.888887,0.015,-1878.632,39.7,11125.104,08539d84,19,0,27039628.887,0.020,-106109319.847355,0.010,-1402.842,41.9,11123.043,01933d84,19,0,27039625.153,0.024,-108877382.476710,0.011,-1439.341,40.6,11122.757,02333d84,19,0,27039625.337,0.016,-107493348.232960,0.010,-1421.103,44.1,11122.765,02933d84,36,0,23927504.603,0.030,-125739945.419298,0.005,1241.596,51.7,11037.264,08539da4,36,0,23927510.217,0.006,-93896767.646843,0.004,927.156,52.9,11035.164,01933da4,36,0,23927507.273,0.006,-96346233.181780,0.004,951.361,53.2,11035.376,02333da4,36,0,23927507.057,0.004,-95121494.979676,0.004,939.285,55.8,11031.874,02933da4,9,0,24890379.004,0.046,-130799846.144936,0.007,3052.621,47.8,2955.889,08539dc4,9,0,24890384.304,0.009,-97675250.055577,0.005,2279.540,49.1,2953.828,01933dc4,9,0,24890381.065,0.008,-100223286.825938,0.004,2338.979,50.0,2953.762,02333dc4,9,0,24890381.366,0.006,-98949262.506583,0.005,2309.297,52.2,2949.700,02933dc4,23,0,26593863.945,0.036,-138481231.000933,0.010,-48.553,44.1,2628.888,08149ec4,23,0,26593862.563,0.010,-104360035.310223,0.005,-36.590,48.2,2623.647,41343ec4,34,0,23330414.273,0.017,-121487628.857801,0.005,2280.558,50.6,6539.069,58149ee4,34,0,23330415.641,0.008,-91553618.939049,0.005,1718.641,50.1,6533.770,41343ee4,35,0,24822913.452,0.024,-129259432.414616,0.007,-2925.143,47.4,23499.049,58149f04,35,0,24822915.980,0.012,-97410461.716286,0.006,-2204.368,46.7,23493.830,41343f04,11,0,24964039.739,0.052,-129994328.361984,0.014,2939.333,40.8,2708.970,18149f24,11,0,24964038.060,0.022,-100519869.959755,0.006,2272.851,48.3,2708.810,00349f24,19,0,23905947.282,0.033,-124484578.888819,0.009,-2342.726,44.8,13489.051,18149f44,19,0,23905949.046,0.008,-93812119.376225,0.005,-1765.479,50.1,13483.831,41343f44,21,0,24577306.170,0.027,-127980528.823414,0.008,3242.344,46.7,3439.068,18149f84,21,0,24577307.993,0.008,-96446682.849511,0.005,2443.502,49.7,3433.828,41343f84,22,0,22438270.920,0.015,-116842012.781567,0.005,729.096,51.5,8979.049,18149fa4,22,0,22438269.274,0.005,-88052653.428423,0.003,549.506,54.1,8973.770,41343fa4,44,0,21553538.984,0.014,-112234979.640419,0.005,-679.127,52.1,15439.131,48149ca4,44,0,21553540.824,0.005,-84580779.869687,0.003,-511.716,53.6,15433.829,41343ca4,57,0,26771391.610,0.021,-139405685.309616,0.007,-2069.940,48.5,20196.455,48049d04,12,0,21542689.063,0.021,-112178498.767984,0.006,952.964,48.8,11229.051,18149d24,12,0,21542686.409,0.013,-86743545.297369,0.004,736.976,52.6,11228.890,00349d24,25,0,26603375.741,0.069,-138530755.415895,0.019,-2155.462,38.4,9789.050,18149d44,25,0,26603380.238,0.015,-104397363.013083,0.007,-1624.205,44.7,9783.829,41343d44*5e9785bd\r\n";
   const char* gloalmanac_log = "#GLOALMANACA,COM1,0,54.0,SATTIME,2167,159108.000,02000000,ba83,16248;24,2167,115150.343,1,1,1,0,39532.343750000,1.316556988,0.022644193,0.000380516,-0.200759736,-2655.375000000,-0.000305176,-0.000080109,2167,80546.843,2,-4,1,0,4928.843750000,-2.415465471,0.030652651,0.001904488,-2.240858310,-2655.851562500,0.000305176,-0.000484467,2167,85554.000,3,5,1,0,9936.000000000,-2.786838624,0.027761457,0.001849174,-2.155051259,-2655.845703125,0.000244141,-0.000038147,2167,90494.343,4,6,1,0,14876.343750000,3.138599593,0.033250232,0.000991821,-1.632539054,-2655.865234375,0.000061035,-0.000095367,2167,95426.781,5,1,1,0,19808.781250000,2.781340861,0.033516881,0.000567436,-2.318803708,-2655.912109375,0.000000000,-0.000072479,2167,101118.375,6,-4,1,0,25500.375000000,2.337855630,0.022338595,0.000492096,2.475749118,-2655.802734375,-0.000183105,-0.000198364,2167,106019.281,7,5,1,0,30401.281250000,2.004915886,0.027902272,0.001599312,-2.137026985,-2655.806640625,-0.000122070,0.000041962,2167,110772.718,8,6,1,0,35154.718750000,1.658347082,0.028034098,0.002008438,-1.757079119,-2655.869140625,-0.000183105,0.000057220,2167,114259.031,9,-2,1,0,38641.031250000,-2.800770285,0.013374395,0.001688004,-2.688301331,-2655.992187500,-0.000915527,-0.000000000,2167,78451.250,10,-7,1,0,2833.250000000,-0.189087101,0.025562352,0.001439095,0.043239083,-2656.169921875,-0.001342773,0.000072479,2167,83619.250,11,0,1,1,8001.250000000,-0.568264981,0.030221219,0.000588417,-2.044029400,-2656.169921875,-0.001342773,0.000022888,2167,88863.437,12,-1,1,0,13245.437500000,-0.938955033,0.026368291,0.001175880,-1.256138518,-2655.986328125,-0.001159668,-0.000244141,2167,93781.406,13,-2,1,0,18163.406250000,-1.308018227,0.025406557,0.000337601,1.744136156,-2656.201171875,-0.001037598,0.000057220,2167,99049.875,14,-7,1,0,23431.875000000,-1.683226333,0.021385849,0.000715256,-2.112099797,-2656.009765625,-0.001098633,-0.000064850,2167,104050.250,15,0,1,0,28432.250000000,-2.043945510,0.025130920,0.000899315,-1.639250219,-2656.019531250,-0.001037598,-0.000099182,2167,109475.187,16,-1,1,0,33857.187500000,-2.465775247,0.018401777,0.002746582,0.205936921,-2655.822265625,-0.000854492,0.000015259,2167,112381.000,17,4,1,0,36763.000000000,-0.550378525,0.044683183,0.000854492,-3.118007699,-2655.976562500,0.001098633,-0.000438690,2167,76649.656,18,-3,1,0,1031.656250000,2.061364581,0.049192247,0.001056671,-0.229426002,-2656.011718750,0.001037598,-0.000083923,2167,81216.375,19,3,1,0,5598.375000000,1.753316072,0.053257895,0.000308990,2.031661680,-2656.169921875,0.000915527,0.000148773,2167,86932.187,20,2,1,0,11314.187500000,1.338137581,0.053485596,0.000810623,0.016106798,-2656.033203125,0.001037598,0.000049591,2167,92471.875,21,4,1,0,16853.875000000,0.905492081,0.048149620,0.000671387,2.711982159,-2655.875000000,0.001098633,0.000225067,2167,97225.437,22,-3,1,0,21607.437500000,0.566332524,0.051370380,0.002092361,0.380906604,-2656.091796875,0.001159668,0.000122070,2167,103403.781,23,3,1,0,27785.781250000,0.114991634,0.051142680,0.000539780,1.610679827,-2656.626953125,0.001098633,0.000007629,2167,107403.343,24,2,1,0,31785.343750000,-0.171967635,0.033052492,0.000456810,-2.399433574,-2656.039062500,0.001037598,-0.000049591*6dee109c\r\n";
   std.vector<std.tuple<uint32_t, HEADERFORMAT, MEASUREMENT_SOURCE>> message_ids  = [:43, HEADERFORMAT.ASCII, MEASUREMENT_SOURCE.PRIMARY },:718, HEADERFORMAT.ASCII, MEASUREMENT_SOURCE.PRIMARY ],;

   my_filter.include_message_id(message_ids);

   ASSERT_FALSE(TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(version_log))));   # Version ID: 37
   ASSERT_FALSE(TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(bestpos_log))));   # Bestpos ID: 42
   ASSERT_TRUE(TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(range_log))));      # Range ID: 43
   ASSERT_TRUE(TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(gloalmanac_log)))); # Gloalmanac ID: 718

def test_MESSAGE_NAME():
   const char* bestpos_log    = "#BESTPOSA,COM1,0,8.0,FINESTEERING,2180,313698.000,024000a0,cdba,32768;SOL_COMPUTED,SINGLE,51.15045046450,-114.03068725072,1097.2706,-17.0000,WGS84,1.3811,1.1629,3.1178,\"\",0.000,0.000,24,22,22,0,00,02,11,11*c64c3d4a\r\n";
   const char* version_log    = "#VERSIONA,COM1,0,55.5,FINESTEERING,2167,254938.857,02000000,3681,16248;8,GPSCARD,\"FFNBYNTMNP1\",\"BMHR15470120X\",\"OEM719N-0.00C\",\"OM7CR0707RN0000\",\"OM7BR0000RBG000\",\"2020/Apr/09\",\"13:40:45\",OEM7FPGA,\"\",\"\",\"\",\"OMV070001RN0000\",\"\",\"\",\"\",DEFAULT_CONFIG,\"\",\"\",\"\",\"EZDCD0707RN0001\",\"\",\"2020/Apr/09\",\"13:41:07\",APPLICATION,\"\",\"\",\"\",\"EZAPR0707RN0000\",\"\",\"2020/Apr/09\",\"13:41:00\",PACKAGE,\"\",\"\",\"\",\"EZPKR0103RN0000\",\"\",\"2020/Apr/09\",\"13:41:14\",ENCLOSURE,\"\",\"NMJC14520001W\",\"0.0.0.H\",\"\",\"\",\"\",\"\",IMUCARD,\"Epson G320N 125\",\"E0000114\",\"G320PDGN\",\"2302\",\"\",\"\",\"\",RADIO,\"M3-R4\",\"1843000570\",\"SPL0020d12\",\"V07.34.2.5.1.11\",\"\",\"\",\"\"*4b995016\r\n";
   const char* range_log      = "#RANGEA,COM1,0,49.0,FINESTEERING,2167,159740.000,02000000,5103,16248;115,20,0,23291390.821,0.051,-122397109.320305,0.011,-3214.414,44.0,16498.975,1810bc04,20,0,23291389.349,0.184,-95374376.486282,0.013,-2504.740,41.1,16492.754,11303c0b,29,0,20705108.295,0.022,-108806118.750397,0.005,-1620.698,51.2,14908.774,0810bc44,29,0,20705106.528,0.061,-84783996.294254,0.006,-1262.882,50.7,14902.754,01303c4b,29,0,20705107.069,0.025,-84783990.539554,0.005,-1262.882,51.3,14905.534,02309c4b,13,0,22941454.717,0.042,-120558183.531157,0.009,2111.590,45.7,3984.555,1810bc64,13,0,22941453.693,0.180,-93941456.741696,0.011,1645.396,41.2,3978.255,11303c6b,15,0,22752775.227,0.046,-119566687.005913,0.012,3112.730,44.8,3628.275,0810bc84,15,0,22752775.420,0.118,-93168858.308908,0.012,2425.506,44.9,3622.754,01303c8b,15,0,22752775.932,0.043,-93168851.550483,0.012,2425.505,46.7,3625.014,02309c8b,16,0,23437165.563,0.058,-123163154.592686,0.010,1667.743,42.8,3318.855,1810bca4,16,0,23437164.832,0.179,-95971289.711375,0.012,1299.540,41.3,3313.415,11303cab,18,0,20870226.835,0.024,-109673843.056839,0.005,1782.527,50.4,7988.975,1810bcc4,18,0,20870225.520,0.080,-85460161.951054,0.006,1388.983,48.3,7983.255,11303ccb,18,0,20870225.982,0.024,-85460166.200662,0.006,1388.983,51.9,7985.814,02309ccb,18,0,20870231.341,0.004,-81899348.012827,0.003,1331.096,55.4,7987.255,01d03cc4,5,0,20977730.840,0.024,-110238771.341810,0.006,-1850.683,50.6,12588.896,0810bd04,5,0,20977729.403,0.070,-85900356.288455,0.006,-1442.091,49.4,12583.755,01303d0b,5,0,20977730.127,0.030,-85900355.538492,0.006,-1442.091,49.8,12585.716,02309d0b,26,0,22753733.201,0.042,-119571694.561007,0.008,-494.798,45.7,7318.775,1810bd24,26,0,22753735.163,0.118,-93172767.333088,0.010,-385.557,44.9,7312.755,11303d2b,26,0,22753735.387,0.043,-93172769.582418,0.009,-385.557,46.7,7315.375,02309d2b,26,0,22753735.481,0.008,-89290576.088766,0.005,-369.472,50.1,7316.815,01d03d24,23,0,23067782.934,0.040,-121222050.181679,0.009,3453.274,46.0,3078.894,0810bd44,23,0,23067783.254,0.142,-94458759.273215,0.010,2690.865,43.3,3073.754,01303d4b,23,0,23067783.763,0.040,-94458764.522108,0.009,2690.865,47.3,3076.395,02309d4b,23,0,23067789.450,0.007,-90523004.360543,0.004,2578.883,51.2,3077.834,01d03d44,194,0,43027813.095,0.065,-226112681.899748,0.013,43.499,41.9,17178.695,1815be04,194,0,43027815.196,0.059,-176191709.875251,0.014,33.896,44.0,17173.014,02359e0b,194,0,43027817.865,0.014,-168850394.176443,0.007,32.406,45.4,17177.053,01d53e04,131,0,38480107.260,0.124,-202214296.438902,0.009,-0.922,46.2,292335.531,48023e84,133,0,38618703.555,0.119,-202942631.161186,0.007,0.421,46.7,916697.188,58023ec4,138,0,38495561.597,0.116,-202295515.714333,0.008,-4.752,46.8,292343.625,48023ee4,45,13,20655319.254,0.111,-110608334.938276,0.006,-1928.119,46.3,9728.839,18119f04,45,13,20655320.731,0.021,-86028727.119001,0.006,-1499.649,45.9,9724.239,10b13f0b,45,13,20655321.099,0.092,-86028721.367030,0.006,-1499.649,46.1,9725.238,10319f0b,53,6,23361335.550,0.284,-124792043.406215,0.017,1741.893,38.1,444.840,08119f24,53,6,23361340.271,0.098,-97060514.793435,0.017,1354.807,32.6,444.741,00b13f2b,53,6,23361339.423,0.393,-97060517.036654,0.018,1354.806,33.5,444.801,10319f2b,60,10,20724752.466,0.106,-110863493.957380,0.007,-2492.451,46.7,16549.037,18019f44,39,3,23534282.253,0.169,-125583452.109842,0.012,4608.280,42.6,557.668,08119f84,39,3,23534291.023,0.027,-97676038.550992,0.013,3584.223,43.8,552.119,10b13f8b,39,3,23534290.639,0.108,-97676048.806539,0.013,3584.223,44.7,552.959,10319f8b,61,9,19285134.504,0.086,-103126338.171372,0.005,228.766,48.6,11128.199,08119fa4,61,9,19285138.043,0.020,-80209402.132964,0.005,177.929,46.3,11124.118,00b13fab,61,9,19285138.376,0.084,-80209411.390794,0.005,177.929,46.9,11125.037,00319fab,52,7,22348227.548,0.137,-119422164.171132,0.008,-1798.230,44.4,7458.668,08119fc4,52,7,22348232.044,0.025,-92883929.564420,0.008,-1398.625,44.4,7453.898,00b13fcb,52,7,22348232.124,0.104,-92883930.822797,0.008,-1398.624,45.0,7455.038,10319fcb,54,11,21518220.426,0.169,-115148393.440041,0.010,3262.249,42.6,3877.098,18119fe4,54,11,21518225.678,0.025,-89559888.534930,0.010,2537.306,44.6,3871.818,00b13feb,54,11,21518226.376,0.107,-89559882.794247,0.010,2537.307,44.8,3872.818,10319feb,51,0,23917426.780,0.130,-127493324.706900,0.008,-3976.867,44.9,13028.379,08119c04,51,0,23917434.944,0.031,-99161492.405944,0.010,-3093.121,42.6,13024.238,10b13c0b,51,0,23917434.780,0.126,-99161488.657552,0.010,-3093.121,43.4,13025.178,00319c0b,38,8,19851538.779,0.107,-106117893.493769,0.007,1849.414,46.6,6208.818,08119c24,38,8,19851544.763,0.031,-82536182.471767,0.007,1438.434,42.6,6204.118,00b13c2b,38,8,19851543.771,0.124,-82536181.722576,0.007,1438.434,43.6,6205.038,00319c2b,25,0,27861125.116,0.078,-146411169.405727,0.011,-3136.592,43.2,21188.543,08539cc4,25,0,27861133.366,0.009,-109333028.194067,0.005,-2342.203,49.0,21186.443,01933cc4,25,0,27861129.463,0.011,-112185182.897162,0.006,-2403.344,47.0,21186.443,02333cc4,25,0,27861129.580,0.007,-110759098.611107,0.006,-2372.787,50.8,21186.164,02933cc4,4,0,25274631.488,0.038,-132819124.897734,0.006,997.361,49.6,7638.783,08539ce4,4,0,25274635.181,0.007,-99183140.380658,0.004,744.803,50.8,7636.565,01933ce4,4,0,25274631.890,0.007,-101770517.169783,0.004,764.254,50.9,7636.444,02333ce4,4,0,25274631.708,0.005,-100476824.840813,0.004,754.545,53.6,7636.363,02933ce4,12,0,26373649.887,0.092,-138594449.111813,0.012,-2565.281,41.8,26740.730,08539d04,12,0,26373653.619,0.019,-103495853.823161,0.008,-1915.449,42.6,26738.648,01933d04,12,0,26373650.081,0.023,-106195738.067164,0.011,-1965.500,41.1,26738.449,02333d04,12,0,26373650.251,0.015,-104845791.009488,0.010,-1940.442,44.6,26738.371,02933d04,11,0,22137124.256,0.039,-116331408.305147,0.015,-1200.216,49.2,19415.590,08539d24,11,0,22137125.344,0.008,-86870883.829203,0.011,-896.289,49.8,19413.172,01933d24,11,0,22137122.146,0.008,-89137066.170706,0.012,-919.719,49.6,19413.248,02333d24,11,0,22137121.891,0.006,-88003971.568373,0.011,-908.028,52.4,19413.172,02933d24,30,0,25928558.680,0.072,-136255508.290211,0.010,743.664,43.9,3960.112,08539d44,30,0,25928564.638,0.011,-101749279.487957,0.006,555.328,47.5,4752.748,01933d44,30,0,25928561.460,0.010,-104403592.595320,0.005,569.759,48.1,4753.047,02333d44,30,0,25928561.332,0.008,-103076425.609137,0.006,562.539,50.5,4752.767,02933d44,2,0,25889111.981,0.043,-136048218.157560,0.006,-1792.931,48.4,12654.424,08539d64,2,0,25889117.006,0.009,-101594476.864922,0.005,-1338.866,48.7,12652.444,01933d64,2,0,25889114.168,0.009,-104244753.680674,0.004,-1373.765,49.5,12651.978,02333d64,2,0,25889113.739,0.007,-102919609.843844,0.005,-1356.370,51.8,12651.943,02933d64,19,0,27039623.380,0.118,-142094196.888887,0.015,-1878.632,39.7,11125.104,08539d84,19,0,27039628.887,0.020,-106109319.847355,0.010,-1402.842,41.9,11123.043,01933d84,19,0,27039625.153,0.024,-108877382.476710,0.011,-1439.341,40.6,11122.757,02333d84,19,0,27039625.337,0.016,-107493348.232960,0.010,-1421.103,44.1,11122.765,02933d84,36,0,23927504.603,0.030,-125739945.419298,0.005,1241.596,51.7,11037.264,08539da4,36,0,23927510.217,0.006,-93896767.646843,0.004,927.156,52.9,11035.164,01933da4,36,0,23927507.273,0.006,-96346233.181780,0.004,951.361,53.2,11035.376,02333da4,36,0,23927507.057,0.004,-95121494.979676,0.004,939.285,55.8,11031.874,02933da4,9,0,24890379.004,0.046,-130799846.144936,0.007,3052.621,47.8,2955.889,08539dc4,9,0,24890384.304,0.009,-97675250.055577,0.005,2279.540,49.1,2953.828,01933dc4,9,0,24890381.065,0.008,-100223286.825938,0.004,2338.979,50.0,2953.762,02333dc4,9,0,24890381.366,0.006,-98949262.506583,0.005,2309.297,52.2,2949.700,02933dc4,23,0,26593863.945,0.036,-138481231.000933,0.010,-48.553,44.1,2628.888,08149ec4,23,0,26593862.563,0.010,-104360035.310223,0.005,-36.590,48.2,2623.647,41343ec4,34,0,23330414.273,0.017,-121487628.857801,0.005,2280.558,50.6,6539.069,58149ee4,34,0,23330415.641,0.008,-91553618.939049,0.005,1718.641,50.1,6533.770,41343ee4,35,0,24822913.452,0.024,-129259432.414616,0.007,-2925.143,47.4,23499.049,58149f04,35,0,24822915.980,0.012,-97410461.716286,0.006,-2204.368,46.7,23493.830,41343f04,11,0,24964039.739,0.052,-129994328.361984,0.014,2939.333,40.8,2708.970,18149f24,11,0,24964038.060,0.022,-100519869.959755,0.006,2272.851,48.3,2708.810,00349f24,19,0,23905947.282,0.033,-124484578.888819,0.009,-2342.726,44.8,13489.051,18149f44,19,0,23905949.046,0.008,-93812119.376225,0.005,-1765.479,50.1,13483.831,41343f44,21,0,24577306.170,0.027,-127980528.823414,0.008,3242.344,46.7,3439.068,18149f84,21,0,24577307.993,0.008,-96446682.849511,0.005,2443.502,49.7,3433.828,41343f84,22,0,22438270.920,0.015,-116842012.781567,0.005,729.096,51.5,8979.049,18149fa4,22,0,22438269.274,0.005,-88052653.428423,0.003,549.506,54.1,8973.770,41343fa4,44,0,21553538.984,0.014,-112234979.640419,0.005,-679.127,52.1,15439.131,48149ca4,44,0,21553540.824,0.005,-84580779.869687,0.003,-511.716,53.6,15433.829,41343ca4,57,0,26771391.610,0.021,-139405685.309616,0.007,-2069.940,48.5,20196.455,48049d04,12,0,21542689.063,0.021,-112178498.767984,0.006,952.964,48.8,11229.051,18149d24,12,0,21542686.409,0.013,-86743545.297369,0.004,736.976,52.6,11228.890,00349d24,25,0,26603375.741,0.069,-138530755.415895,0.019,-2155.462,38.4,9789.050,18149d44,25,0,26603380.238,0.015,-104397363.013083,0.007,-1624.205,44.7,9783.829,41343d44*5e9785bd\r\n";
   const char* gloalmanac_log = "#GLOALMANACA,COM1,0,54.0,SATTIME,2167,159108.000,02000000,ba83,16248;24,2167,115150.343,1,1,1,0,39532.343750000,1.316556988,0.022644193,0.000380516,-0.200759736,-2655.375000000,-0.000305176,-0.000080109,2167,80546.843,2,-4,1,0,4928.843750000,-2.415465471,0.030652651,0.001904488,-2.240858310,-2655.851562500,0.000305176,-0.000484467,2167,85554.000,3,5,1,0,9936.000000000,-2.786838624,0.027761457,0.001849174,-2.155051259,-2655.845703125,0.000244141,-0.000038147,2167,90494.343,4,6,1,0,14876.343750000,3.138599593,0.033250232,0.000991821,-1.632539054,-2655.865234375,0.000061035,-0.000095367,2167,95426.781,5,1,1,0,19808.781250000,2.781340861,0.033516881,0.000567436,-2.318803708,-2655.912109375,0.000000000,-0.000072479,2167,101118.375,6,-4,1,0,25500.375000000,2.337855630,0.022338595,0.000492096,2.475749118,-2655.802734375,-0.000183105,-0.000198364,2167,106019.281,7,5,1,0,30401.281250000,2.004915886,0.027902272,0.001599312,-2.137026985,-2655.806640625,-0.000122070,0.000041962,2167,110772.718,8,6,1,0,35154.718750000,1.658347082,0.028034098,0.002008438,-1.757079119,-2655.869140625,-0.000183105,0.000057220,2167,114259.031,9,-2,1,0,38641.031250000,-2.800770285,0.013374395,0.001688004,-2.688301331,-2655.992187500,-0.000915527,-0.000000000,2167,78451.250,10,-7,1,0,2833.250000000,-0.189087101,0.025562352,0.001439095,0.043239083,-2656.169921875,-0.001342773,0.000072479,2167,83619.250,11,0,1,1,8001.250000000,-0.568264981,0.030221219,0.000588417,-2.044029400,-2656.169921875,-0.001342773,0.000022888,2167,88863.437,12,-1,1,0,13245.437500000,-0.938955033,0.026368291,0.001175880,-1.256138518,-2655.986328125,-0.001159668,-0.000244141,2167,93781.406,13,-2,1,0,18163.406250000,-1.308018227,0.025406557,0.000337601,1.744136156,-2656.201171875,-0.001037598,0.000057220,2167,99049.875,14,-7,1,0,23431.875000000,-1.683226333,0.021385849,0.000715256,-2.112099797,-2656.009765625,-0.001098633,-0.000064850,2167,104050.250,15,0,1,0,28432.250000000,-2.043945510,0.025130920,0.000899315,-1.639250219,-2656.019531250,-0.001037598,-0.000099182,2167,109475.187,16,-1,1,0,33857.187500000,-2.465775247,0.018401777,0.002746582,0.205936921,-2655.822265625,-0.000854492,0.000015259,2167,112381.000,17,4,1,0,36763.000000000,-0.550378525,0.044683183,0.000854492,-3.118007699,-2655.976562500,0.001098633,-0.000438690,2167,76649.656,18,-3,1,0,1031.656250000,2.061364581,0.049192247,0.001056671,-0.229426002,-2656.011718750,0.001037598,-0.000083923,2167,81216.375,19,3,1,0,5598.375000000,1.753316072,0.053257895,0.000308990,2.031661680,-2656.169921875,0.000915527,0.000148773,2167,86932.187,20,2,1,0,11314.187500000,1.338137581,0.053485596,0.000810623,0.016106798,-2656.033203125,0.001037598,0.000049591,2167,92471.875,21,4,1,0,16853.875000000,0.905492081,0.048149620,0.000671387,2.711982159,-2655.875000000,0.001098633,0.000225067,2167,97225.437,22,-3,1,0,21607.437500000,0.566332524,0.051370380,0.002092361,0.380906604,-2656.091796875,0.001159668,0.000122070,2167,103403.781,23,3,1,0,27785.781250000,0.114991634,0.051142680,0.000539780,1.610679827,-2656.626953125,0.001098633,0.000007629,2167,107403.343,24,2,1,0,31785.343750000,-0.171967635,0.033052492,0.000456810,-2.399433574,-2656.039062500,0.001037598,-0.000049591*6dee109c\r\n";

   my_filter.include_message_name("BESTPOS");
   my_filter.include_message_name("RANGE");

   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(bestpos_log)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(range_log)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(version_log)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(gloalmanac_log)))

   my_filter.invert_message_name_filter(True);

   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(bestpos_log)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(range_log)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(version_log)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(gloalmanac_log)))

def test_MEASUREMENT_SOURCE_SECONDARY():
   const char* rawwaasframe_0_log = "#RAWWAASFRAMEA,COM2,0,77.5,SATTIME,1747,411899.000,00000020,58e4,11526;62,138,9,c6243a0581b555352c4056aae0103cf03daff2e00057ff7fdff8010180,62*b026c677\r\n";
   const char* rawwaasframe_1_log = "#RAWWAASFRAMEA_1,COM2,0,77.5,SATTIME,1747,411899.000,00000020,58e4,11526;62,138,9,c6243a0581b555352c4056aae0103cf03daff2e00057ff7fdff8010180,62*b026c677\r\n";
   const char* range_0_log        = "#RANGEA,COM1,0,49.0,FINESTEERING,2167,159740.000,02000000,5103,16248;115,20,0,23291390.821,0.051,-122397109.320305,0.011,-3214.414,44.0,16498.975,1810bc04,20,0,23291389.349,0.184,-95374376.486282,0.013,-2504.740,41.1,16492.754,11303c0b,29,0,20705108.295,0.022,-108806118.750397,0.005,-1620.698,51.2,14908.774,0810bc44,29,0,20705106.528,0.061,-84783996.294254,0.006,-1262.882,50.7,14902.754,01303c4b,29,0,20705107.069,0.025,-84783990.539554,0.005,-1262.882,51.3,14905.534,02309c4b,13,0,22941454.717,0.042,-120558183.531157,0.009,2111.590,45.7,3984.555,1810bc64,13,0,22941453.693,0.180,-93941456.741696,0.011,1645.396,41.2,3978.255,11303c6b,15,0,22752775.227,0.046,-119566687.005913,0.012,3112.730,44.8,3628.275,0810bc84,15,0,22752775.420,0.118,-93168858.308908,0.012,2425.506,44.9,3622.754,01303c8b,15,0,22752775.932,0.043,-93168851.550483,0.012,2425.505,46.7,3625.014,02309c8b,16,0,23437165.563,0.058,-123163154.592686,0.010,1667.743,42.8,3318.855,1810bca4,16,0,23437164.832,0.179,-95971289.711375,0.012,1299.540,41.3,3313.415,11303cab,18,0,20870226.835,0.024,-109673843.056839,0.005,1782.527,50.4,7988.975,1810bcc4,18,0,20870225.520,0.080,-85460161.951054,0.006,1388.983,48.3,7983.255,11303ccb,18,0,20870225.982,0.024,-85460166.200662,0.006,1388.983,51.9,7985.814,02309ccb,18,0,20870231.341,0.004,-81899348.012827,0.003,1331.096,55.4,7987.255,01d03cc4,5,0,20977730.840,0.024,-110238771.341810,0.006,-1850.683,50.6,12588.896,0810bd04,5,0,20977729.403,0.070,-85900356.288455,0.006,-1442.091,49.4,12583.755,01303d0b,5,0,20977730.127,0.030,-85900355.538492,0.006,-1442.091,49.8,12585.716,02309d0b,26,0,22753733.201,0.042,-119571694.561007,0.008,-494.798,45.7,7318.775,1810bd24,26,0,22753735.163,0.118,-93172767.333088,0.010,-385.557,44.9,7312.755,11303d2b,26,0,22753735.387,0.043,-93172769.582418,0.009,-385.557,46.7,7315.375,02309d2b,26,0,22753735.481,0.008,-89290576.088766,0.005,-369.472,50.1,7316.815,01d03d24,23,0,23067782.934,0.040,-121222050.181679,0.009,3453.274,46.0,3078.894,0810bd44,23,0,23067783.254,0.142,-94458759.273215,0.010,2690.865,43.3,3073.754,01303d4b,23,0,23067783.763,0.040,-94458764.522108,0.009,2690.865,47.3,3076.395,02309d4b,23,0,23067789.450,0.007,-90523004.360543,0.004,2578.883,51.2,3077.834,01d03d44,194,0,43027813.095,0.065,-226112681.899748,0.013,43.499,41.9,17178.695,1815be04,194,0,43027815.196,0.059,-176191709.875251,0.014,33.896,44.0,17173.014,02359e0b,194,0,43027817.865,0.014,-168850394.176443,0.007,32.406,45.4,17177.053,01d53e04,131,0,38480107.260,0.124,-202214296.438902,0.009,-0.922,46.2,292335.531,48023e84,133,0,38618703.555,0.119,-202942631.161186,0.007,0.421,46.7,916697.188,58023ec4,138,0,38495561.597,0.116,-202295515.714333,0.008,-4.752,46.8,292343.625,48023ee4,45,13,20655319.254,0.111,-110608334.938276,0.006,-1928.119,46.3,9728.839,18119f04,45,13,20655320.731,0.021,-86028727.119001,0.006,-1499.649,45.9,9724.239,10b13f0b,45,13,20655321.099,0.092,-86028721.367030,0.006,-1499.649,46.1,9725.238,10319f0b,53,6,23361335.550,0.284,-124792043.406215,0.017,1741.893,38.1,444.840,08119f24,53,6,23361340.271,0.098,-97060514.793435,0.017,1354.807,32.6,444.741,00b13f2b,53,6,23361339.423,0.393,-97060517.036654,0.018,1354.806,33.5,444.801,10319f2b,60,10,20724752.466,0.106,-110863493.957380,0.007,-2492.451,46.7,16549.037,18019f44,39,3,23534282.253,0.169,-125583452.109842,0.012,4608.280,42.6,557.668,08119f84,39,3,23534291.023,0.027,-97676038.550992,0.013,3584.223,43.8,552.119,10b13f8b,39,3,23534290.639,0.108,-97676048.806539,0.013,3584.223,44.7,552.959,10319f8b,61,9,19285134.504,0.086,-103126338.171372,0.005,228.766,48.6,11128.199,08119fa4,61,9,19285138.043,0.020,-80209402.132964,0.005,177.929,46.3,11124.118,00b13fab,61,9,19285138.376,0.084,-80209411.390794,0.005,177.929,46.9,11125.037,00319fab,52,7,22348227.548,0.137,-119422164.171132,0.008,-1798.230,44.4,7458.668,08119fc4,52,7,22348232.044,0.025,-92883929.564420,0.008,-1398.625,44.4,7453.898,00b13fcb,52,7,22348232.124,0.104,-92883930.822797,0.008,-1398.624,45.0,7455.038,10319fcb,54,11,21518220.426,0.169,-115148393.440041,0.010,3262.249,42.6,3877.098,18119fe4,54,11,21518225.678,0.025,-89559888.534930,0.010,2537.306,44.6,3871.818,00b13feb,54,11,21518226.376,0.107,-89559882.794247,0.010,2537.307,44.8,3872.818,10319feb,51,0,23917426.780,0.130,-127493324.706900,0.008,-3976.867,44.9,13028.379,08119c04,51,0,23917434.944,0.031,-99161492.405944,0.010,-3093.121,42.6,13024.238,10b13c0b,51,0,23917434.780,0.126,-99161488.657552,0.010,-3093.121,43.4,13025.178,00319c0b,38,8,19851538.779,0.107,-106117893.493769,0.007,1849.414,46.6,6208.818,08119c24,38,8,19851544.763,0.031,-82536182.471767,0.007,1438.434,42.6,6204.118,00b13c2b,38,8,19851543.771,0.124,-82536181.722576,0.007,1438.434,43.6,6205.038,00319c2b,25,0,27861125.116,0.078,-146411169.405727,0.011,-3136.592,43.2,21188.543,08539cc4,25,0,27861133.366,0.009,-109333028.194067,0.005,-2342.203,49.0,21186.443,01933cc4,25,0,27861129.463,0.011,-112185182.897162,0.006,-2403.344,47.0,21186.443,02333cc4,25,0,27861129.580,0.007,-110759098.611107,0.006,-2372.787,50.8,21186.164,02933cc4,4,0,25274631.488,0.038,-132819124.897734,0.006,997.361,49.6,7638.783,08539ce4,4,0,25274635.181,0.007,-99183140.380658,0.004,744.803,50.8,7636.565,01933ce4,4,0,25274631.890,0.007,-101770517.169783,0.004,764.254,50.9,7636.444,02333ce4,4,0,25274631.708,0.005,-100476824.840813,0.004,754.545,53.6,7636.363,02933ce4,12,0,26373649.887,0.092,-138594449.111813,0.012,-2565.281,41.8,26740.730,08539d04,12,0,26373653.619,0.019,-103495853.823161,0.008,-1915.449,42.6,26738.648,01933d04,12,0,26373650.081,0.023,-106195738.067164,0.011,-1965.500,41.1,26738.449,02333d04,12,0,26373650.251,0.015,-104845791.009488,0.010,-1940.442,44.6,26738.371,02933d04,11,0,22137124.256,0.039,-116331408.305147,0.015,-1200.216,49.2,19415.590,08539d24,11,0,22137125.344,0.008,-86870883.829203,0.011,-896.289,49.8,19413.172,01933d24,11,0,22137122.146,0.008,-89137066.170706,0.012,-919.719,49.6,19413.248,02333d24,11,0,22137121.891,0.006,-88003971.568373,0.011,-908.028,52.4,19413.172,02933d24,30,0,25928558.680,0.072,-136255508.290211,0.010,743.664,43.9,3960.112,08539d44,30,0,25928564.638,0.011,-101749279.487957,0.006,555.328,47.5,4752.748,01933d44,30,0,25928561.460,0.010,-104403592.595320,0.005,569.759,48.1,4753.047,02333d44,30,0,25928561.332,0.008,-103076425.609137,0.006,562.539,50.5,4752.767,02933d44,2,0,25889111.981,0.043,-136048218.157560,0.006,-1792.931,48.4,12654.424,08539d64,2,0,25889117.006,0.009,-101594476.864922,0.005,-1338.866,48.7,12652.444,01933d64,2,0,25889114.168,0.009,-104244753.680674,0.004,-1373.765,49.5,12651.978,02333d64,2,0,25889113.739,0.007,-102919609.843844,0.005,-1356.370,51.8,12651.943,02933d64,19,0,27039623.380,0.118,-142094196.888887,0.015,-1878.632,39.7,11125.104,08539d84,19,0,27039628.887,0.020,-106109319.847355,0.010,-1402.842,41.9,11123.043,01933d84,19,0,27039625.153,0.024,-108877382.476710,0.011,-1439.341,40.6,11122.757,02333d84,19,0,27039625.337,0.016,-107493348.232960,0.010,-1421.103,44.1,11122.765,02933d84,36,0,23927504.603,0.030,-125739945.419298,0.005,1241.596,51.7,11037.264,08539da4,36,0,23927510.217,0.006,-93896767.646843,0.004,927.156,52.9,11035.164,01933da4,36,0,23927507.273,0.006,-96346233.181780,0.004,951.361,53.2,11035.376,02333da4,36,0,23927507.057,0.004,-95121494.979676,0.004,939.285,55.8,11031.874,02933da4,9,0,24890379.004,0.046,-130799846.144936,0.007,3052.621,47.8,2955.889,08539dc4,9,0,24890384.304,0.009,-97675250.055577,0.005,2279.540,49.1,2953.828,01933dc4,9,0,24890381.065,0.008,-100223286.825938,0.004,2338.979,50.0,2953.762,02333dc4,9,0,24890381.366,0.006,-98949262.506583,0.005,2309.297,52.2,2949.700,02933dc4,23,0,26593863.945,0.036,-138481231.000933,0.010,-48.553,44.1,2628.888,08149ec4,23,0,26593862.563,0.010,-104360035.310223,0.005,-36.590,48.2,2623.647,41343ec4,34,0,23330414.273,0.017,-121487628.857801,0.005,2280.558,50.6,6539.069,58149ee4,34,0,23330415.641,0.008,-91553618.939049,0.005,1718.641,50.1,6533.770,41343ee4,35,0,24822913.452,0.024,-129259432.414616,0.007,-2925.143,47.4,23499.049,58149f04,35,0,24822915.980,0.012,-97410461.716286,0.006,-2204.368,46.7,23493.830,41343f04,11,0,24964039.739,0.052,-129994328.361984,0.014,2939.333,40.8,2708.970,18149f24,11,0,24964038.060,0.022,-100519869.959755,0.006,2272.851,48.3,2708.810,00349f24,19,0,23905947.282,0.033,-124484578.888819,0.009,-2342.726,44.8,13489.051,18149f44,19,0,23905949.046,0.008,-93812119.376225,0.005,-1765.479,50.1,13483.831,41343f44,21,0,24577306.170,0.027,-127980528.823414,0.008,3242.344,46.7,3439.068,18149f84,21,0,24577307.993,0.008,-96446682.849511,0.005,2443.502,49.7,3433.828,41343f84,22,0,22438270.920,0.015,-116842012.781567,0.005,729.096,51.5,8979.049,18149fa4,22,0,22438269.274,0.005,-88052653.428423,0.003,549.506,54.1,8973.770,41343fa4,44,0,21553538.984,0.014,-112234979.640419,0.005,-679.127,52.1,15439.131,48149ca4,44,0,21553540.824,0.005,-84580779.869687,0.003,-511.716,53.6,15433.829,41343ca4,57,0,26771391.610,0.021,-139405685.309616,0.007,-2069.940,48.5,20196.455,48049d04,12,0,21542689.063,0.021,-112178498.767984,0.006,952.964,48.8,11229.051,18149d24,12,0,21542686.409,0.013,-86743545.297369,0.004,736.976,52.6,11228.890,00349d24,25,0,26603375.741,0.069,-138530755.415895,0.019,-2155.462,38.4,9789.050,18149d44,25,0,26603380.238,0.015,-104397363.013083,0.007,-1624.205,44.7,9783.829,41343d44*5e9785bd\r\n";
   const char* range_1_log        = "#RANGEA_1,COM1,0,49.0,FINESTEERING,2167,159740.000,02000000,5103,16248;115,20,0,23291390.821,0.051,-122397109.320305,0.011,-3214.414,44.0,16498.975,1810bc04,20,0,23291389.349,0.184,-95374376.486282,0.013,-2504.740,41.1,16492.754,11303c0b,29,0,20705108.295,0.022,-108806118.750397,0.005,-1620.698,51.2,14908.774,0810bc44,29,0,20705106.528,0.061,-84783996.294254,0.006,-1262.882,50.7,14902.754,01303c4b,29,0,20705107.069,0.025,-84783990.539554,0.005,-1262.882,51.3,14905.534,02309c4b,13,0,22941454.717,0.042,-120558183.531157,0.009,2111.590,45.7,3984.555,1810bc64,13,0,22941453.693,0.180,-93941456.741696,0.011,1645.396,41.2,3978.255,11303c6b,15,0,22752775.227,0.046,-119566687.005913,0.012,3112.730,44.8,3628.275,0810bc84,15,0,22752775.420,0.118,-93168858.308908,0.012,2425.506,44.9,3622.754,01303c8b,15,0,22752775.932,0.043,-93168851.550483,0.012,2425.505,46.7,3625.014,02309c8b,16,0,23437165.563,0.058,-123163154.592686,0.010,1667.743,42.8,3318.855,1810bca4,16,0,23437164.832,0.179,-95971289.711375,0.012,1299.540,41.3,3313.415,11303cab,18,0,20870226.835,0.024,-109673843.056839,0.005,1782.527,50.4,7988.975,1810bcc4,18,0,20870225.520,0.080,-85460161.951054,0.006,1388.983,48.3,7983.255,11303ccb,18,0,20870225.982,0.024,-85460166.200662,0.006,1388.983,51.9,7985.814,02309ccb,18,0,20870231.341,0.004,-81899348.012827,0.003,1331.096,55.4,7987.255,01d03cc4,5,0,20977730.840,0.024,-110238771.341810,0.006,-1850.683,50.6,12588.896,0810bd04,5,0,20977729.403,0.070,-85900356.288455,0.006,-1442.091,49.4,12583.755,01303d0b,5,0,20977730.127,0.030,-85900355.538492,0.006,-1442.091,49.8,12585.716,02309d0b,26,0,22753733.201,0.042,-119571694.561007,0.008,-494.798,45.7,7318.775,1810bd24,26,0,22753735.163,0.118,-93172767.333088,0.010,-385.557,44.9,7312.755,11303d2b,26,0,22753735.387,0.043,-93172769.582418,0.009,-385.557,46.7,7315.375,02309d2b,26,0,22753735.481,0.008,-89290576.088766,0.005,-369.472,50.1,7316.815,01d03d24,23,0,23067782.934,0.040,-121222050.181679,0.009,3453.274,46.0,3078.894,0810bd44,23,0,23067783.254,0.142,-94458759.273215,0.010,2690.865,43.3,3073.754,01303d4b,23,0,23067783.763,0.040,-94458764.522108,0.009,2690.865,47.3,3076.395,02309d4b,23,0,23067789.450,0.007,-90523004.360543,0.004,2578.883,51.2,3077.834,01d03d44,194,0,43027813.095,0.065,-226112681.899748,0.013,43.499,41.9,17178.695,1815be04,194,0,43027815.196,0.059,-176191709.875251,0.014,33.896,44.0,17173.014,02359e0b,194,0,43027817.865,0.014,-168850394.176443,0.007,32.406,45.4,17177.053,01d53e04,131,0,38480107.260,0.124,-202214296.438902,0.009,-0.922,46.2,292335.531,48023e84,133,0,38618703.555,0.119,-202942631.161186,0.007,0.421,46.7,916697.188,58023ec4,138,0,38495561.597,0.116,-202295515.714333,0.008,-4.752,46.8,292343.625,48023ee4,45,13,20655319.254,0.111,-110608334.938276,0.006,-1928.119,46.3,9728.839,18119f04,45,13,20655320.731,0.021,-86028727.119001,0.006,-1499.649,45.9,9724.239,10b13f0b,45,13,20655321.099,0.092,-86028721.367030,0.006,-1499.649,46.1,9725.238,10319f0b,53,6,23361335.550,0.284,-124792043.406215,0.017,1741.893,38.1,444.840,08119f24,53,6,23361340.271,0.098,-97060514.793435,0.017,1354.807,32.6,444.741,00b13f2b,53,6,23361339.423,0.393,-97060517.036654,0.018,1354.806,33.5,444.801,10319f2b,60,10,20724752.466,0.106,-110863493.957380,0.007,-2492.451,46.7,16549.037,18019f44,39,3,23534282.253,0.169,-125583452.109842,0.012,4608.280,42.6,557.668,08119f84,39,3,23534291.023,0.027,-97676038.550992,0.013,3584.223,43.8,552.119,10b13f8b,39,3,23534290.639,0.108,-97676048.806539,0.013,3584.223,44.7,552.959,10319f8b,61,9,19285134.504,0.086,-103126338.171372,0.005,228.766,48.6,11128.199,08119fa4,61,9,19285138.043,0.020,-80209402.132964,0.005,177.929,46.3,11124.118,00b13fab,61,9,19285138.376,0.084,-80209411.390794,0.005,177.929,46.9,11125.037,00319fab,52,7,22348227.548,0.137,-119422164.171132,0.008,-1798.230,44.4,7458.668,08119fc4,52,7,22348232.044,0.025,-92883929.564420,0.008,-1398.625,44.4,7453.898,00b13fcb,52,7,22348232.124,0.104,-92883930.822797,0.008,-1398.624,45.0,7455.038,10319fcb,54,11,21518220.426,0.169,-115148393.440041,0.010,3262.249,42.6,3877.098,18119fe4,54,11,21518225.678,0.025,-89559888.534930,0.010,2537.306,44.6,3871.818,00b13feb,54,11,21518226.376,0.107,-89559882.794247,0.010,2537.307,44.8,3872.818,10319feb,51,0,23917426.780,0.130,-127493324.706900,0.008,-3976.867,44.9,13028.379,08119c04,51,0,23917434.944,0.031,-99161492.405944,0.010,-3093.121,42.6,13024.238,10b13c0b,51,0,23917434.780,0.126,-99161488.657552,0.010,-3093.121,43.4,13025.178,00319c0b,38,8,19851538.779,0.107,-106117893.493769,0.007,1849.414,46.6,6208.818,08119c24,38,8,19851544.763,0.031,-82536182.471767,0.007,1438.434,42.6,6204.118,00b13c2b,38,8,19851543.771,0.124,-82536181.722576,0.007,1438.434,43.6,6205.038,00319c2b,25,0,27861125.116,0.078,-146411169.405727,0.011,-3136.592,43.2,21188.543,08539cc4,25,0,27861133.366,0.009,-109333028.194067,0.005,-2342.203,49.0,21186.443,01933cc4,25,0,27861129.463,0.011,-112185182.897162,0.006,-2403.344,47.0,21186.443,02333cc4,25,0,27861129.580,0.007,-110759098.611107,0.006,-2372.787,50.8,21186.164,02933cc4,4,0,25274631.488,0.038,-132819124.897734,0.006,997.361,49.6,7638.783,08539ce4,4,0,25274635.181,0.007,-99183140.380658,0.004,744.803,50.8,7636.565,01933ce4,4,0,25274631.890,0.007,-101770517.169783,0.004,764.254,50.9,7636.444,02333ce4,4,0,25274631.708,0.005,-100476824.840813,0.004,754.545,53.6,7636.363,02933ce4,12,0,26373649.887,0.092,-138594449.111813,0.012,-2565.281,41.8,26740.730,08539d04,12,0,26373653.619,0.019,-103495853.823161,0.008,-1915.449,42.6,26738.648,01933d04,12,0,26373650.081,0.023,-106195738.067164,0.011,-1965.500,41.1,26738.449,02333d04,12,0,26373650.251,0.015,-104845791.009488,0.010,-1940.442,44.6,26738.371,02933d04,11,0,22137124.256,0.039,-116331408.305147,0.015,-1200.216,49.2,19415.590,08539d24,11,0,22137125.344,0.008,-86870883.829203,0.011,-896.289,49.8,19413.172,01933d24,11,0,22137122.146,0.008,-89137066.170706,0.012,-919.719,49.6,19413.248,02333d24,11,0,22137121.891,0.006,-88003971.568373,0.011,-908.028,52.4,19413.172,02933d24,30,0,25928558.680,0.072,-136255508.290211,0.010,743.664,43.9,3960.112,08539d44,30,0,25928564.638,0.011,-101749279.487957,0.006,555.328,47.5,4752.748,01933d44,30,0,25928561.460,0.010,-104403592.595320,0.005,569.759,48.1,4753.047,02333d44,30,0,25928561.332,0.008,-103076425.609137,0.006,562.539,50.5,4752.767,02933d44,2,0,25889111.981,0.043,-136048218.157560,0.006,-1792.931,48.4,12654.424,08539d64,2,0,25889117.006,0.009,-101594476.864922,0.005,-1338.866,48.7,12652.444,01933d64,2,0,25889114.168,0.009,-104244753.680674,0.004,-1373.765,49.5,12651.978,02333d64,2,0,25889113.739,0.007,-102919609.843844,0.005,-1356.370,51.8,12651.943,02933d64,19,0,27039623.380,0.118,-142094196.888887,0.015,-1878.632,39.7,11125.104,08539d84,19,0,27039628.887,0.020,-106109319.847355,0.010,-1402.842,41.9,11123.043,01933d84,19,0,27039625.153,0.024,-108877382.476710,0.011,-1439.341,40.6,11122.757,02333d84,19,0,27039625.337,0.016,-107493348.232960,0.010,-1421.103,44.1,11122.765,02933d84,36,0,23927504.603,0.030,-125739945.419298,0.005,1241.596,51.7,11037.264,08539da4,36,0,23927510.217,0.006,-93896767.646843,0.004,927.156,52.9,11035.164,01933da4,36,0,23927507.273,0.006,-96346233.181780,0.004,951.361,53.2,11035.376,02333da4,36,0,23927507.057,0.004,-95121494.979676,0.004,939.285,55.8,11031.874,02933da4,9,0,24890379.004,0.046,-130799846.144936,0.007,3052.621,47.8,2955.889,08539dc4,9,0,24890384.304,0.009,-97675250.055577,0.005,2279.540,49.1,2953.828,01933dc4,9,0,24890381.065,0.008,-100223286.825938,0.004,2338.979,50.0,2953.762,02333dc4,9,0,24890381.366,0.006,-98949262.506583,0.005,2309.297,52.2,2949.700,02933dc4,23,0,26593863.945,0.036,-138481231.000933,0.010,-48.553,44.1,2628.888,08149ec4,23,0,26593862.563,0.010,-104360035.310223,0.005,-36.590,48.2,2623.647,41343ec4,34,0,23330414.273,0.017,-121487628.857801,0.005,2280.558,50.6,6539.069,58149ee4,34,0,23330415.641,0.008,-91553618.939049,0.005,1718.641,50.1,6533.770,41343ee4,35,0,24822913.452,0.024,-129259432.414616,0.007,-2925.143,47.4,23499.049,58149f04,35,0,24822915.980,0.012,-97410461.716286,0.006,-2204.368,46.7,23493.830,41343f04,11,0,24964039.739,0.052,-129994328.361984,0.014,2939.333,40.8,2708.970,18149f24,11,0,24964038.060,0.022,-100519869.959755,0.006,2272.851,48.3,2708.810,00349f24,19,0,23905947.282,0.033,-124484578.888819,0.009,-2342.726,44.8,13489.051,18149f44,19,0,23905949.046,0.008,-93812119.376225,0.005,-1765.479,50.1,13483.831,41343f44,21,0,24577306.170,0.027,-127980528.823414,0.008,3242.344,46.7,3439.068,18149f84,21,0,24577307.993,0.008,-96446682.849511,0.005,2443.502,49.7,3433.828,41343f84,22,0,22438270.920,0.015,-116842012.781567,0.005,729.096,51.5,8979.049,18149fa4,22,0,22438269.274,0.005,-88052653.428423,0.003,549.506,54.1,8973.770,41343fa4,44,0,21553538.984,0.014,-112234979.640419,0.005,-679.127,52.1,15439.131,48149ca4,44,0,21553540.824,0.005,-84580779.869687,0.003,-511.716,53.6,15433.829,41343ca4,57,0,26771391.610,0.021,-139405685.309616,0.007,-2069.940,48.5,20196.455,48049d04,12,0,21542689.063,0.021,-112178498.767984,0.006,952.964,48.8,11229.051,18149d24,12,0,21542686.409,0.013,-86743545.297369,0.004,736.976,52.6,11228.890,00349d24,25,0,26603375.741,0.069,-138530755.415895,0.019,-2155.462,38.4,9789.050,18149d44,25,0,26603380.238,0.015,-104397363.013083,0.007,-1624.205,44.7,9783.829,41343d44*5e9785bd\r\n";

   my_filter.include_message_id(43, HEADERFORMAT.ASCII, MEASUREMENT_SOURCE.SECONDARY);

   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(range_1_log)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(rawwaasframe_1_log)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(range_0_log)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(rawwaasframe_0_log)))

def test_DECIMATION():
   const char* bestpos_log_10_hz1 = "#BESTPOSA,COM1,0,8.5,FINESTEERING,2180,324435.100,02000020,cdba,32768;SOL_COMPUTED,SINGLE,51.15043043561,-114.03067194872,1097.5245,-17.0000,WGS84,0.9659,0.6980,1.7027,\"\",0.000,0.000,36,32,32,32,00,06,39,33*3bed5c1b\r\n";
   const char* bestpos_log_10_hz2 = "#BESTPOSA,COM1,0,8.5,FINESTEERING,2180,324435.200,02000020,cdba,32768;SOL_COMPUTED,SINGLE,51.15043043561,-114.03067194872,1097.5245,-17.0000,WGS84,0.9659,0.6980,1.7027,\"\",0.000,0.000,36,32,32,32,00,06,39,33*3bed5c1b\r\n";
   const char* bestpos_log_10_hz3 = "#BESTPOSA,COM1,0,8.5,FINESTEERING,2180,324435.300,02000020,cdba,32768;SOL_COMPUTED,SINGLE,51.15043043561,-114.03067194872,1097.5245,-17.0000,WGS84,0.9659,0.6980,1.7027,\"\",0.000,0.000,36,32,32,32,00,06,39,33*3bed5c1b\r\n";
   const char* bestpos_log_10_hz4 = "#BESTPOSA,COM1,0,8.5,FINESTEERING,2180,324435.400,02000020,cdba,32768;SOL_COMPUTED,SINGLE,51.15043043561,-114.03067194872,1097.5245,-17.0000,WGS84,0.9659,0.6980,1.7027,\"\",0.000,0.000,36,32,32,32,00,06,39,33*3bed5c1b\r\n";
   const char* bestpos_log_10_hz5 = "#BESTPOSA,COM1,0,8.5,FINESTEERING,2180,324435.500,02000020,cdba,32768;SOL_COMPUTED,SINGLE,51.15043043561,-114.03067194872,1097.5245,-17.0000,WGS84,0.9659,0.6980,1.7027,\"\",0.000,0.000,36,32,32,32,00,06,39,33*3bed5c1b\r\n";
   const char* bestpos_log_20_hz1 = "#BESTPOSA,COM1,0,8.5,FINESTEERING,2180,324435.150,02000020,cdba,32768;SOL_COMPUTED,SINGLE,51.15043043561,-114.03067194872,1097.5245,-17.0000,WGS84,0.9659,0.6980,1.7027,\"\",0.000,0.000,36,32,32,32,00,06,39,33*3bed5c1b\r\n";
   const char* bestpos_log_20_hz2 = "#BESTPOSA,COM1,0,8.5,FINESTEERING,2180,324435.250,02000020,cdba,32768;SOL_COMPUTED,SINGLE,51.15043043561,-114.03067194872,1097.5245,-17.0000,WGS84,0.9659,0.6980,1.7027,\"\",0.000,0.000,36,32,32,32,00,06,39,33*3bed5c1b\r\n";
   const char* bestpos_log_20_hz3 = "#BESTPOSA,COM1,0,8.5,FINESTEERING,2180,324435.350,02000020,cdba,32768;SOL_COMPUTED,SINGLE,51.15043043561,-114.03067194872,1097.5245,-17.0000,WGS84,0.9659,0.6980,1.7027,\"\",0.000,0.000,36,32,32,32,00,06,39,33*3bed5c1b\r\n";
   const char* bestpos_log_20_hz4 = "#BESTPOSA,COM1,0,8.5,FINESTEERING,2180,324435.450,02000020,cdba,32768;SOL_COMPUTED,SINGLE,51.15043043561,-114.03067194872,1097.5245,-17.0000,WGS84,0.9659,0.6980,1.7027,\"\",0.000,0.000,36,32,32,32,00,06,39,33*3bed5c1b\r\n";
   const char* bestpos_log_20_hz5 = "#BESTPOSA,COM1,0,8.5,FINESTEERING,2180,324435.550,02000020,cdba,32768;SOL_COMPUTED,SINGLE,51.15043043561,-114.03067194872,1097.5245,-17.0000,WGS84,0.9659,0.6980,1.7027,\"\",0.000,0.000,36,32,32,32,00,06,39,33*3bed5c1b\r\n";

   my_filter.set_include_decimation(0.1);

   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(bestpos_log_10_hz1)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(bestpos_log_10_hz2)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(bestpos_log_10_hz3)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(bestpos_log_10_hz4)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(bestpos_log_10_hz5)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(bestpos_log_20_hz1)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(bestpos_log_20_hz2)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(bestpos_log_20_hz3)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(bestpos_log_20_hz4)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(bestpos_log_20_hz5)))

   my_filter.invert_decimation_filter(True);

   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(bestpos_log_10_hz1)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(bestpos_log_10_hz2)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(bestpos_log_10_hz3)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(bestpos_log_10_hz4)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(bestpos_log_10_hz5)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(bestpos_log_20_hz1)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(bestpos_log_20_hz2)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(bestpos_log_20_hz3)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(bestpos_log_20_hz4)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(bestpos_log_20_hz5)))

def test_MIX_1():
   const char* bestposa_log_1 = "#BESTPOSA,COM1,0,8.0,FINESTEERING,2180,313698.000,024000a0,cdba,32768;SOL_COMPUTED,SINGLE,51.15045046450,-114.03068725072,1097.2706,-17.0000,WGS84,1.3811,1.1629,3.1178,\"\",0.000,0.000,24,22,22,0,00,02,11,11*c64c3d4a\r\n";
   const char* bestposa_log_2 = "#BESTPOSA,COM1,0,8.0,FINESTEERING,2180,313700.000,024000a0,cdba,32768;SOL_COMPUTED,SINGLE,51.15045046450,-114.03068725072,1097.2706,-17.0000,WGS84,1.3811,1.1629,3.1178,\"\",0.000,0.000,24,22,22,0,00,02,11,11*c64c3d4a\r\n";
   const char* bestposa_log_3 = "#BESTPOSA,COM1,0,8.0,FINESTEERING,2179,313702.000,024000a0,cdba,32768;SOL_COMPUTED,SINGLE,51.15045046450,-114.03068725072,1097.2706,-17.0000,WGS84,1.3811,1.1629,3.1178,\"\",0.000,0.000,24,22,22,0,00,02,11,11*c64c3d4a\r\n";
   const char* bestposa_log_4 = "#BESTPOSA,COM1,0,8.0,COARSESTEERING,2180,313700.000,024000a0,cdba,32768;SOL_COMPUTED,SINGLE,51.15045046450,-114.03068725072,1097.2706,-17.0000,WGS84,1.3811,1.1629,3.1178,\"\",0.000,0.000,24,22,22,0,00,02,11,11*c64c3d4a\r\n";
   const char* versiona_log_1 = "#VERSIONA,COM1,0,55.5,FINESTEERING,2167,254938.857,02000000,3681,16248;8,GPSCARD,\"FFNBYNTMNP1\",\"BMHR15470120X\",\"OEM719N-0.00C\",\"OM7CR0707RN0000\",\"OM7BR0000RBG000\",\"2020/Apr/09\",\"13:40:45\",OEM7FPGA,\"\",\"\",\"\",\"OMV070001RN0000\",\"\",\"\",\"\",DEFAULT_CONFIG,\"\",\"\",\"\",\"EZDCD0707RN0001\",\"\",\"2020/Apr/09\",\"13:41:07\",APPLICATION,\"\",\"\",\"\",\"EZAPR0707RN0000\",\"\",\"2020/Apr/09\",\"13:41:00\",PACKAGE,\"\",\"\",\"\",\"EZPKR0103RN0000\",\"\",\"2020/Apr/09\",\"13:41:14\",ENCLOSURE,\"\",\"NMJC14520001W\",\"0.0.0.H\",\"\",\"\",\"\",\"\",IMUCARD,\"Epson G320N 125\",\"E0000114\",\"G320PDGN\",\"2302\",\"\",\"\",\"\",RADIO,\"M3-R4\",\"1843000570\",\"SPL0020d12\",\"V07.34.2.5.1.11\",\"\",\"\",\"\"*4b995016\r\n";
   const char* versiona_log_2 = "#VERSIONA,COM1,0,55.5,FINESTEERING,2167,254938.857,02000000,3681,16248;8,GPSCARD,\"FFNBYNTMNP1\",\"BMHR15470120X\",\"OEM719N-0.00C\",\"OM7CR0707RN0000\",\"OM7BR0000RBG000\",\"2020/Apr/09\",\"13:40:45\",OEM7FPGA,\"\",\"\",\"\",\"OMV070001RN0000\",\"\",\"\",\"\",DEFAULT_CONFIG,\"\",\"\",\"\",\"EZDCD0707RN0001\",\"\",\"2020/Apr/09\",\"13:41:07\",APPLICATION,\"\",\"\",\"\",\"EZAPR0707RN0000\",\"\",\"2020/Apr/09\",\"13:41:00\",PACKAGE,\"\",\"\",\"\",\"EZPKR0103RN0000\",\"\",\"2020/Apr/09\",\"13:41:14\",ENCLOSURE,\"\",\"NMJC14520001W\",\"0.0.0.H\",\"\",\"\",\"\",\"\",IMUCARD,\"Epson G320N 125\",\"E0000114\",\"G320PDGN\",\"2302\",\"\",\"\",\"\",RADIO,\"M3-R4\",\"1843000570\",\"SPL0020d12\",\"V07.34.2.5.1.11\",\"\",\"\",\"\"*4b995016\r\n";
   const char* trackstata_log = "#TRACKSTATA,COM1,0,58.0,FINESTEERING,2180,313700.000,02000000,457c,16248;SOL_COMPUTED,WAAS,5.0,235,2,0,0810bc04,20999784.925,770.496,49.041,8473.355,0.228,GOOD,0.975,2,0,01303c0b,20999781.972,600.387,49.021,8466.896,0.000,OBSL2,0.000,0,0,02208000,0.000,-0.004,0.000,0.000,0.000,NA,0.000,0,0,01c02000,0.000,0.000,0.000,0.000,0.000,NA,0.000,20,0,0810bc24,24120644.940,3512.403,42.138,1624.974,0.464,GOOD,0.588,20,0,01303c2b,24120645.042,2736.937,39.553,1619.755,0.000,OBSL2,0.000,0,0,02208020,0.000,-0.002,0.000,0.000,0.000,NA,0.000,0,0,01c02020,0.000,0.000,0.000,0.000,0.000,NA,0.000,6,0,0810bc44,20727107.371,-1161.109,50.325,11454.975,-0.695,GOOD,0.979,6,0,01303c4b,20727108.785,-904.761,50.213,11448.915,0.000,OBSL2,0.000,6,0,02309c4b,20727109.344,-904.761,52.568,11451.815,0.000,OBSL2,0.000,6,0,01d03c44,20727110.520,-867.070,55.259,11453.455,0.000,OBSL5,0.000,29,0,0810bc64,25296813.545,3338.614,43.675,114.534,-0.170,GOOD,0.206,29,0,01303c6b,25296814.118,2601.518,39.636,109.254,0.000,OBSL2,0.000,29,0,02309c6b,25296814.580,2601.517,40.637,111.114,0.000,OBSL2,0.000,0,0,01c02060,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,0000a080,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,00a02080,0.000,-0.000,0.000,0.000,0.000,NA,0.000,0,0,02208080,0.000,-0.002,0.000,0.000,0.000,NA,0.000,0,0,01c02080,0.000,0.000,0.000,0.000,0.000,NA,0.000,19,0,0810bca4,22493227.199,-3020.625,44.911,18244.973,0.411,GOOD,0.970,19,0,01303cab,22493225.215,-2353.736,44.957,18239.754,0.000,OBSL2,0.000,0,0,022080a0,0.000,-0.006,0.000,0.000,0.000,NA,0.000,0,0,01c020a0,0.000,0.000,0.000,0.000,0.000,NA,0.000,24,0,0810bcc4,23856706.090,-3347.685,43.417,15187.116,-0.358,GOOD,0.957,24,0,01303ccb,23856708.306,-2608.588,43.207,15181.256,0.000,OBSL2,0.000,24,0,02309ccb,23856708.614,-2608.588,46.741,15183.815,0.000,OBSL2,0.000,24,0,01d03cc4,23856711.245,-2499.840,50.038,15185.256,0.000,OBSL5,0.000,25,0,1810bce4,21953295.423,2746.317,46.205,4664.936,0.322,GOOD,0.622,25,0,11303ceb,21953296.482,2139.988,45.623,4658.756,0.000,OBSL2,0.000,25,0,02309ceb,21953296.899,2139.988,47.584,4661.796,0.000,OBSL2,0.000,25,0,01d03ce4,21953298.590,2050.845,51.711,4662.976,0.000,OBSL5,0.000,0,0,0000a100,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,00a02100,0.000,-0.001,0.000,0.000,0.000,NA,0.000,0,0,02208100,0.000,-0.001,0.000,0.000,0.000,NA,0.000,0,0,01c02100,0.000,0.000,0.000,0.000,0.000,NA,0.000,17,0,1810bd24,24833573.179,-3002.286,43.809,21504.975,-0.219,GOOD,0.903,17,0,11303d2b,24833573.345,-2339.444,42.894,21499.256,0.000,OBSL2,0.000,17,0,02309d2b,24833573.677,-2339.444,44.238,21501.717,0.000,OBSL2,0.000,0,0,01c02120,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,0000a140,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,00a02140,0.000,-0.002,0.000,0.000,0.000,NA,0.000,0,0,02208140,0.000,-0.001,0.000,0.000,0.000,NA,0.000,0,0,01c02140,0.000,0.000,0.000,0.000,0.000,NA,0.000,12,0,0810bd64,20275478.792,742.751,50.336,9634.855,0.166,GOOD,0.977,12,0,01303d6b,20275477.189,578.767,50.042,9629.756,0.000,OBSL2,0.000,12,0,02309d6b,20275477.555,578.767,51.012,9631.516,0.000,OBSL2,0.000,0,0,01c02160,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,0000a180,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,00a02180,0.000,0.002,0.000,0.000,0.000,NA,0.000,0,0,02208180,0.000,0.003,0.000,0.000,0.000,NA,0.000,0,0,01c02180,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,0000a1a0,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,00a021a0,0.000,-0.000,0.000,0.000,0.000,NA,0.000,0,0,022081a0,0.000,-0.000,0.000,0.000,0.000,NA,0.000,0,0,01c021a0,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,0000a1c0,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,00a021c0,0.000,-0.000,0.000,0.000,0.000,NA,0.000,0,0,022081c0,0.000,-0.000,0.000,0.000,0.000,NA,0.000,0,0,01c021c0,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,0000a1e0,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,00a021e0,0.000,0.001,0.000,0.000,0.000,NA,0.000,0,0,022081e0,0.000,0.003,0.000,0.000,0.000,NA,0.000,0,0,01c021e0,0.000,0.000,0.000,0.000,0.000,NA,0.000,194,0,0815be04,43478223.927,63.042,38.698,2382.214,0.000,NODIFFCORR,0.000,194,0,02359e0b,43478226.941,49.122,44.508,2378.714,0.000,OBSL2,0.000,194,0,01d53e04,43478228.121,47.080,43.958,2380.253,0.000,OBSL5,0.000,0,0,0005a220,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,02258220,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,01c52220,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,0005a240,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,02258240,0.000,-0.002,0.000,0.000,0.000,NA,0.000,0,0,01c52240,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,0005a260,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,02258260,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,01c52260,0.000,0.000,0.000,0.000,0.000,NA,0.000,131,0,48023e84,38480992.384,-0.167,45.356,471155.406,0.000,LOCKEDOUT,0.000,135,0,58023ea4,38553658.881,3.771,44.648,4.449,0.000,NODIFFCORR,0.000,133,0,58023ec4,38624746.161,1.065,45.618,471153.219,0.000,LOCKEDOUT,0.000,138,0,48023ee4,38493033.873,0.953,45.833,898498.250,0.000,LOCKEDOUT,0.000,55,4,18119f04,21580157.377,3208.835,44.921,3584.798,0.000,NODIFFCORR,0.000,55,4,00b13f0b,21580163.823,2495.762,45.078,3580.119,0.000,OBSL2,0.000,55,4,10319f0b,21580163.635,2495.762,45.682,3581.038,0.000,OBSL2,0.000,45,13,08119f24,23088997.031,-313.758,44.105,4273.538,0.000,NODIFFCORR,0.000,45,13,00b13f2b,23088998.989,-244.036,42.927,4267.818,0.000,OBSL2,0.000,45,13,00319f2b,23088999.269,-244.036,43.297,4268.818,0.000,OBSL2,0.000,54,11,18119f44,19120160.469,178.235,50.805,9344.977,0.000,NODIFFCORR,0.000,54,11,00b13f4b,19120162.255,138.627,46.584,9339.897,0.000,OBSL2,0.000,54,11,00319f4b,19120162.559,138.627,47.049,9340.818,0.000,OBSL2,0.000,0,0,00018360,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,00a12360,0.000,0.004,0.000,0.000,0.000,NA,0.000,0,0,00218360,0.000,0.004,0.000,0.000,0.000,NA,0.000,0,0,00018380,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,00a12380,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,00218380,0.000,0.000,0.000,0.000,0.000,NA,0.000,53,6,18119fa4,21330036.443,3045.661,43.167,3862.756,0.000,NODIFFCORR,0.000,53,6,00b13fab,21330040.203,2368.849,41.759,3858.039,0.000,OBSL2,0.000,53,6,00319fab,21330039.119,2368.850,42.691,3859.038,0.000,OBSL2,0.000,38,8,18119fc4,22996582.245,2427.724,41.817,2014.338,0.000,NODIFFCORR,0.000,38,8,10b13fcb,22996590.440,1888.231,35.968,2010.119,0.000,OBSL2,0.000,38,8,10319fcb,22996589.454,1888.230,36.755,2011.038,0.000,OBSL2,0.000,52,7,08119fe4,19520740.266,-1275.394,50.736,10712.179,0.000,NODIFFCORR,0.000,52,7,00b13feb,19520744.583,-991.974,47.931,10708.038,0.000,OBSL2,0.000,52,7,10319feb,19520744.527,-991.974,48.251,10709.038,0.000,OBSL2,0.000,51,0,18119c04,22302364.417,-4314.112,43.692,16603.602,0.000,NODIFFCORR,0.000,51,0,00b13c0b,22302371.827,-3355.424,45.975,16603.580,0.000,OBSL2,0.000,51,0,00319c0b,22302371.325,-3355.424,46.904,16603.502,0.000,OBSL2,0.000,61,9,08119c24,21163674.206,-3198.898,47.898,14680.979,0.000,NODIFFCORR,0.000,61,9,10b13c2b,21163677.196,-2488.033,44.960,14675.897,0.000,OBSL2,0.000,61,9,00319c2b,21163677.300,-2488.033,45.628,14676.737,0.000,OBSL2,0.000,0,0,00018040,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,00a12040,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,00218040,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,00018060,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,00a12060,0.000,-0.000,0.000,0.000,0.000,NA,0.000,0,0,00218060,0.000,-0.001,0.000,0.000,0.000,NA,0.000,0,0,00018080,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,00a12080,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,00218080,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,000180a0,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,00a120a0,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,002180a0,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,004380c0,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,018320c0,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,022320c0,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,028320c0,0.000,0.000,0.000,0.000,0.000,NA,0.000,21,0,08539ce4,25416828.004,2077.626,46.584,6337.363,0.000,NODIFFCORR,0.000,21,0,01933ce4,25416833.286,1551.460,49.589,6335.164,0.000,OBSE5,0.000,21,0,02333ce4,25416829.717,1591.910,50.226,6335.176,0.000,OBSE5,0.000,21,0,02933ce4,25416829.814,1571.722,52.198,6334.944,0.000,OBSE5,0.000,27,0,08539d04,23510780.996,-707.419,51.721,16182.524,0.000,NODIFFCORR,0.000,27,0,01933d04,23510785.247,-528.262,53.239,16180.444,0.000,OBSE5,0.000,27,0,02333d04,23510781.458,-542.015,53.731,16180.243,0.000,OBSE5,0.000,27,0,02933d04,23510781.960,-535.149,55.822,16180.165,0.000,OBSE5,0.000,0,0,00438120,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,01832120,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,02232120,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,02832120,0.000,0.000,0.000,0.000,0.000,NA,0.000,15,0,08539d44,23034423.020,183.445,51.283,11971.245,0.000,NODIFFCORR,0.000,15,0,01933d44,23034428.761,136.945,53.293,11969.243,0.000,OBSE5,0.000,15,0,02333d44,23034425.379,140.546,53.897,11969.245,0.000,OBSE5,0.000,15,0,02933d44,23034425.436,138.742,55.909,11968.946,0.000,OBSE5,0.000,13,0,08539d64,25488681.795,2565.988,46.632,4828.445,0.000,NODIFFCORR,0.000,13,0,01933d64,25488687.213,1916.182,47.753,4826.243,0.000,OBSE5,0.000,13,0,02333d64,25488683.967,1966.148,50.045,4826.243,0.000,OBSE5,0.000,13,0,02933d64,25488684.398,1941.169,51.348,4826.165,0.000,OBSE5,0.000,0,0,00438180,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,01832180,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,02232180,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,02832180,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,004381a0,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,018321a0,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,022321a0,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,028321a0,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,004381c0,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,018321c0,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,022321c0,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,028321c0,0.000,0.000,0.000,0.000,0.000,NA,0.000,30,0,08539de4,25532715.149,-2938.485,46.289,26421.467,0.000,NODIFFCORR,0.000,30,0,01933de4,25532721.371,-2194.317,49.285,26419.447,0.000,OBSE5,0.000,30,0,02333de4,25532718.174,-2251.520,50.681,26419.447,0.000,OBSE5,0.000,30,0,02933de4,25532717.843,-2222.952,52.291,26419.166,0.000,OBSE5,0.000,0,0,00438200,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,01832200,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,02232200,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,02832200,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,00438220,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,01832220,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,02232220,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,02832220,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,00438240,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,01832240,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,02232240,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,02832240,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,00438260,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,01832260,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,02232260,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,02832260,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,00438280,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,01832280,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,02232280,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,02832280,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,004382a0,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,018322a0,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,022322a0,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,028322a0,0.000,0.000,0.000,0.000,0.000,NA,0.000,41,0,48149ec4,26228546.068,2731.326,43.047,1244.968,0.000,NODIFFCORR,0.000,41,0,41343ec4,26228560.733,2058.212,46.309,1239.648,0.000,NA,0.000,27,0,08149ee4,21470141.903,-686.571,51.408,13695.229,0.000,NODIFFCORR,0.000,27,0,41343ee4,21470143.417,-517.430,52.724,13690.050,0.000,NA,0.000,6,0,08149f04,40334269.953,-663.889,38.200,12755.121,0.000,NODIFFCORR,0.000,6,0,00349f04,40334265.525,-513.549,39.333,12754.961,0.000,OBSB2,0.000,16,0,08149f24,40591561.211,-689.953,40.783,11755.120,0.000,NODIFFCORR,0.000,16,0,00349f24,40591562.100,-533.388,39.928,11754.960,0.000,OBSB2,0.000,39,0,58149f44,40402963.125,-730.398,41.019,11015.042,0.000,NODIFFCORR,0.000,39,0,41343f44,40402964.083,-550.456,43.408,11009.821,0.000,NA,0.000,30,0,18149f64,22847646.673,2123.913,50.266,6625.051,0.000,NODIFFCORR,0.000,30,0,41343f64,22847649.151,1600.605,49.656,6619.991,0.000,NA,0.000,7,0,08048381,0.000,2500.000,0.000,0.000,0.000,NA,0.000,7,0,08048381,0.000,-2500.000,0.000,0.000,0.000,NA,0.000,33,0,48149fa4,25666349.147,776.929,42.271,3835.148,0.000,NODIFFCORR,0.000,33,0,41343fa4,25666377.385,585.535,48.361,3697.589,0.000,NA,0.000,46,0,48149fc4,23048323.129,-2333.170,49.345,15915.131,0.000,NODIFFCORR,0.000,46,0,41343fc4,23048329.413,-1758.350,52.408,15909.830,0.000,NA,0.000,18,0,080483e1,0.000,4000.000,0.000,0.000,0.000,NA,0.000,18,0,080483e1,0.000,-500.000,0.000,0.000,0.000,NA,0.000,45,0,48149c04,26221109.945,2965.644,44.864,435.050,0.000,NODIFFCORR,0.000,45,0,41343c04,26221119.956,2234.910,47.292,429.831,0.000,NA,0.000,36,0,58149c24,23277715.056,700.443,48.907,8015.069,0.000,NODIFFCORR,0.000,36,0,41343c24,23277723.101,527.848,51.167,8009.829,0.000,NA,0.000,52,0,08048041,0.000,1667.000,0.000,0.000,0.000,NA,0.000,52,0,08048041,0.000,-4166.000,0.000,0.000,0.000,NA,0.000,49,0,08048061,0.000,5832.000,0.000,0.000,0.000,NA,0.000,49,0,08048061,0.000,-4999.000,0.000,0.000,0.000,NA,0.000,47,0,08048081,0.000,1000.000,0.000,0.000,0.000,NA,0.000,47,0,08048081,0.000,-500.000,0.000,0.000,0.000,NA,0.000,58,0,48049ca4,34894393.899,-3079.127,30.345,47.772,0.000,NODIFFCORR,0.000,58,0,012420a9,0.000,-2321.139,0.000,0.000,0.000,NA,0.000,14,0,08149cc4,25730238.361,-588.324,38.191,4795.070,0.000,NODIFFCORR,0.000,14,0,00349cc4,25730237.379,-454.787,44.427,4794.910,0.000,OBSB2,0.000,28,0,08149ce4,24802536.288,-2833.581,46.004,19865.129,0.000,NODIFFCORR,0.000,28,0,41343ce4,24802537.579,-2135.389,46.897,19859.650,0.000,NA,0.000,48,0,08048101,0.000,16000.000,0.000,0.000,0.000,NA,0.000,0,0,00248100,0.000,0.000,0.000,0.000,0.000,NA,0.000,9,0,08149d24,40753569.155,222.237,37.682,1784.493,0.000,NODIFFCORR,0.000,9,0,00349d24,40753568.209,171.813,41.501,4664.961,0.000,OBSB2,0.000,3,0,08848141,0.000,6000.000,0.000,0.000,0.000,NA,0.000,3,0,08848141,0.000,-11000.000,0.000,0.000,0.000,NA,0.000,1,0,08848161,0.000,4999.000,0.000,0.000,0.000,NA,0.000,1,0,08848161,0.000,-4166.000,0.000,0.000,0.000,NA,0.000,6,0,0a670984,0.000,-301.833,36.924,1734607.250,0.000,NA,0.000,1,0,0a6709a4,0.000,83.304,43.782,558002.188,0.000,NA,0.000,0,0,026701c0,0.000,0.000,0.000,0.000,0.000,NA,0.000,3,0,0a6701e1,0.000,419.842,0.000,0.000,0.000,NA,0.000,0,0,02670200,0.000,0.000,0.000,0.000,0.000,NA,0.000*c8963f70\r\n";
   unsigned const char bestposb_log[]  = [ 0xAA, 0x44, 0x12, 0x1C, 0x2A, 0x00, 0x00, 0x20, 0x48, 0x00, 0x00, 0x00, 0xA4, 0xB4, 0xAC, 0x07, 0xD8, 0x16, 0x6D, 0x08, 0x08, 0x40, 0x00, 0x02, 0xF6, 0xB1, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0xD7, 0x03, 0xB0, 0x4C, 0xE5, 0x8E, 0x49, 0x40, 0x52, 0xC4, 0x26, 0xD1, 0x72, 0x82, 0x5C, 0xC0, 0x29, 0xCB, 0x10, 0xC7, 0x7A, 0xA2, 0x90, 0x40, 0x33, 0x33, 0x87, 0xC1, 0x3D, 0x00, 0x00, 0x00, 0xFA, 0x7E, 0xBA, 0x3F, 0x3F, 0x57, 0x83, 0x3F, 0xA9, 0xA4, 0x0A, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x16, 0x16, 0x16, 0x00, 0x06, 0x39, 0x33, 0x23, 0xC4, 0x89, 0x7A ];
   unsigned const char sourcetableb_log[]  = [ 0xAA, 0x44, 0x12, 0x1C, 0x40, 0x05, 0x00, 0x20, 0x68, 0x00, 0x15, 0x00, 0x80, 0xB4, 0x74, 0x08, 0x00, 0x5B, 0x88, 0x0D, 0x20, 0x80, 0x00, 0x02, 0xDD, 0x71, 0x00, 0x80, 0x68, 0x65, 0x72, 0x61, 0x2E, 0x6E, 0x6F, 0x76, 0x61, 0x74, 0x65, 0x6C, 0x2E, 0x63, 0x6F, 0x6D, 0x3A, 0x32, 0x31, 0x30, 0x31, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x53, 0x54, 0x52, 0x3B, 0x48, 0x79, 0x64, 0x65, 0x72, 0x61, 0x62, 0x61, 0x64, 0x5F, 0x4C, 0x42, 0x32, 0x3B, 0x3B, 0x3B, 0x3B, 0x3B, 0x3B, 0x53, 0x4E, 0x49, 0x50, 0x3B, 0x58, 0x58, 0x58, 0x3B, 0x30, 0x2E, 0x30, 0x30, 0x3B, 0x30, 0x2E, 0x30, 0x30, 0x3B, 0x30, 0x3B, 0x30, 0x3B, 0x73, 0x4E, 0x54, 0x52, 0x49, 0x50, 0x3B, 0x6E, 0x6F, 0x6E, 0x65, 0x3B, 0x4E, 0x3B, 0x4E, 0x3B, 0x30, 0x3B, 0x6E, 0x6F, 0x6E, 0x65, 0x3B, 0x00, 0x00, 0x00, 0xB9, 0x6E, 0x19, 0x2E ];
   const char* nmea_gpalm_log = "$GPALM,30,01,01,2029,00,4310,7b,145f,fd44,a10ce4,1c5b11,0b399f,2bc421,f80,ffe*29\r\n";

   my_filter.include_message_id(42, HEADERFORMAT.ASCII); # Filter for BESTPOS (ASCII)
   my_filter.include_time_status(TIME_STATUS.FINESTEERING); # Filter for FINESTEERING
   my_filter.set_include_lower_time_bound(2180, 313699);
   # We only want WEEK 2180 and GPS Second 313700
   my_filter.set_include_upper_time_bound(2180, 313701);
   my_filter.include_n_m_e_a_messages(True);

   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(bestposa_log_1)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(bestposa_log_2)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(bestposa_log_3)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(bestposa_log_4)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(versiona_log_1)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(versiona_log_2)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(trackstata_log)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(bestposb_log)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(sourcetableb_log)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(nmea_gpalm_log)))

def test_MIX_1_INVERTED():
   const char* bestposa_log_1 = "#BESTPOSA,COM1,0,8.0,FINESTEERING,2180,313698.000,024000a0,cdba,32768;SOL_COMPUTED,SINGLE,51.15045046450,-114.03068725072,1097.2706,-17.0000,WGS84,1.3811,1.1629,3.1178,\"\",0.000,0.000,24,22,22,0,00,02,11,11*c64c3d4a\r\n";
   const char* bestposa_log_2 = "#BESTPOSA,COM1,0,8.0,FINESTEERING,2180,313700.000,024000a0,cdba,32768;SOL_COMPUTED,SINGLE,51.15045046450,-114.03068725072,1097.2706,-17.0000,WGS84,1.3811,1.1629,3.1178,\"\",0.000,0.000,24,22,22,0,00,02,11,11*c64c3d4a\r\n";
   const char* bestposa_log_3 = "#BESTPOSA,COM1,0,8.0,FINESTEERING,2179,313702.000,024000a0,cdba,32768;SOL_COMPUTED,SINGLE,51.15045046450,-114.03068725072,1097.2706,-17.0000,WGS84,1.3811,1.1629,3.1178,\"\",0.000,0.000,24,22,22,0,00,02,11,11*c64c3d4a\r\n";
   const char* bestposa_log_4 = "#BESTPOSA,COM1,0,8.0,COARSESTEERING,2180,313700.000,024000a0,cdba,32768;SOL_COMPUTED,SINGLE,51.15045046450,-114.03068725072,1097.2706,-17.0000,WGS84,1.3811,1.1629,3.1178,\"\",0.000,0.000,24,22,22,0,00,02,11,11*c64c3d4a\r\n";
   const char* versiona_log_1 = "#VERSIONA,COM1,0,55.5,FINESTEERING,2167,254938.857,02000000,3681,16248;8,GPSCARD,\"FFNBYNTMNP1\",\"BMHR15470120X\",\"OEM719N-0.00C\",\"OM7CR0707RN0000\",\"OM7BR0000RBG000\",\"2020/Apr/09\",\"13:40:45\",OEM7FPGA,\"\",\"\",\"\",\"OMV070001RN0000\",\"\",\"\",\"\",DEFAULT_CONFIG,\"\",\"\",\"\",\"EZDCD0707RN0001\",\"\",\"2020/Apr/09\",\"13:41:07\",APPLICATION,\"\",\"\",\"\",\"EZAPR0707RN0000\",\"\",\"2020/Apr/09\",\"13:41:00\",PACKAGE,\"\",\"\",\"\",\"EZPKR0103RN0000\",\"\",\"2020/Apr/09\",\"13:41:14\",ENCLOSURE,\"\",\"NMJC14520001W\",\"0.0.0.H\",\"\",\"\",\"\",\"\",IMUCARD,\"Epson G320N 125\",\"E0000114\",\"G320PDGN\",\"2302\",\"\",\"\",\"\",RADIO,\"M3-R4\",\"1843000570\",\"SPL0020d12\",\"V07.34.2.5.1.11\",\"\",\"\",\"\"*4b995016\r\n";
   const char* versiona_log_2 = "#VERSIONA,COM1,0,55.5,FINESTEERING,2167,254938.857,02000000,3681,16248;8,GPSCARD,\"FFNBYNTMNP1\",\"BMHR15470120X\",\"OEM719N-0.00C\",\"OM7CR0707RN0000\",\"OM7BR0000RBG000\",\"2020/Apr/09\",\"13:40:45\",OEM7FPGA,\"\",\"\",\"\",\"OMV070001RN0000\",\"\",\"\",\"\",DEFAULT_CONFIG,\"\",\"\",\"\",\"EZDCD0707RN0001\",\"\",\"2020/Apr/09\",\"13:41:07\",APPLICATION,\"\",\"\",\"\",\"EZAPR0707RN0000\",\"\",\"2020/Apr/09\",\"13:41:00\",PACKAGE,\"\",\"\",\"\",\"EZPKR0103RN0000\",\"\",\"2020/Apr/09\",\"13:41:14\",ENCLOSURE,\"\",\"NMJC14520001W\",\"0.0.0.H\",\"\",\"\",\"\",\"\",IMUCARD,\"Epson G320N 125\",\"E0000114\",\"G320PDGN\",\"2302\",\"\",\"\",\"\",RADIO,\"M3-R4\",\"1843000570\",\"SPL0020d12\",\"V07.34.2.5.1.11\",\"\",\"\",\"\"*4b995016\r\n";
   const char* trackstata_log = "#TRACKSTATA,COM1,0,58.0,COARSESTEERING,2180,313700.000,02000000,457c,16248;SOL_COMPUTED,WAAS,5.0,235,2,0,0810bc04,20999784.925,770.496,49.041,8473.355,0.228,GOOD,0.975,2,0,01303c0b,20999781.972,600.387,49.021,8466.896,0.000,OBSL2,0.000,0,0,02208000,0.000,-0.004,0.000,0.000,0.000,NA,0.000,0,0,01c02000,0.000,0.000,0.000,0.000,0.000,NA,0.000,20,0,0810bc24,24120644.940,3512.403,42.138,1624.974,0.464,GOOD,0.588,20,0,01303c2b,24120645.042,2736.937,39.553,1619.755,0.000,OBSL2,0.000,0,0,02208020,0.000,-0.002,0.000,0.000,0.000,NA,0.000,0,0,01c02020,0.000,0.000,0.000,0.000,0.000,NA,0.000,6,0,0810bc44,20727107.371,-1161.109,50.325,11454.975,-0.695,GOOD,0.979,6,0,01303c4b,20727108.785,-904.761,50.213,11448.915,0.000,OBSL2,0.000,6,0,02309c4b,20727109.344,-904.761,52.568,11451.815,0.000,OBSL2,0.000,6,0,01d03c44,20727110.520,-867.070,55.259,11453.455,0.000,OBSL5,0.000,29,0,0810bc64,25296813.545,3338.614,43.675,114.534,-0.170,GOOD,0.206,29,0,01303c6b,25296814.118,2601.518,39.636,109.254,0.000,OBSL2,0.000,29,0,02309c6b,25296814.580,2601.517,40.637,111.114,0.000,OBSL2,0.000,0,0,01c02060,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,0000a080,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,00a02080,0.000,-0.000,0.000,0.000,0.000,NA,0.000,0,0,02208080,0.000,-0.002,0.000,0.000,0.000,NA,0.000,0,0,01c02080,0.000,0.000,0.000,0.000,0.000,NA,0.000,19,0,0810bca4,22493227.199,-3020.625,44.911,18244.973,0.411,GOOD,0.970,19,0,01303cab,22493225.215,-2353.736,44.957,18239.754,0.000,OBSL2,0.000,0,0,022080a0,0.000,-0.006,0.000,0.000,0.000,NA,0.000,0,0,01c020a0,0.000,0.000,0.000,0.000,0.000,NA,0.000,24,0,0810bcc4,23856706.090,-3347.685,43.417,15187.116,-0.358,GOOD,0.957,24,0,01303ccb,23856708.306,-2608.588,43.207,15181.256,0.000,OBSL2,0.000,24,0,02309ccb,23856708.614,-2608.588,46.741,15183.815,0.000,OBSL2,0.000,24,0,01d03cc4,23856711.245,-2499.840,50.038,15185.256,0.000,OBSL5,0.000,25,0,1810bce4,21953295.423,2746.317,46.205,4664.936,0.322,GOOD,0.622,25,0,11303ceb,21953296.482,2139.988,45.623,4658.756,0.000,OBSL2,0.000,25,0,02309ceb,21953296.899,2139.988,47.584,4661.796,0.000,OBSL2,0.000,25,0,01d03ce4,21953298.590,2050.845,51.711,4662.976,0.000,OBSL5,0.000,0,0,0000a100,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,00a02100,0.000,-0.001,0.000,0.000,0.000,NA,0.000,0,0,02208100,0.000,-0.001,0.000,0.000,0.000,NA,0.000,0,0,01c02100,0.000,0.000,0.000,0.000,0.000,NA,0.000,17,0,1810bd24,24833573.179,-3002.286,43.809,21504.975,-0.219,GOOD,0.903,17,0,11303d2b,24833573.345,-2339.444,42.894,21499.256,0.000,OBSL2,0.000,17,0,02309d2b,24833573.677,-2339.444,44.238,21501.717,0.000,OBSL2,0.000,0,0,01c02120,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,0000a140,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,00a02140,0.000,-0.002,0.000,0.000,0.000,NA,0.000,0,0,02208140,0.000,-0.001,0.000,0.000,0.000,NA,0.000,0,0,01c02140,0.000,0.000,0.000,0.000,0.000,NA,0.000,12,0,0810bd64,20275478.792,742.751,50.336,9634.855,0.166,GOOD,0.977,12,0,01303d6b,20275477.189,578.767,50.042,9629.756,0.000,OBSL2,0.000,12,0,02309d6b,20275477.555,578.767,51.012,9631.516,0.000,OBSL2,0.000,0,0,01c02160,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,0000a180,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,00a02180,0.000,0.002,0.000,0.000,0.000,NA,0.000,0,0,02208180,0.000,0.003,0.000,0.000,0.000,NA,0.000,0,0,01c02180,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,0000a1a0,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,00a021a0,0.000,-0.000,0.000,0.000,0.000,NA,0.000,0,0,022081a0,0.000,-0.000,0.000,0.000,0.000,NA,0.000,0,0,01c021a0,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,0000a1c0,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,00a021c0,0.000,-0.000,0.000,0.000,0.000,NA,0.000,0,0,022081c0,0.000,-0.000,0.000,0.000,0.000,NA,0.000,0,0,01c021c0,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,0000a1e0,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,00a021e0,0.000,0.001,0.000,0.000,0.000,NA,0.000,0,0,022081e0,0.000,0.003,0.000,0.000,0.000,NA,0.000,0,0,01c021e0,0.000,0.000,0.000,0.000,0.000,NA,0.000,194,0,0815be04,43478223.927,63.042,38.698,2382.214,0.000,NODIFFCORR,0.000,194,0,02359e0b,43478226.941,49.122,44.508,2378.714,0.000,OBSL2,0.000,194,0,01d53e04,43478228.121,47.080,43.958,2380.253,0.000,OBSL5,0.000,0,0,0005a220,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,02258220,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,01c52220,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,0005a240,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,02258240,0.000,-0.002,0.000,0.000,0.000,NA,0.000,0,0,01c52240,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,0005a260,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,02258260,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,01c52260,0.000,0.000,0.000,0.000,0.000,NA,0.000,131,0,48023e84,38480992.384,-0.167,45.356,471155.406,0.000,LOCKEDOUT,0.000,135,0,58023ea4,38553658.881,3.771,44.648,4.449,0.000,NODIFFCORR,0.000,133,0,58023ec4,38624746.161,1.065,45.618,471153.219,0.000,LOCKEDOUT,0.000,138,0,48023ee4,38493033.873,0.953,45.833,898498.250,0.000,LOCKEDOUT,0.000,55,4,18119f04,21580157.377,3208.835,44.921,3584.798,0.000,NODIFFCORR,0.000,55,4,00b13f0b,21580163.823,2495.762,45.078,3580.119,0.000,OBSL2,0.000,55,4,10319f0b,21580163.635,2495.762,45.682,3581.038,0.000,OBSL2,0.000,45,13,08119f24,23088997.031,-313.758,44.105,4273.538,0.000,NODIFFCORR,0.000,45,13,00b13f2b,23088998.989,-244.036,42.927,4267.818,0.000,OBSL2,0.000,45,13,00319f2b,23088999.269,-244.036,43.297,4268.818,0.000,OBSL2,0.000,54,11,18119f44,19120160.469,178.235,50.805,9344.977,0.000,NODIFFCORR,0.000,54,11,00b13f4b,19120162.255,138.627,46.584,9339.897,0.000,OBSL2,0.000,54,11,00319f4b,19120162.559,138.627,47.049,9340.818,0.000,OBSL2,0.000,0,0,00018360,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,00a12360,0.000,0.004,0.000,0.000,0.000,NA,0.000,0,0,00218360,0.000,0.004,0.000,0.000,0.000,NA,0.000,0,0,00018380,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,00a12380,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,00218380,0.000,0.000,0.000,0.000,0.000,NA,0.000,53,6,18119fa4,21330036.443,3045.661,43.167,3862.756,0.000,NODIFFCORR,0.000,53,6,00b13fab,21330040.203,2368.849,41.759,3858.039,0.000,OBSL2,0.000,53,6,00319fab,21330039.119,2368.850,42.691,3859.038,0.000,OBSL2,0.000,38,8,18119fc4,22996582.245,2427.724,41.817,2014.338,0.000,NODIFFCORR,0.000,38,8,10b13fcb,22996590.440,1888.231,35.968,2010.119,0.000,OBSL2,0.000,38,8,10319fcb,22996589.454,1888.230,36.755,2011.038,0.000,OBSL2,0.000,52,7,08119fe4,19520740.266,-1275.394,50.736,10712.179,0.000,NODIFFCORR,0.000,52,7,00b13feb,19520744.583,-991.974,47.931,10708.038,0.000,OBSL2,0.000,52,7,10319feb,19520744.527,-991.974,48.251,10709.038,0.000,OBSL2,0.000,51,0,18119c04,22302364.417,-4314.112,43.692,16603.602,0.000,NODIFFCORR,0.000,51,0,00b13c0b,22302371.827,-3355.424,45.975,16603.580,0.000,OBSL2,0.000,51,0,00319c0b,22302371.325,-3355.424,46.904,16603.502,0.000,OBSL2,0.000,61,9,08119c24,21163674.206,-3198.898,47.898,14680.979,0.000,NODIFFCORR,0.000,61,9,10b13c2b,21163677.196,-2488.033,44.960,14675.897,0.000,OBSL2,0.000,61,9,00319c2b,21163677.300,-2488.033,45.628,14676.737,0.000,OBSL2,0.000,0,0,00018040,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,00a12040,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,00218040,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,00018060,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,00a12060,0.000,-0.000,0.000,0.000,0.000,NA,0.000,0,0,00218060,0.000,-0.001,0.000,0.000,0.000,NA,0.000,0,0,00018080,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,00a12080,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,00218080,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,000180a0,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,00a120a0,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,002180a0,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,004380c0,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,018320c0,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,022320c0,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,028320c0,0.000,0.000,0.000,0.000,0.000,NA,0.000,21,0,08539ce4,25416828.004,2077.626,46.584,6337.363,0.000,NODIFFCORR,0.000,21,0,01933ce4,25416833.286,1551.460,49.589,6335.164,0.000,OBSE5,0.000,21,0,02333ce4,25416829.717,1591.910,50.226,6335.176,0.000,OBSE5,0.000,21,0,02933ce4,25416829.814,1571.722,52.198,6334.944,0.000,OBSE5,0.000,27,0,08539d04,23510780.996,-707.419,51.721,16182.524,0.000,NODIFFCORR,0.000,27,0,01933d04,23510785.247,-528.262,53.239,16180.444,0.000,OBSE5,0.000,27,0,02333d04,23510781.458,-542.015,53.731,16180.243,0.000,OBSE5,0.000,27,0,02933d04,23510781.960,-535.149,55.822,16180.165,0.000,OBSE5,0.000,0,0,00438120,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,01832120,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,02232120,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,02832120,0.000,0.000,0.000,0.000,0.000,NA,0.000,15,0,08539d44,23034423.020,183.445,51.283,11971.245,0.000,NODIFFCORR,0.000,15,0,01933d44,23034428.761,136.945,53.293,11969.243,0.000,OBSE5,0.000,15,0,02333d44,23034425.379,140.546,53.897,11969.245,0.000,OBSE5,0.000,15,0,02933d44,23034425.436,138.742,55.909,11968.946,0.000,OBSE5,0.000,13,0,08539d64,25488681.795,2565.988,46.632,4828.445,0.000,NODIFFCORR,0.000,13,0,01933d64,25488687.213,1916.182,47.753,4826.243,0.000,OBSE5,0.000,13,0,02333d64,25488683.967,1966.148,50.045,4826.243,0.000,OBSE5,0.000,13,0,02933d64,25488684.398,1941.169,51.348,4826.165,0.000,OBSE5,0.000,0,0,00438180,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,01832180,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,02232180,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,02832180,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,004381a0,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,018321a0,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,022321a0,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,028321a0,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,004381c0,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,018321c0,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,022321c0,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,028321c0,0.000,0.000,0.000,0.000,0.000,NA,0.000,30,0,08539de4,25532715.149,-2938.485,46.289,26421.467,0.000,NODIFFCORR,0.000,30,0,01933de4,25532721.371,-2194.317,49.285,26419.447,0.000,OBSE5,0.000,30,0,02333de4,25532718.174,-2251.520,50.681,26419.447,0.000,OBSE5,0.000,30,0,02933de4,25532717.843,-2222.952,52.291,26419.166,0.000,OBSE5,0.000,0,0,00438200,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,01832200,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,02232200,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,02832200,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,00438220,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,01832220,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,02232220,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,02832220,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,00438240,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,01832240,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,02232240,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,02832240,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,00438260,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,01832260,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,02232260,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,02832260,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,00438280,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,01832280,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,02232280,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,02832280,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,004382a0,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,018322a0,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,022322a0,0.000,0.000,0.000,0.000,0.000,NA,0.000,0,0,028322a0,0.000,0.000,0.000,0.000,0.000,NA,0.000,41,0,48149ec4,26228546.068,2731.326,43.047,1244.968,0.000,NODIFFCORR,0.000,41,0,41343ec4,26228560.733,2058.212,46.309,1239.648,0.000,NA,0.000,27,0,08149ee4,21470141.903,-686.571,51.408,13695.229,0.000,NODIFFCORR,0.000,27,0,41343ee4,21470143.417,-517.430,52.724,13690.050,0.000,NA,0.000,6,0,08149f04,40334269.953,-663.889,38.200,12755.121,0.000,NODIFFCORR,0.000,6,0,00349f04,40334265.525,-513.549,39.333,12754.961,0.000,OBSB2,0.000,16,0,08149f24,40591561.211,-689.953,40.783,11755.120,0.000,NODIFFCORR,0.000,16,0,00349f24,40591562.100,-533.388,39.928,11754.960,0.000,OBSB2,0.000,39,0,58149f44,40402963.125,-730.398,41.019,11015.042,0.000,NODIFFCORR,0.000,39,0,41343f44,40402964.083,-550.456,43.408,11009.821,0.000,NA,0.000,30,0,18149f64,22847646.673,2123.913,50.266,6625.051,0.000,NODIFFCORR,0.000,30,0,41343f64,22847649.151,1600.605,49.656,6619.991,0.000,NA,0.000,7,0,08048381,0.000,2500.000,0.000,0.000,0.000,NA,0.000,7,0,08048381,0.000,-2500.000,0.000,0.000,0.000,NA,0.000,33,0,48149fa4,25666349.147,776.929,42.271,3835.148,0.000,NODIFFCORR,0.000,33,0,41343fa4,25666377.385,585.535,48.361,3697.589,0.000,NA,0.000,46,0,48149fc4,23048323.129,-2333.170,49.345,15915.131,0.000,NODIFFCORR,0.000,46,0,41343fc4,23048329.413,-1758.350,52.408,15909.830,0.000,NA,0.000,18,0,080483e1,0.000,4000.000,0.000,0.000,0.000,NA,0.000,18,0,080483e1,0.000,-500.000,0.000,0.000,0.000,NA,0.000,45,0,48149c04,26221109.945,2965.644,44.864,435.050,0.000,NODIFFCORR,0.000,45,0,41343c04,26221119.956,2234.910,47.292,429.831,0.000,NA,0.000,36,0,58149c24,23277715.056,700.443,48.907,8015.069,0.000,NODIFFCORR,0.000,36,0,41343c24,23277723.101,527.848,51.167,8009.829,0.000,NA,0.000,52,0,08048041,0.000,1667.000,0.000,0.000,0.000,NA,0.000,52,0,08048041,0.000,-4166.000,0.000,0.000,0.000,NA,0.000,49,0,08048061,0.000,5832.000,0.000,0.000,0.000,NA,0.000,49,0,08048061,0.000,-4999.000,0.000,0.000,0.000,NA,0.000,47,0,08048081,0.000,1000.000,0.000,0.000,0.000,NA,0.000,47,0,08048081,0.000,-500.000,0.000,0.000,0.000,NA,0.000,58,0,48049ca4,34894393.899,-3079.127,30.345,47.772,0.000,NODIFFCORR,0.000,58,0,012420a9,0.000,-2321.139,0.000,0.000,0.000,NA,0.000,14,0,08149cc4,25730238.361,-588.324,38.191,4795.070,0.000,NODIFFCORR,0.000,14,0,00349cc4,25730237.379,-454.787,44.427,4794.910,0.000,OBSB2,0.000,28,0,08149ce4,24802536.288,-2833.581,46.004,19865.129,0.000,NODIFFCORR,0.000,28,0,41343ce4,24802537.579,-2135.389,46.897,19859.650,0.000,NA,0.000,48,0,08048101,0.000,16000.000,0.000,0.000,0.000,NA,0.000,0,0,00248100,0.000,0.000,0.000,0.000,0.000,NA,0.000,9,0,08149d24,40753569.155,222.237,37.682,1784.493,0.000,NODIFFCORR,0.000,9,0,00349d24,40753568.209,171.813,41.501,4664.961,0.000,OBSB2,0.000,3,0,08848141,0.000,6000.000,0.000,0.000,0.000,NA,0.000,3,0,08848141,0.000,-11000.000,0.000,0.000,0.000,NA,0.000,1,0,08848161,0.000,4999.000,0.000,0.000,0.000,NA,0.000,1,0,08848161,0.000,-4166.000,0.000,0.000,0.000,NA,0.000,6,0,0a670984,0.000,-301.833,36.924,1734607.250,0.000,NA,0.000,1,0,0a6709a4,0.000,83.304,43.782,558002.188,0.000,NA,0.000,0,0,026701c0,0.000,0.000,0.000,0.000,0.000,NA,0.000,3,0,0a6701e1,0.000,419.842,0.000,0.000,0.000,NA,0.000,0,0,02670200,0.000,0.000,0.000,0.000,0.000,NA,0.000*c8963f70\r\n";
   unsigned const char bestposb_log[]  = [ 0xAA, 0x44, 0x12, 0x1C, 0x2A, 0x00, 0x00, 0x20, 0x48, 0x00, 0x00, 0x00, 0xA4, 0xB4, 0xAC, 0x07, 0xD8, 0x16, 0x6D, 0x08, 0x08, 0x40, 0x00, 0x02, 0xF6, 0xB1, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0xD7, 0x03, 0xB0, 0x4C, 0xE5, 0x8E, 0x49, 0x40, 0x52, 0xC4, 0x26, 0xD1, 0x72, 0x82, 0x5C, 0xC0, 0x29, 0xCB, 0x10, 0xC7, 0x7A, 0xA2, 0x90, 0x40, 0x33, 0x33, 0x87, 0xC1, 0x3D, 0x00, 0x00, 0x00, 0xFA, 0x7E, 0xBA, 0x3F, 0x3F, 0x57, 0x83, 0x3F, 0xA9, 0xA4, 0x0A, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x16, 0x16, 0x16, 0x00, 0x06, 0x39, 0x33, 0x23, 0xC4, 0x89, 0x7A ];
   unsigned const char sourcetableb_log[]  = [ 0xAA, 0x44, 0x12, 0x1C, 0x40, 0x05, 0x00, 0x20, 0x68, 0x00, 0x15, 0x00, 0x80, 0xB4, 0x74, 0x08, 0x00, 0x5B, 0x88, 0x0D, 0x20, 0x80, 0x00, 0x02, 0xDD, 0x71, 0x00, 0x80, 0x68, 0x65, 0x72, 0x61, 0x2E, 0x6E, 0x6F, 0x76, 0x61, 0x74, 0x65, 0x6C, 0x2E, 0x63, 0x6F, 0x6D, 0x3A, 0x32, 0x31, 0x30, 0x31, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x53, 0x54, 0x52, 0x3B, 0x48, 0x79, 0x64, 0x65, 0x72, 0x61, 0x62, 0x61, 0x64, 0x5F, 0x4C, 0x42, 0x32, 0x3B, 0x3B, 0x3B, 0x3B, 0x3B, 0x3B, 0x53, 0x4E, 0x49, 0x50, 0x3B, 0x58, 0x58, 0x58, 0x3B, 0x30, 0x2E, 0x30, 0x30, 0x3B, 0x30, 0x2E, 0x30, 0x30, 0x3B, 0x30, 0x3B, 0x30, 0x3B, 0x73, 0x4E, 0x54, 0x52, 0x49, 0x50, 0x3B, 0x6E, 0x6F, 0x6E, 0x65, 0x3B, 0x4E, 0x3B, 0x4E, 0x3B, 0x30, 0x3B, 0x6E, 0x6F, 0x6E, 0x65, 0x3B, 0x00, 0x00, 0x00, 0xB9, 0x6E, 0x19, 0x2E ];
   const char* nmea_gpalm_log = "$GPALM,30,01,01,2029,00,4310,7b,145f,fd44,a10ce4,1c5b11,0b399f,2bc421,f80,ffe*29\r\n";

   my_filter.include_message_id(42, HEADERFORMAT.ALL);   # Filter for BESTPOS (ASCII)
   my_filter.include_message_id(37, HEADERFORMAT.ASCII); # Filter for VERSION (ASCII)
   my_filter.include_message_id(83, HEADERFORMAT.ASCII); # Filter for TRACKSTAT (ASCII)
   my_filter.invert_message_id_filter(True);
   my_filter.include_n_m_e_a_messages(False);

   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(bestposa_log_1)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(bestposa_log_2)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(bestposa_log_3)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(bestposa_log_4)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(versiona_log_1)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(versiona_log_2)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(trackstata_log)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(bestposb_log)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(sourcetableb_log)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(nmea_gpalm_log)))

def test_MIX_2():
   const char* log_to_filter1 = "#TIMEA,COM1,0,6.0,UNKNOWN,0,25.000,024c0020,9924,32768;INVALID,0.000000000,0.000333564,0.00000000000,0,0,0,0,0,0,INVALID*6fe3e59a\r\n";
   const char* log_to_filter2 = "#RANGEA,COM1,0,5.5,UNKNOWN,0,25.000,024c00a0,5103,32768;0*943a8919\r\n";
   const char* log_to_filter3 = "#BESTPOSA,COM1,0,6.0,UNKNOWN,0,25.000,024c0020,cdba,32768;INSUFFICIENT_OBS,NONE,0.00000000000,0.00000000000,0.0000,0.0000,WGS84,0.0000,0.0000,0.0000,\"\",0.000,0.000,0,0,0,0,00,00,00,00*fb4efeaa\r\n";
   const char* log_to_filter4 = "#TIMEA,COM1,0,6.5,UNKNOWN,0,26.000,024c0020,9924,32768;INVALID,0.000000000,0.000333564,0.00000000000,0,0,0,0,0,0,INVALID*ca3c9c2c\r\n";
   const char* log_to_filter5 = "#BESTPOSA,COM1,0,6.5,UNKNOWN,0,26.000,024c0020,cdba,32768;INSUFFICIENT_OBS,NONE,0.00000000000,0.00000000000,0.0000,0.0000,WGS84,0.0000,0.0000,0.0000,\"\",0.000,0.000,0,0,0,0,00,00,00,00*f5a77b4d\r\n";
   const char* log_to_filter6 = "#VERSIONA,COM1,0,5.5,COARSESTEERING,2180,407587.500,024c00a0,3681,32768;2,GPSCARD,\"FFNRNNCBN\",\"BMGX15290006Y\",\"OEM729-0.00H\",\"OM7MGMNJCDND6EB\",\"OM7BR0000ABG001\",\"2021/Sep/13\",\"15:28:07\",OEM7FPGA,\"\",\"\",\"\",\"OMV070001RN0000\",\"\",\"\",\"\"*55a19852\r\n";
   const char* log_to_filter7 = "#RANGEA,COM1,0,6.5,COARSESTEERING,2180,407587.500,024c0020,5103,32768;3,8,0,22086479.072,0.079,-116065230.826912,0.008,827.920,48.3,20.465,0800bca4,32,0,22250341.055,0.070,-116926330.596180,0.007,3298.934,49.5,19.924,0800bce4,15,0,23310073.938,0.111,-122495264.853699,0.012,-3571.021,45.5,19.861,0800bda4*d32c11da\r\n";
   const char* log_to_filter8 = "#BESTPOSA,COM1,0,7.5,COARSESTEERING,2180,407587.500,024c0020,cdba,32768;INSUFFICIENT_OBS,NONE,0.00000000000,0.00000000000,0.0000,0.0000,WGS84,0.0000,0.0000,0.0000,\"\",0.000,0.000,0,0,0,0,00,00,00,00*2075f7c6\r\n";
   const char* log_to_filter9 = "#TIMEA,COM1,0,7.5,COARSESTEERING,2180,407588.000,024c0020,9924,32768;INVALID,0.000000000,0.000333564,-17.99999999838,2021,10,21,17,12,50000,VALID*6fec570c\r\n";
   const char* log_to_filter10 = "#BESTPOSA,COM1,0,8.0,COARSESTEERING,2180,407588.000,024c0020,cdba,32768;SOL_COMPUTED,SINGLE,51.15043021293,-114.03066584294,1096.9485,0.0000,WGS84,34.6695,23.1483,74.2061,\"\",0.000,0.000,8,8,8,0,00,00,01,01*04e05542\r\n";
   const char* log_to_filter11 = "#TIMEA,COM1,0,8.0,COARSESTEERING,2180,407589.000,024c0020,9924,32768;ITERATING,-0.001480222,0.000000136,-17.99999999838,2021,10,21,17,12,51001,VALID*3271a4db\r\n";
   const char* log_to_filter12 = "#BESTPOSA,COM1,0,8.0,COARSESTEERING,2180,407589.000,024c0020,cdba,32768;SOL_COMPUTED,SINGLE,51.15044969214,-114.03067885944,1097.8348,0.0000,WGS84,21.5220,15.8619,35.9534,\"\",0.000,0.000,18,18,18,0,00,00,11,11*9baaa764\r\n";
   const char* log_to_filter13 = "#VERSIONA,COM1,0,5.5,COARSESTEERING,2180,407590.000,024c0020,3681,32768;2,GPSCARD,\"FFNRNNCBN\",\"BMGX15290006Y\",\"OEM729-0.00H\",\"OM7MGMNJCDND6EB\",\"OM7BR0000ABG001\",\"2021/Sep/13\",\"15:28:07\",OEM7FPGA,\"\",\"\",\"\",\"OMV070001RN0000\",\"\",\"\",\"\"*0c5c14a1\r\n";
   const char* log_to_filter14 = "#TIMEA,COM1,0,5.5,COARSESTEERING,2180,407590.000,02400020,9924,32768;ITERATING,-0.001480245,5.445525581e-08,-17.99999999838,2021,10,21,17,12,52001,VALID*0804ea28\r\n";
   const char* log_to_filter15 = "#RANGEA,COM1,0,5.5,COARSESTEERING,2180,407590.000,024c0020,5103,32768;41,23,0,20296030.375,0.055,-106656359.351969,0.006,-1522.264,51.0,22.611,0810bc24,23,0,20296034.364,2.872,-79645997.562468,0.007,-1136.719,55.7,0.830,01d03c24,8,0,22086085.415,0.074,-116063162.380520,0.007,825.378,48.4,22.965,0810bca4,8,0,22086087.843,0.095,-86670551.251795,0.048,616.253,53.7,1.216,01d03ca4,32,0,22248771.717,0.066,-116918083.707594,0.007,3297.228,49.5,22.424,0810bce4,32,0,22248773.901,0.100,-87308967.147285,0.039,2462.156,51.8,1.214,01d03ce4,24,0,22264715.219,0.105,-117001867.872692,0.009,1428.997,45.6,22.284,0810bd04,24,0,22264719.059,0.105,-87371538.460072,0.072,1067.142,50.2,1.145,01d03d04,21,0,24669644.466,0.188,-129639857.490297,0.018,3093.623,40.2,23.416,0800bd24,15,0,23311772.856,0.104,-122504192.563972,0.010,-3572.507,45.6,22.361,0800bda4,39,3,23195458.666,0.174,-123775410.587280,0.008,4001.722,46.6,25.110,08119f64,39,3,23195462.989,0.847,-96269782.463670,0.008,3112.451,42.9,0.641,0031976b,46,5,22953717.926,0.189,-122571572.431876,0.008,1696.585,45.9,25.092,08119fa4,46,5,22953719.900,1.160,-95333453.473848,0.008,1319.566,39.8,0.563,003197ab,38,8,18999930.055,0.143,-101565513.986405,0.006,1405.812,48.4,25.005,18119c04,38,8,18999932.172,0.697,-78995409.137779,0.006,1093.409,45.4,0.555,0031940b,61,9,18934081.726,0.093,-101249042.682301,0.005,817.900,51.8,26.435,18119c24,61,9,18934084.342,0.367,-78749266.465596,0.005,636.145,49.3,1.033,0031942b,60,10,19648944.071,0.097,-105108600.620312,0.006,-2737.993,51.7,25.173,08019c44,54,11,21935268.469,0.220,-117380052.385700,0.008,4060.476,44.6,24.925,08119c64,54,11,21935271.786,0.533,-91295609.074792,0.008,3158.148,46.1,1.217,0031946b,44,12,23261389.160,0.307,-124520037.179708,0.010,-3982.786,41.8,24.051,08119c84,44,12,23261389.788,0.868,-96848920.409648,0.010,-3097.722,42.6,0.562,0031948b,45,13,19511152.838,0.114,-104481336.951767,0.005,-2167.651,50.0,26.455,08119ca4,45,13,19511153.255,0.554,-81263263.963896,0.005,-1685.951,48.8,0.633,003194ab,4,0,23262018.929,0.052,-122242734.095053,0.006,554.113,53.5,23.261,08539d24,4,0,23262022.476,0.094,-91285170.722265,0.048,413.790,54.7,1.240,01933d24,4,0,23262019.108,0.031,-93666511.360582,0.076,424.600,55.8,1.240,02333d24,4,0,23262020.382,1.260,-92475840.210258,0.004,419.179,57.5,0.941,02933d24,9,0,23898656.058,0.091,-125588285.025036,0.007,2841.674,50.1,16.799,08439dc4,11,0,21319648.513,0.110,-112035509.001801,0.015,-461.787,50.2,11.107,08539e04,11,0,21319649.335,3.312,-83662883.158997,0.012,-344.930,50.9,0.827,01933e04,11,0,21319645.998,2.960,-85845379.482821,0.129,-353.888,51.5,0.760,02333e04,11,0,21319647.463,3.898,-84754130.488752,0.009,-349.423,53.6,0.767,02933e04,35,0,22877372.394,0.054,-119128481.299582,0.005,1633.597,51.0,23.542,08049ee4,32,0,23880326.384,0.079,-124351124.940607,0.007,-2624.954,47.9,22.659,18049f44,23,0,25929790.141,0.218,-135023220.319811,0.010,1613.334,44.5,12.772,18049c84,19,0,22897003.727,0.057,-119230706.390177,0.006,2562.076,50.2,24.902,18049d04,20,0,21333636.698,0.042,-111089843.666973,0.005,2.533,53.2,23.627,18049d24,25,0,26367558.065,0.173,-137302792.936779,0.011,-661.552,42.4,17.590,18049e24,29,0,21811517.639,0.046,-113578295.384806,0.006,-1531.856,52.3,23.606,08049e44*f528c67b\r\n";
   const char* log_to_filter16 = "#BESTPOSA,COM1,0,5.5,COARSESTEERING,2180,407590.000,02400020,cdba,32768;SOL_COMPUTED,SINGLE,51.15044625442,-114.03068674478,1098.5042,-17.0000,WGS84,1.9497,1.2176,3.6853,\"\",0.000,0.000,24,18,18,0,00,02,11,11*2660ffae\r\n";
   const char* log_to_filter17 = "#TIMEA,COM1,0,5.5,COARSESTEERING,2180,407591.000,02400020,9924,32768;ITERATING,-0.001480327,5.208111551e-09,-17.99999999838,2021,10,21,17,12,53001,VALID*c46d1791\r\n";
   const char* log_to_filter18 = "#BESTPOSA,COM1,0,5.5,COARSESTEERING,2180,407591.000,02400020,cdba,32768;SOL_COMPUTED,SINGLE,51.15044507847,-114.03068659595,1098.3277,-17.0000,WGS84,1.5509,1.0997,2.5066,\"\",0.000,0.000,24,24,24,0,00,02,11,11*309fb715\r\n";
   const char* log_to_filter19 = "#TIMEA,COM1,0,7.0,COARSESTEERING,2180,407592.000,02400020,9924,32768;ITERATING,-0.001480349,3.184623638e-09,-17.99999999838,2021,10,21,17,12,54001,VALID*b64126e3\r\n";
   const char* log_to_filter20 = "#BESTPOSA,COM1,0,7.0,COARSESTEERING,2180,407592.000,02400020,cdba,32768;SOL_COMPUTED,SINGLE,51.15044507358,-114.03068646694,1098.2902,-17.0000,WGS84,1.5509,1.0992,2.5061,\"\",0.000,0.000,24,24,24,0,00,02,11,11*91248d43\r\n";
   const char* log_to_filter21 = "#TIMEA,COM1,0,6.5,COARSESTEERING,2180,407593.000,02400020,9924,32768;ITERATING,-0.001480363,2.501886198e-09,-17.99999999838,2021,10,21,17,12,55001,VALID*b5cf0420\r\n";
   const char* log_to_filter22 = "#BESTPOSA,COM1,0,6.5,COARSESTEERING,2180,407593.000,02400020,cdba,32768;SOL_COMPUTED,SINGLE,51.15044498855,-114.03068624941,1098.2669,-17.0000,WGS84,1.5510,1.0991,2.5060,\"\",0.000,0.000,24,24,24,0,00,02,11,11*d3b81bb5\r\n";
   const char* log_to_filter23 = "#TIMEA,COM1,0,6.5,COARSESTEERING,2180,407594.000,02400020,9924,32768;ITERATING,-0.001480371,2.131839123e-09,-17.99999999838,2021,10,21,17,12,56001,VALID*741b4855\r\n";
   const char* log_to_filter24 = "#BESTPOSA,COM1,0,6.5,COARSESTEERING,2180,407594.000,02400020,cdba,32768;SOL_COMPUTED,SINGLE,51.15044476808,-114.03068625223,1098.2658,-17.0000,WGS84,1.5511,1.0989,2.5060,\"\",0.000,0.000,27,24,24,0,00,02,11,11*c3b290f9\r\n";
   const char* log_to_filter25 = "#TIMEA,COM1,0,7.5,COARSESTEERING,2180,407595.000,02400020,9924,32768;ITERATING,-0.001480373,1.892068473e-09,-17.99999999838,2021,10,21,17,12,57001,VALID*dd7d6731\r\n";
   const char* log_to_filter26 = "#RANGEA,COM1,0,5.5,COARSESTEERING,2180,407595.000,02400020,5103,32768;77,23,0,20297500.868,0.052,-106664086.632315,0.006,-1562.684,50.7,27.611,0810bc24,23,0,20297500.632,0.265,-83114871.442232,0.005,-1217.676,50.4,1.250,01305c2b,23,0,20297501.045,0.140,-83114872.694162,0.007,-1217.677,53.0,4.512,02309c2b,23,0,20297505.319,0.067,-79651767.930981,0.004,-1166.878,55.9,5.830,01d03c24,8,0,22085323.035,0.069,-116059155.718779,0.008,783.431,48.2,27.965,0810bca4,8,0,22085325.492,0.358,-90435713.372734,0.009,610.466,47.5,2.745,01305cab,8,0,22085325.995,0.198,-90435715.632605,0.008,610.465,49.8,4.785,02309cab,8,0,22085325.442,0.066,-86667559.258654,0.006,585.051,53.8,6.216,01d03ca4,32,0,22245656.498,0.061,-116901713.393351,0.007,3257.008,49.3,27.424,0810bce4,32,0,22245659.125,0.360,-91092255.293990,0.011,2537.928,47.4,2.405,01305ceb,32,0,22245659.231,0.201,-91092248.543947,0.007,2537.927,49.7,4.783,02309ceb,32,0,22245658.803,0.068,-87296742.558874,0.006,2432.279,52.0,6.214,01d03ce4,24,0,22263378.104,0.098,-116994841.931118,0.009,1387.328,45.2,27.284,0810bd04,24,0,22263381.064,0.464,-91164823.200386,0.014,1081.034,45.3,2.405,01305d0b,24,0,22263381.254,0.244,-91164817.453840,0.010,1081.036,48.0,4.784,02309d0b,24,0,22263382.083,0.071,-87366291.822250,0.008,1036.050,50.4,6.145,01d03d04,21,0,24666722.444,0.168,-129624501.758570,0.015,3054.951,40.4,28.416,0810bd24,21,0,24666722.744,0.790,-101006106.505545,0.019,2380.481,40.6,2.497,01305d2b,18,0,21981503.954,0.067,-115513581.695168,0.007,-3112.239,48.3,28.105,0800bd44,15,0,23315193.939,0.100,-122522170.201077,0.012,-3612.525,45.0,27.361,0810bda4,15,0,23315194.577,0.472,-95471823.159175,0.011,-2814.954,45.1,2.741,01305dab,15,0,23315194.509,0.340,-95471821.421129,0.012,-2814.955,45.1,4.682,02309dab,10,0,20058554.660,0.034,-105408414.831429,0.006,676.520,54.2,28.112,1800bdc4,27,0,21420640.151,0.053,-112566222.962255,0.007,-1305.266,50.4,28.067,0810bde4,27,0,21420642.131,5.656,-84059200.042173,0.044,-974.588,53.6,0.647,01d03de4,39,3,23191730.713,0.167,-123755517.439732,0.008,3961.597,46.2,30.110,08119f64,39,3,23191737.435,0.130,-96254312.753414,0.009,3081.246,42.7,4.721,10b13f6b,39,3,23191737.125,0.527,-96254310.011505,0.008,3081.244,43.5,5.641,00319f6b,46,5,22952152.164,0.171,-122563211.547077,0.008,1653.720,46.0,30.092,08119fa4,46,5,22952155.579,0.197,-95326955.817892,0.009,1286.228,39.0,4.722,00b13fab,46,5,22952155.755,0.808,-95326950.071980,0.009,1286.228,39.8,5.563,10319fab,38,8,18998637.906,0.130,-101558607.040641,0.006,1363.216,48.4,30.005,18119c04,38,8,18998643.997,0.103,-78990046.826712,0.006,1060.280,44.6,4.656,10b13c0b,38,8,18998642.764,0.407,-78990037.073071,0.006,1060.279,45.8,5.555,00319c0b,61,9,18933340.219,0.085,-101245077.461238,0.005,774.337,51.9,31.435,18119c24,61,9,18933343.261,0.061,-78746182.652719,0.005,602.263,48.8,5.036,00b13c2b,61,9,18933343.113,0.259,-78746181.906229,0.005,602.261,49.3,6.033,10319c2b,60,10,19651526.114,0.088,-105122412.778005,0.005,-2780.830,51.8,30.173,08019c44,54,11,21931496.436,0.190,-117359867.373328,0.008,4019.855,45.1,29.925,08119c64,54,11,21931499.657,0.092,-91279908.365263,0.008,3126.554,45.3,5.066,10b13c6b,54,11,21931500.087,0.378,-91279909.619295,0.008,3126.552,45.9,6.217,00319c6b,44,12,23265130.397,0.268,-124540065.478237,0.010,-4022.401,42.2,29.051,08119c84,44,12,23265132.939,0.134,-96864504.724735,0.011,-3128.535,42.4,4.642,00b13c8b,44,12,23265134.440,0.590,-96864497.977821,0.011,-3128.535,42.5,5.562,00319c8b,45,13,19513199.233,0.104,-104492295.524177,0.005,-2209.578,50.1,31.455,08119ca4,45,13,19513200.373,0.065,-81271790.545637,0.006,-1718.560,48.7,4.714,00b13cab,45,13,19513200.665,0.281,-81271786.796770,0.006,-1718.560,48.9,5.633,10319cab,4,0,23261513.970,0.049,-122240080.567102,0.006,513.442,53.2,28.261,08539d24,4,0,23261517.679,0.065,-91283189.196609,0.006,383.352,54.8,6.240,01933d24,4,0,23261514.144,0.017,-93664478.142199,0.010,393.414,55.8,6.240,02333d24,4,0,23261515.437,0.065,-92473832.837046,0.004,388.382,57.7,5.941,02933d24,9,0,23895974.018,0.082,-125574190.676455,0.006,2802.065,49.9,21.799,08539dc4,9,0,23895979.211,0.083,-93772951.560656,0.014,2092.436,48.8,4.634,01933dc4,9,0,23895976.481,0.032,-96219193.923071,0.019,2147.062,51.9,4.635,02333dc4,9,0,23895977.631,0.077,-94996067.408674,0.005,2119.773,52.7,4.359,02933dc4,11,0,21320110.232,0.094,-112037935.358484,0.016,-502.672,50.0,16.107,08539e04,11,0,21320111.176,0.072,-83664695.046743,0.011,-375.390,51.1,5.827,01933e04,11,0,21320107.412,0.029,-85847238.635632,0.020,-385.203,51.6,5.760,02333e04,11,0,21320109.153,0.068,-84755966.011379,0.011,-380.314,53.8,5.767,02933e04,30,0,24900309.826,0.291,-129662447.050890,0.008,-3516.229,45.6,9.155,18049ec4,35,0,22875826.226,0.048,-119120430.228863,0.005,1592.785,51.2,28.542,08149ee4,35,0,22875828.809,5.656,-89769665.177532,0.080,1200.265,50.0,0.641,01343ee4,35,0,22875825.944,0.090,-92111471.486866,0.020,1231.668,48.2,4.042,01743ee4,32,0,23882868.520,0.071,-124364362.318052,0.007,-2663.985,47.9,27.659,18149f44,32,0,23882875.101,5.656,-93721531.198517,0.062,-2007.573,51.6,0.639,01343f44,32,0,23882871.851,0.081,-96166426.626690,0.009,-2059.995,49.1,4.819,01743f44,23,0,25928263.061,0.131,-135015269.286980,0.008,1572.973,44.8,17.772,18149c84,23,0,25928258.755,0.105,-104402354.741234,0.016,1216.402,44.3,4.448,01743c84,19,0,22894565.383,0.052,-119218009.616373,0.006,2522.539,50.3,29.902,18149d04,19,0,22894567.405,5.656,-89843199.600471,0.127,1901.049,51.0,0.642,01343d04,19,0,22894564.496,0.084,-92186924.132240,0.013,1950.624,48.8,4.638,11743d04,20,0,21333656.505,0.038,-111089946.855726,0.005,-37.780,53.3,28.627,18149d24,20,0,21333652.378,0.076,-85901777.681990,0.014,-29.197,53.2,4.441,11743d24,25,0,26368215.794,0.150,-137306218.129744,0.011,-702.371,42.3,22.590,18149e24,25,0,26368215.690,0.109,-106173876.909266,0.013,-543.206,42.7,5.247,11743e24,29,0,21813011.021,0.042,-113586071.992727,0.005,-1572.769,52.4,28.606,08149e44,29,0,21813008.843,0.080,-87831948.349440,0.015,-1216.090,50.9,4.438,01743e44*0475a421\r\n";
   const char* log_to_filter27 = "#BESTPOSA,COM1,0,7.5,COARSESTEERING,2180,407595.000,02400020,cdba,32768;SOL_COMPUTED,SINGLE,51.15044243058,-114.03068360219,1097.7004,-17.0000,WGS84,1.3792,0.9846,2.2407,\"\",0.000,0.000,28,27,27,0,00,02,11,11*9a57a6f4\r\n";
   const char* log_to_filter28 = "#TIMEA,COM1,0,7.5,FINESTEERING,2180,407596.000,02400020,9924,32768;ITERATING,-0.001480373,1.694616069e-09,-17.99999999838,2021,10,21,17,12,58001,VALID*ca78e438\r\n";
   const char* log_to_filter29 = "#BESTPOSA,COM1,0,7.5,FINESTEERING,2180,407596.000,02400020,cdba,32768;SOL_COMPUTED,SINGLE,51.15044308398,-114.03068382954,1097.7873,-17.0000,WGS84,1.1918,0.9784,2.0965,\"\",0.000,0.000,29,28,28,0,00,02,11,11*81ec1d55\r\n";
   const char* log_to_filter30 = "#TIMEA,COM1,0,7.5,FINESTEERING,2180,407597.000,02400020,9924,32768;ITERATING,-1.056282464e-08,4.980118958e-09,-17.99999999838,2021,10,21,17,12,59000,VALID*86a8f91f\r\n";
   const char* log_to_filter31 = "#BESTPOSA,COM1,0,7.5,FINESTEERING,2180,407597.000,02400020,cdba,32768;SOL_COMPUTED,SINGLE,51.15044349643,-114.03068418925,1097.7073,-17.0000,WGS84,1.1581,0.9671,2.0529,\"\",0.000,0.000,30,29,29,0,00,02,11,11*4f210b38\r\n";
   const char* log_to_filter32 = "#TIMEA,COM1,0,7.5,FINESTEERING,2180,407598.000,02400020,9924,32768;ITERATING,-8.720389968e-09,2.851254543e-09,-17.99999999838,2021,10,21,17,13,0,VALID*6046ea6b\r\n";
   const char* log_to_filter33 = "#BESTPOSA,COM1,0,7.5,FINESTEERING,2180,407598.000,02400020,cdba,32768;SOL_COMPUTED,SINGLE,51.15044380692,-114.03068422806,1097.7573,-17.0000,WGS84,1.1254,0.9541,2.0500,\"\",0.000,0.000,30,30,30,0,00,02,11,11*6dea55c5\r\n";
   const char* log_to_filter34 = "#TIMEA,COM1,0,8.5,FINESTEERING,2180,407599.000,02400020,9924,32768;ITERATING,-5.706091940e-09,2.208897498e-09,-17.99999999838,2021,10,21,17,13,1000,VALID*19f9590d\r\n";
   const char* log_to_filter35 = "#BESTPOSA,COM1,0,8.5,FINESTEERING,2180,407599.000,02400020,cdba,32768;SOL_COMPUTED,SINGLE,51.15044360617,-114.03068408017,1097.7294,-17.0000,WGS84,1.1247,0.9540,2.0496,\"\",0.000,0.000,31,30,30,0,00,02,11,11*09f5c77f\r\n";
   const char* log_to_filter36 = "#VERSIONA,COM1,0,5.5,FINESTEERING,2180,407600.000,02400020,3681,32768;2,GPSCARD,\"FFNRNNCBN\",\"BMGX15290006Y\",\"OEM729-0.00H\",\"OM7MGMNJCDND6EB\",\"OM7BR0000ABG001\",\"2021/Sep/13\",\"15:28:07\",OEM7FPGA,\"\",\"\",\"\",\"OMV070001RN0000\",\"\",\"\",\"\"*6ebd192f\r\n";
   const char* log_to_filter37 = "#TIMEA,COM1,0,8.5,FINESTEERING,2180,407600.000,02400020,9924,32768;ITERATING,-2.698749387e-09,1.871232507e-09,-17.99999999838,2021,10,21,17,13,2000,VALID*500b310b\r\n";
   const char* filtered_log = "#RANGEA,COM1,0,7.5,FINESTEERING,2180,407600.000,02400020,5103,32768;97,23,0,20742792.951,0.046,-109004112.049799,0.006,-1569.674,51.1,32.610,0810bc24,23,0,20742792.750,0.186,-84938267.863909,0.006,-1223.123,50.0,6.249,01305c2b,23,0,20742792.847,0.096,-84938269.116295,0.006,-1223.124,53.0,9.510,02309c2b,23,0,20742797.345,0.042,-81399189.508091,0.004,-1172.077,55.9,10.829,01d03c24,8,0,22528384.243,0.061,-118387457.924629,0.008,775.156,48.5,32.964,0810bca4,8,0,22528386.777,0.241,-92249974.832392,0.009,604.018,46.9,7.744,01305cab,8,0,22528387.307,0.137,-92249977.089224,0.009,604.017,49.9,9.784,02309cab,8,0,22528386.573,0.041,-88406226.493011,0.004,578.790,53.7,11.215,01d03ca4,32,0,22686363.945,0.054,-119217646.474789,0.007,3250.487,49.6,32.423,0810bce4,32,0,22686366.736,0.229,-92896878.471411,0.009,2532.846,47.3,7.403,01305ceb,32,0,22686366.916,0.139,-92896871.724675,0.008,2532.847,49.7,9.781,02309ceb,32,0,22686366.199,0.043,-89026173.111600,0.005,2427.340,51.9,11.213,01d03ce4,24,0,22705864.682,0.086,-119320124.813728,0.010,1378.939,45.6,32.283,0810bd04,24,0,22705867.730,0.304,-92976731.939616,0.014,1074.499,44.9,7.403,01305d0b,24,0,22705867.765,0.170,-92976726.195712,0.011,1074.498,47.9,9.782,02309d0b,24,0,22705868.751,0.045,-89102704.360517,0.006,1029.886,50.4,11.143,01d03d04,21,0,25107621.799,0.157,-131941443.240112,0.015,3049.215,40.2,33.414,0810bd24,21,0,25107622.272,0.511,-102811515.463824,0.019,2376.015,40.4,7.495,01305d2b,18,0,22428269.766,0.060,-117861351.677555,0.007,-3118.904,48.7,33.104,0810bd44,18,0,22428270.582,0.341,-91840018.377299,0.009,-2430.314,48.0,1.744,01305d4b,18,0,22428270.851,0.197,-91840020.623335,0.008,-2430.314,50.7,4.004,02309d4b,18,0,22428276.184,0.070,-88013371.028066,0.008,-2328.945,53.6,5.444,01d03d44,15,0,23762435.332,0.086,-124872439.418394,0.010,-3618.623,45.6,32.360,0810bda4,15,0,23762436.149,0.288,-97303201.768388,0.010,-2819.707,45.4,7.739,01305dab,15,0,23762436.478,0.224,-97303200.020764,0.011,-2819.708,45.6,9.680,02309dab,10,0,20501716.740,0.030,-107737247.457800,0.006,669.502,54.6,33.111,1810bdc4,10,0,20501718.526,0.218,-83951109.550164,0.012,521.690,52.1,1.410,11305dcb,10,0,20501718.446,0.137,-83951105.806965,0.006,521.690,53.2,4.610,02309dcb,10,0,20501717.497,0.069,-80453142.024519,0.012,500.008,55.8,5.451,01d03dc4,27,0,21865687.995,0.047,-114904964.957329,0.009,-1313.509,50.8,33.066,0810bde4,27,0,21865689.816,0.277,-89536343.796655,0.012,-1023.514,49.9,1.406,01305deb,27,0,21865690.201,0.179,-89536345.047585,0.008,-1023.513,51.6,3.906,02309deb,27,0,21865690.220,0.069,-85805663.218944,0.005,-980.794,53.7,5.646,01d03de4,195,0,43535938.853,0.997,-228782904.394478,0.050,97.965,41.7,1.894,0805be64,39,3,23631824.987,0.161,-126103944.379482,0.008,3955.602,45.9,35.108,08119f64,39,3,23631831.178,0.095,-98080867.076891,0.010,3076.584,42.1,9.719,10b13f6b,39,3,23631830.647,0.419,-98080864.331959,0.009,3076.583,42.7,10.640,00319f6b,46,5,23394410.562,0.168,-124924846.921444,0.008,1645.097,45.5,35.091,08119fa4,46,5,23394413.840,0.138,-97163783.339546,0.008,1279.521,38.9,9.721,00b13fab,46,5,23394414.425,0.589,-97163777.588993,0.008,1279.521,39.8,10.561,10319fab,38,8,19441169.444,0.127,-103924192.060146,0.007,1354.658,47.9,35.004,18119c04,38,8,19441175.548,0.072,-80829946.284019,0.007,1053.623,44.6,9.654,10b13c0b,38,8,19441174.425,0.295,-80829936.531229,0.007,1053.623,45.8,10.554,00319c0b,61,9,19376423.087,0.084,-103614440.682349,0.005,765.021,51.4,36.434,18119c24,61,9,19376426.033,0.044,-80589020.713352,0.005,595.017,48.7,10.035,00b13c2b,61,9,19376426.215,0.193,-80589019.965771,0.005,595.016,49.3,11.032,10319c2b,60,10,20097930.916,0.086,-107510377.111368,0.006,-2789.332,51.3,35.172,08019c44,54,11,22371546.971,0.192,-119714667.286963,0.009,4013.269,44.3,34.924,08119c64,54,11,22371550.593,0.065,-93111419.410790,0.009,3121.432,45.3,10.064,10b13c6b,54,11,22371550.486,0.275,-93111420.666705,0.009,3121.432,46.1,11.216,00319c6b,44,12,23712690.875,0.292,-126935892.950525,0.011,-4027.379,40.8,34.049,08119c84,44,12,23712694.012,0.097,-98727926.080471,0.012,-3132.409,42.0,9.640,00b13c8b,44,12,23712694.402,0.452,-98727919.338653,0.012,-3132.408,42.0,10.560,00319c8b,45,13,19959067.661,0.102,-106879900.540449,0.005,-2217.328,49.6,36.453,08119ca4,45,13,19959068.752,0.045,-83128816.666560,0.006,-1724.589,48.7,9.712,00b13cab,45,13,19959068.964,0.205,-83128812.915366,0.005,-1724.589,48.9,10.632,10319cab,36,0,25125640.606,0.171,-132036132.059647,0.007,2122.474,50.4,4.515,08539cc4,36,0,25125647.090,0.096,-98598432.570003,0.038,1584.968,51.3,2.253,01933cc4,36,0,25125643.494,0.042,-101170552.953031,0.043,1626.410,52.7,2.255,02333cc4,36,0,25125644.280,0.089,-99884485.431022,0.006,1605.671,54.1,2.175,02933cc4,4,0,23704831.386,0.043,-124569729.390211,0.006,506.173,53.5,33.260,08539d24,4,0,23704835.118,0.041,-93022862.014097,0.004,378.062,54.9,11.238,01933d24,4,0,23704831.592,0.013,-95449533.729992,0.004,387.896,55.7,11.239,02333d24,4,0,23704832.864,0.040,-94236197.040798,0.004,382.983,57.7,10.939,02933d24,9,0,24337113.933,0.071,-127892396.521105,0.006,2796.031,50.2,26.798,08539dc4,9,0,24337119.145,0.055,-95504079.306541,0.006,2087.980,48.9,9.633,01933dc4,9,0,24337116.399,0.022,-97995481.519361,0.005,2142.473,51.7,9.634,02333dc4,9,0,24337117.533,0.050,-96749775.081781,0.005,2115.195,52.8,9.358,02933dc4,11,0,21764394.000,0.078,-114372662.230968,0.016,-509.639,50.4,21.106,08539e04,11,0,21764394.874,0.046,-85408159.916046,0.011,-380.564,51.2,10.826,01933e04,11,0,21764391.156,0.022,-87636185.192937,0.012,-390.407,51.4,10.758,02333e04,11,0,21764392.912,0.043,-86522171.723775,0.011,-385.475,53.8,10.766,02933e04,30,0,25347490.171,0.186,-131991032.051733,0.010,-3521.784,44.8,14.154,18149ec4,30,0,25347493.223,0.106,-102063849.002439,0.011,-2723.240,44.4,4.254,01743ec4,35,0,23318103.142,0.045,-121423482.169649,0.006,1585.411,51.0,33.541,08149ee4,35,0,23318106.047,0.074,-91505254.770271,0.008,1194.859,50.2,5.640,01343ee4,35,0,23318102.856,0.060,-93892337.335754,0.006,1225.981,47.9,9.041,01743ee4,32,0,24329230.899,0.066,-126688688.281939,0.008,-2669.839,47.8,32.658,18149f44,32,0,24329238.229,0.071,-95473152.992887,0.007,-2011.999,51.9,5.638,01343f44,32,0,24329234.245,0.054,-97963742.895374,0.005,-2064.471,49.0,9.818,01743f44,10,0,41200419.719,0.220,-214541396.438501,0.014,307.525,40.8,16.261,18149fa4,10,0,41200417.817,0.457,-165897011.707388,0.015,237.583,43.8,4.441,003497a4,23,0,26370558.823,0.115,-137318419.659615,0.010,1565.900,44.6,22.771,18149c84,23,0,26370558.170,0.084,-103483735.258005,0.014,1180.124,47.7,4.991,01343c84,23,0,26370554.485,0.071,-106183296.719354,0.008,1210.904,44.2,9.447,01743c84,19,0,23335949.237,0.049,-121516411.434889,0.006,2516.239,50.2,34.901,18149d04,19,0,23335951.484,0.072,-91575284.852926,0.011,1896.299,51.3,5.641,01343d04,19,0,23335948.398,0.056,-93964194.214218,0.006,1945.745,48.6,9.637,11743d04,20,0,21777498.539,0.035,-113401148.742895,0.005,-44.823,53.3,33.626,18149d24,20,0,21777497.588,0.071,-85459578.394430,0.015,-33.735,55.6,5.045,01343d24,20,0,21777494.410,0.051,-87688945.587293,0.004,-34.668,53.0,9.440,11743d24,25,0,26812696.158,0.132,-139620743.984209,0.012,-710.154,42.6,27.589,18149e24,25,0,26812698.725,0.104,-105218789.152803,0.012,-535.063,43.7,4.989,01343e24,25,0,26812696.208,0.075,-107963615.107809,0.009,-549.023,42.7,10.246,11743e24,29,0,22258326.689,0.039,-115904947.604645,0.006,-1580.344,52.3,33.604,08149e44,29,0,22258328.914,0.071,-87346461.870361,0.006,-1190.900,53.8,5.245,01343e44,29,0,22258324.535,0.053,-89625050.062736,0.005,-1221.969,50.8,9.436,01743e44*aced3074\r\n";

   my_filter.include_message_id(43, HEADERFORMAT.ASCII); # Filter for RANGE
   my_filter.include_time_status(TIME_STATUS.FINESTEERING); # Filter for FINESTEERING
   my_filter.set_include_lower_time_bound(2180, 407595);

   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter1)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter2)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter3)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter4)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter5)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter6)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter7)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter8)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter9)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter10)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter11)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter12)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter13)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter14)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter15)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter16)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter17)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter18)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter19)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter20)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter21)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter22)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter23)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter24)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter25)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter26)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter27)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter28)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter29)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter30)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter31)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter32)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter33)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter34)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter35)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter36)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter37)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(filtered_log)))

def test_MIX_2_INVERTED():
   const char* log_to_filter1 = "#TIMEA,COM1,0,6.0,UNKNOWN,0,25.000,024c0020,9924,32768;INVALID,0.000000000,0.000333564,0.00000000000,0,0,0,0,0,0,INVALID*6fe3e59a\r\n";
   const char* filtered_log_1 = "#RANGEA,COM1,0,5.5,UNKNOWN,0,25.000,024c00a0,5103,32768;0*943a8919\r\n";
   const char* log_to_filter2 = "#BESTPOSA,COM1,0,6.0,UNKNOWN,0,25.000,024c0020,cdba,32768;INSUFFICIENT_OBS,NONE,0.00000000000,0.00000000000,0.0000,0.0000,WGS84,0.0000,0.0000,0.0000,\"\",0.000,0.000,0,0,0,0,00,00,00,00*fb4efeaa\r\n";
   const char* log_to_filter3 = "#TIMEA,COM1,0,6.5,UNKNOWN,0,26.000,024c0020,9924,32768;INVALID,0.000000000,0.000333564,0.00000000000,0,0,0,0,0,0,INVALID*ca3c9c2c\r\n";
   const char* log_to_filter4 = "#BESTPOSA,COM1,0,6.5,UNKNOWN,0,26.000,024c0020,cdba,32768;INSUFFICIENT_OBS,NONE,0.00000000000,0.00000000000,0.0000,0.0000,WGS84,0.0000,0.0000,0.0000,\"\",0.000,0.000,0,0,0,0,00,00,00,00*f5a77b4d\r\n";
   const char* log_to_filter5 = "#VERSIONA,COM1,0,5.5,COARSESTEERING,2180,407587.500,024c00a0,3681,32768;2,GPSCARD,\"FFNRNNCBN\",\"BMGX15290006Y\",\"OEM729-0.00H\",\"OM7MGMNJCDND6EB\",\"OM7BR0000ABG001\",\"2021/Sep/13\",\"15:28:07\",OEM7FPGA,\"\",\"\",\"\",\"OMV070001RN0000\",\"\",\"\",\"\"*55a19852\r\n";
   const char* filtered_log_2 = "#RANGEA,COM1,0,6.5,COARSESTEERING,2180,407587.500,024c0020,5103,32768;3,8,0,22086479.072,0.079,-116065230.826912,0.008,827.920,48.3,20.465,0800bca4,32,0,22250341.055,0.070,-116926330.596180,0.007,3298.934,49.5,19.924,0800bce4,15,0,23310073.938,0.111,-122495264.853699,0.012,-3571.021,45.5,19.861,0800bda4*d32c11da\r\n";
   const char* log_to_filter6 = "#BESTPOSA,COM1,0,7.5,COARSESTEERING,2180,407587.500,024c0020,cdba,32768;INSUFFICIENT_OBS,NONE,0.00000000000,0.00000000000,0.0000,0.0000,WGS84,0.0000,0.0000,0.0000,\"\",0.000,0.000,0,0,0,0,00,00,00,00*2075f7c6\r\n";
   const char* log_to_filter7 = "#TIMEA,COM1,0,7.5,COARSESTEERING,2180,407588.000,024c0020,9924,32768;INVALID,0.000000000,0.000333564,-17.99999999838,2021,10,21,17,12,50000,VALID*6fec570c\r\n";
   const char* log_to_filter8 = "#BESTPOSA,COM1,0,8.0,COARSESTEERING,2180,407588.000,024c0020,cdba,32768;SOL_COMPUTED,SINGLE,51.15043021293,-114.03066584294,1096.9485,0.0000,WGS84,34.6695,23.1483,74.2061,\"\",0.000,0.000,8,8,8,0,00,00,01,01*04e05542\r\n";
   const char* log_to_filter9 = "#TIMEA,COM1,0,8.0,COARSESTEERING,2180,407589.000,024c0020,9924,32768;ITERATING,-0.001480222,0.000000136,-17.99999999838,2021,10,21,17,12,51001,VALID*3271a4db\r\n";
   const char* log_to_filter10 = "#BESTPOSA,COM1,0,8.0,COARSESTEERING,2180,407589.000,024c0020,cdba,32768;SOL_COMPUTED,SINGLE,51.15044969214,-114.03067885944,1097.8348,0.0000,WGS84,21.5220,15.8619,35.9534,\"\",0.000,0.000,18,18,18,0,00,00,11,11*9baaa764\r\n";
   const char* log_to_filter11 = "#VERSIONA,COM1,0,5.5,COARSESTEERING,2180,407590.000,024c0020,3681,32768;2,GPSCARD,\"FFNRNNCBN\",\"BMGX15290006Y\",\"OEM729-0.00H\",\"OM7MGMNJCDND6EB\",\"OM7BR0000ABG001\",\"2021/Sep/13\",\"15:28:07\",OEM7FPGA,\"\",\"\",\"\",\"OMV070001RN0000\",\"\",\"\",\"\"*0c5c14a1\r\n";
   const char* log_to_filter12 = "#TIMEA,COM1,0,5.5,COARSESTEERING,2180,407590.000,02400020,9924,32768;ITERATING,-0.001480245,5.445525581e-08,-17.99999999838,2021,10,21,17,12,52001,VALID*0804ea28\r\n";
   const char* filtered_log_3 = "#RANGEA,COM1,0,5.5,COARSESTEERING,2180,407590.000,024c0020,5103,32768;41,23,0,20296030.375,0.055,-106656359.351969,0.006,-1522.264,51.0,22.611,0810bc24,23,0,20296034.364,2.872,-79645997.562468,0.007,-1136.719,55.7,0.830,01d03c24,8,0,22086085.415,0.074,-116063162.380520,0.007,825.378,48.4,22.965,0810bca4,8,0,22086087.843,0.095,-86670551.251795,0.048,616.253,53.7,1.216,01d03ca4,32,0,22248771.717,0.066,-116918083.707594,0.007,3297.228,49.5,22.424,0810bce4,32,0,22248773.901,0.100,-87308967.147285,0.039,2462.156,51.8,1.214,01d03ce4,24,0,22264715.219,0.105,-117001867.872692,0.009,1428.997,45.6,22.284,0810bd04,24,0,22264719.059,0.105,-87371538.460072,0.072,1067.142,50.2,1.145,01d03d04,21,0,24669644.466,0.188,-129639857.490297,0.018,3093.623,40.2,23.416,0800bd24,15,0,23311772.856,0.104,-122504192.563972,0.010,-3572.507,45.6,22.361,0800bda4,39,3,23195458.666,0.174,-123775410.587280,0.008,4001.722,46.6,25.110,08119f64,39,3,23195462.989,0.847,-96269782.463670,0.008,3112.451,42.9,0.641,0031976b,46,5,22953717.926,0.189,-122571572.431876,0.008,1696.585,45.9,25.092,08119fa4,46,5,22953719.900,1.160,-95333453.473848,0.008,1319.566,39.8,0.563,003197ab,38,8,18999930.055,0.143,-101565513.986405,0.006,1405.812,48.4,25.005,18119c04,38,8,18999932.172,0.697,-78995409.137779,0.006,1093.409,45.4,0.555,0031940b,61,9,18934081.726,0.093,-101249042.682301,0.005,817.900,51.8,26.435,18119c24,61,9,18934084.342,0.367,-78749266.465596,0.005,636.145,49.3,1.033,0031942b,60,10,19648944.071,0.097,-105108600.620312,0.006,-2737.993,51.7,25.173,08019c44,54,11,21935268.469,0.220,-117380052.385700,0.008,4060.476,44.6,24.925,08119c64,54,11,21935271.786,0.533,-91295609.074792,0.008,3158.148,46.1,1.217,0031946b,44,12,23261389.160,0.307,-124520037.179708,0.010,-3982.786,41.8,24.051,08119c84,44,12,23261389.788,0.868,-96848920.409648,0.010,-3097.722,42.6,0.562,0031948b,45,13,19511152.838,0.114,-104481336.951767,0.005,-2167.651,50.0,26.455,08119ca4,45,13,19511153.255,0.554,-81263263.963896,0.005,-1685.951,48.8,0.633,003194ab,4,0,23262018.929,0.052,-122242734.095053,0.006,554.113,53.5,23.261,08539d24,4,0,23262022.476,0.094,-91285170.722265,0.048,413.790,54.7,1.240,01933d24,4,0,23262019.108,0.031,-93666511.360582,0.076,424.600,55.8,1.240,02333d24,4,0,23262020.382,1.260,-92475840.210258,0.004,419.179,57.5,0.941,02933d24,9,0,23898656.058,0.091,-125588285.025036,0.007,2841.674,50.1,16.799,08439dc4,11,0,21319648.513,0.110,-112035509.001801,0.015,-461.787,50.2,11.107,08539e04,11,0,21319649.335,3.312,-83662883.158997,0.012,-344.930,50.9,0.827,01933e04,11,0,21319645.998,2.960,-85845379.482821,0.129,-353.888,51.5,0.760,02333e04,11,0,21319647.463,3.898,-84754130.488752,0.009,-349.423,53.6,0.767,02933e04,35,0,22877372.394,0.054,-119128481.299582,0.005,1633.597,51.0,23.542,08049ee4,32,0,23880326.384,0.079,-124351124.940607,0.007,-2624.954,47.9,22.659,18049f44,23,0,25929790.141,0.218,-135023220.319811,0.010,1613.334,44.5,12.772,18049c84,19,0,22897003.727,0.057,-119230706.390177,0.006,2562.076,50.2,24.902,18049d04,20,0,21333636.698,0.042,-111089843.666973,0.005,2.533,53.2,23.627,18049d24,25,0,26367558.065,0.173,-137302792.936779,0.011,-661.552,42.4,17.590,18049e24,29,0,21811517.639,0.046,-113578295.384806,0.006,-1531.856,52.3,23.606,08049e44*f528c67b\r\n";
   const char* log_to_filter13 = "#BESTPOSA,COM1,0,5.5,COARSESTEERING,2180,407590.000,02400020,cdba,32768;SOL_COMPUTED,SINGLE,51.15044625442,-114.03068674478,1098.5042,-17.0000,WGS84,1.9497,1.2176,3.6853,\"\",0.000,0.000,24,18,18,0,00,02,11,11*2660ffae\r\n";
   const char* log_to_filter14 = "#TIMEA,COM1,0,5.5,COARSESTEERING,2180,407591.000,02400020,9924,32768;ITERATING,-0.001480327,5.208111551e-09,-17.99999999838,2021,10,21,17,12,53001,VALID*c46d1791\r\n";
   const char* log_to_filter15 = "#BESTPOSA,COM1,0,5.5,COARSESTEERING,2180,407591.000,02400020,cdba,32768;SOL_COMPUTED,SINGLE,51.15044507847,-114.03068659595,1098.3277,-17.0000,WGS84,1.5509,1.0997,2.5066,\"\",0.000,0.000,24,24,24,0,00,02,11,11*309fb715\r\n";
   const char* log_to_filter16 = "#TIMEA,COM1,0,7.0,COARSESTEERING,2180,407592.000,02400020,9924,32768;ITERATING,-0.001480349,3.184623638e-09,-17.99999999838,2021,10,21,17,12,54001,VALID*b64126e3\r\n";
   const char* log_to_filter17 = "#BESTPOSA,COM1,0,7.0,COARSESTEERING,2180,407592.000,02400020,cdba,32768;SOL_COMPUTED,SINGLE,51.15044507358,-114.03068646694,1098.2902,-17.0000,WGS84,1.5509,1.0992,2.5061,\"\",0.000,0.000,24,24,24,0,00,02,11,11*91248d43\r\n";
   const char* log_to_filter18 = "#TIMEA,COM1,0,6.5,COARSESTEERING,2180,407593.000,02400020,9924,32768;ITERATING,-0.001480363,2.501886198e-09,-17.99999999838,2021,10,21,17,12,55001,VALID*b5cf0420\r\n";
   const char* log_to_filter19 = "#BESTPOSA,COM1,0,6.5,COARSESTEERING,2180,407593.000,02400020,cdba,32768;SOL_COMPUTED,SINGLE,51.15044498855,-114.03068624941,1098.2669,-17.0000,WGS84,1.5510,1.0991,2.5060,\"\",0.000,0.000,24,24,24,0,00,02,11,11*d3b81bb5\r\n";
   const char* log_to_filter20 = "#TIMEA,COM1,0,6.5,COARSESTEERING,2180,407594.000,02400020,9924,32768;ITERATING,-0.001480371,2.131839123e-09,-17.99999999838,2021,10,21,17,12,56001,VALID*741b4855\r\n";
   const char* log_to_filter21 = "#BESTPOSA,COM1,0,6.5,COARSESTEERING,2180,407594.000,02400020,cdba,32768;SOL_COMPUTED,SINGLE,51.15044476808,-114.03068625223,1098.2658,-17.0000,WGS84,1.5511,1.0989,2.5060,\"\",0.000,0.000,27,24,24,0,00,02,11,11*c3b290f9\r\n";
   const char* log_to_filter22 = "#TIMEA,COM1,0,7.5,COARSESTEERING,2180,407595.000,02400020,9924,32768;ITERATING,-0.001480373,1.892068473e-09,-17.99999999838,2021,10,21,17,12,57001,VALID*dd7d6731\r\n";
   const char* filtered_log_4 = "#RANGEA,COM1,0,5.5,COARSESTEERING,2180,407595.000,02400020,5103,32768;77,23,0,20297500.868,0.052,-106664086.632315,0.006,-1562.684,50.7,27.611,0810bc24,23,0,20297500.632,0.265,-83114871.442232,0.005,-1217.676,50.4,1.250,01305c2b,23,0,20297501.045,0.140,-83114872.694162,0.007,-1217.677,53.0,4.512,02309c2b,23,0,20297505.319,0.067,-79651767.930981,0.004,-1166.878,55.9,5.830,01d03c24,8,0,22085323.035,0.069,-116059155.718779,0.008,783.431,48.2,27.965,0810bca4,8,0,22085325.492,0.358,-90435713.372734,0.009,610.466,47.5,2.745,01305cab,8,0,22085325.995,0.198,-90435715.632605,0.008,610.465,49.8,4.785,02309cab,8,0,22085325.442,0.066,-86667559.258654,0.006,585.051,53.8,6.216,01d03ca4,32,0,22245656.498,0.061,-116901713.393351,0.007,3257.008,49.3,27.424,0810bce4,32,0,22245659.125,0.360,-91092255.293990,0.011,2537.928,47.4,2.405,01305ceb,32,0,22245659.231,0.201,-91092248.543947,0.007,2537.927,49.7,4.783,02309ceb,32,0,22245658.803,0.068,-87296742.558874,0.006,2432.279,52.0,6.214,01d03ce4,24,0,22263378.104,0.098,-116994841.931118,0.009,1387.328,45.2,27.284,0810bd04,24,0,22263381.064,0.464,-91164823.200386,0.014,1081.034,45.3,2.405,01305d0b,24,0,22263381.254,0.244,-91164817.453840,0.010,1081.036,48.0,4.784,02309d0b,24,0,22263382.083,0.071,-87366291.822250,0.008,1036.050,50.4,6.145,01d03d04,21,0,24666722.444,0.168,-129624501.758570,0.015,3054.951,40.4,28.416,0810bd24,21,0,24666722.744,0.790,-101006106.505545,0.019,2380.481,40.6,2.497,01305d2b,18,0,21981503.954,0.067,-115513581.695168,0.007,-3112.239,48.3,28.105,0800bd44,15,0,23315193.939,0.100,-122522170.201077,0.012,-3612.525,45.0,27.361,0810bda4,15,0,23315194.577,0.472,-95471823.159175,0.011,-2814.954,45.1,2.741,01305dab,15,0,23315194.509,0.340,-95471821.421129,0.012,-2814.955,45.1,4.682,02309dab,10,0,20058554.660,0.034,-105408414.831429,0.006,676.520,54.2,28.112,1800bdc4,27,0,21420640.151,0.053,-112566222.962255,0.007,-1305.266,50.4,28.067,0810bde4,27,0,21420642.131,5.656,-84059200.042173,0.044,-974.588,53.6,0.647,01d03de4,39,3,23191730.713,0.167,-123755517.439732,0.008,3961.597,46.2,30.110,08119f64,39,3,23191737.435,0.130,-96254312.753414,0.009,3081.246,42.7,4.721,10b13f6b,39,3,23191737.125,0.527,-96254310.011505,0.008,3081.244,43.5,5.641,00319f6b,46,5,22952152.164,0.171,-122563211.547077,0.008,1653.720,46.0,30.092,08119fa4,46,5,22952155.579,0.197,-95326955.817892,0.009,1286.228,39.0,4.722,00b13fab,46,5,22952155.755,0.808,-95326950.071980,0.009,1286.228,39.8,5.563,10319fab,38,8,18998637.906,0.130,-101558607.040641,0.006,1363.216,48.4,30.005,18119c04,38,8,18998643.997,0.103,-78990046.826712,0.006,1060.280,44.6,4.656,10b13c0b,38,8,18998642.764,0.407,-78990037.073071,0.006,1060.279,45.8,5.555,00319c0b,61,9,18933340.219,0.085,-101245077.461238,0.005,774.337,51.9,31.435,18119c24,61,9,18933343.261,0.061,-78746182.652719,0.005,602.263,48.8,5.036,00b13c2b,61,9,18933343.113,0.259,-78746181.906229,0.005,602.261,49.3,6.033,10319c2b,60,10,19651526.114,0.088,-105122412.778005,0.005,-2780.830,51.8,30.173,08019c44,54,11,21931496.436,0.190,-117359867.373328,0.008,4019.855,45.1,29.925,08119c64,54,11,21931499.657,0.092,-91279908.365263,0.008,3126.554,45.3,5.066,10b13c6b,54,11,21931500.087,0.378,-91279909.619295,0.008,3126.552,45.9,6.217,00319c6b,44,12,23265130.397,0.268,-124540065.478237,0.010,-4022.401,42.2,29.051,08119c84,44,12,23265132.939,0.134,-96864504.724735,0.011,-3128.535,42.4,4.642,00b13c8b,44,12,23265134.440,0.590,-96864497.977821,0.011,-3128.535,42.5,5.562,00319c8b,45,13,19513199.233,0.104,-104492295.524177,0.005,-2209.578,50.1,31.455,08119ca4,45,13,19513200.373,0.065,-81271790.545637,0.006,-1718.560,48.7,4.714,00b13cab,45,13,19513200.665,0.281,-81271786.796770,0.006,-1718.560,48.9,5.633,10319cab,4,0,23261513.970,0.049,-122240080.567102,0.006,513.442,53.2,28.261,08539d24,4,0,23261517.679,0.065,-91283189.196609,0.006,383.352,54.8,6.240,01933d24,4,0,23261514.144,0.017,-93664478.142199,0.010,393.414,55.8,6.240,02333d24,4,0,23261515.437,0.065,-92473832.837046,0.004,388.382,57.7,5.941,02933d24,9,0,23895974.018,0.082,-125574190.676455,0.006,2802.065,49.9,21.799,08539dc4,9,0,23895979.211,0.083,-93772951.560656,0.014,2092.436,48.8,4.634,01933dc4,9,0,23895976.481,0.032,-96219193.923071,0.019,2147.062,51.9,4.635,02333dc4,9,0,23895977.631,0.077,-94996067.408674,0.005,2119.773,52.7,4.359,02933dc4,11,0,21320110.232,0.094,-112037935.358484,0.016,-502.672,50.0,16.107,08539e04,11,0,21320111.176,0.072,-83664695.046743,0.011,-375.390,51.1,5.827,01933e04,11,0,21320107.412,0.029,-85847238.635632,0.020,-385.203,51.6,5.760,02333e04,11,0,21320109.153,0.068,-84755966.011379,0.011,-380.314,53.8,5.767,02933e04,30,0,24900309.826,0.291,-129662447.050890,0.008,-3516.229,45.6,9.155,18049ec4,35,0,22875826.226,0.048,-119120430.228863,0.005,1592.785,51.2,28.542,08149ee4,35,0,22875828.809,5.656,-89769665.177532,0.080,1200.265,50.0,0.641,01343ee4,35,0,22875825.944,0.090,-92111471.486866,0.020,1231.668,48.2,4.042,01743ee4,32,0,23882868.520,0.071,-124364362.318052,0.007,-2663.985,47.9,27.659,18149f44,32,0,23882875.101,5.656,-93721531.198517,0.062,-2007.573,51.6,0.639,01343f44,32,0,23882871.851,0.081,-96166426.626690,0.009,-2059.995,49.1,4.819,01743f44,23,0,25928263.061,0.131,-135015269.286980,0.008,1572.973,44.8,17.772,18149c84,23,0,25928258.755,0.105,-104402354.741234,0.016,1216.402,44.3,4.448,01743c84,19,0,22894565.383,0.052,-119218009.616373,0.006,2522.539,50.3,29.902,18149d04,19,0,22894567.405,5.656,-89843199.600471,0.127,1901.049,51.0,0.642,01343d04,19,0,22894564.496,0.084,-92186924.132240,0.013,1950.624,48.8,4.638,11743d04,20,0,21333656.505,0.038,-111089946.855726,0.005,-37.780,53.3,28.627,18149d24,20,0,21333652.378,0.076,-85901777.681990,0.014,-29.197,53.2,4.441,11743d24,25,0,26368215.794,0.150,-137306218.129744,0.011,-702.371,42.3,22.590,18149e24,25,0,26368215.690,0.109,-106173876.909266,0.013,-543.206,42.7,5.247,11743e24,29,0,21813011.021,0.042,-113586071.992727,0.005,-1572.769,52.4,28.606,08149e44,29,0,21813008.843,0.080,-87831948.349440,0.015,-1216.090,50.9,4.438,01743e44*0475a421\r\n";
   const char* log_to_filter23 = "#BESTPOSA,COM1,0,7.5,COARSESTEERING,2180,407595.000,02400020,cdba,32768;SOL_COMPUTED,SINGLE,51.15044243058,-114.03068360219,1097.7004,-17.0000,WGS84,1.3792,0.9846,2.2407,\"\",0.000,0.000,28,27,27,0,00,02,11,11*9a57a6f4\r\n";
   const char* log_to_filter24 = "#TIMEA,COM1,0,7.5,FINESTEERING,2180,407596.000,02400020,9924,32768;ITERATING,-0.001480373,1.694616069e-09,-17.99999999838,2021,10,21,17,12,58001,VALID*ca78e438\r\n";
   const char* log_to_filter25 = "#BESTPOSA,COM1,0,7.5,FINESTEERING,2180,407596.000,02400020,cdba,32768;SOL_COMPUTED,SINGLE,51.15044308398,-114.03068382954,1097.7873,-17.0000,WGS84,1.1918,0.9784,2.0965,\"\",0.000,0.000,29,28,28,0,00,02,11,11*81ec1d55\r\n";
   const char* log_to_filter26 = "#TIMEA,COM1,0,7.5,FINESTEERING,2180,407597.000,02400020,9924,32768;ITERATING,-1.056282464e-08,4.980118958e-09,-17.99999999838,2021,10,21,17,12,59000,VALID*86a8f91f\r\n";
   const char* log_to_filter27 = "#BESTPOSA,COM1,0,7.5,FINESTEERING,2180,407597.000,02400020,cdba,32768;SOL_COMPUTED,SINGLE,51.15044349643,-114.03068418925,1097.7073,-17.0000,WGS84,1.1581,0.9671,2.0529,\"\",0.000,0.000,30,29,29,0,00,02,11,11*4f210b38\r\n";
   const char* log_to_filter28 = "#TIMEA,COM1,0,7.5,FINESTEERING,2180,407598.000,02400020,9924,32768;ITERATING,-8.720389968e-09,2.851254543e-09,-17.99999999838,2021,10,21,17,13,0,VALID*6046ea6b\r\n";
   const char* log_to_filter29 = "#BESTPOSA,COM1,0,7.5,FINESTEERING,2180,407598.000,02400020,cdba,32768;SOL_COMPUTED,SINGLE,51.15044380692,-114.03068422806,1097.7573,-17.0000,WGS84,1.1254,0.9541,2.0500,\"\",0.000,0.000,30,30,30,0,00,02,11,11*6dea55c5\r\n";
   const char* log_to_filter30 = "#TIMEA,COM1,0,8.5,FINESTEERING,2180,407599.000,02400020,9924,32768;ITERATING,-5.706091940e-09,2.208897498e-09,-17.99999999838,2021,10,21,17,13,1000,VALID*19f9590d\r\n";
   const char* log_to_filter31 = "#BESTPOSA,COM1,0,8.5,FINESTEERING,2180,407599.000,02400020,cdba,32768;SOL_COMPUTED,SINGLE,51.15044360617,-114.03068408017,1097.7294,-17.0000,WGS84,1.1247,0.9540,2.0496,\"\",0.000,0.000,31,30,30,0,00,02,11,11*09f5c77f\r\n";
   const char* log_to_filter32 = "#VERSIONA,COM1,0,5.5,FINESTEERING,2180,407600.000,02400020,3681,32768;2,GPSCARD,\"FFNRNNCBN\",\"BMGX15290006Y\",\"OEM729-0.00H\",\"OM7MGMNJCDND6EB\",\"OM7BR0000ABG001\",\"2021/Sep/13\",\"15:28:07\",OEM7FPGA,\"\",\"\",\"\",\"OMV070001RN0000\",\"\",\"\",\"\"*6ebd192f\r\n";
   const char* log_to_filter33 = "#TIMEA,COM1,0,8.5,FINESTEERING,2180,407600.000,02400020,9924,32768;ITERATING,-2.698749387e-09,1.871232507e-09,-17.99999999838,2021,10,21,17,13,2000,VALID*500b310b\r\n";
   const char* filtered_log_5 = "#RANGEA,COM1,0,7.5,FINESTEERING,2180,407600.000,02400020,5103,32768;97,23,0,20742792.951,0.046,-109004112.049799,0.006,-1569.674,51.1,32.610,0810bc24,23,0,20742792.750,0.186,-84938267.863909,0.006,-1223.123,50.0,6.249,01305c2b,23,0,20742792.847,0.096,-84938269.116295,0.006,-1223.124,53.0,9.510,02309c2b,23,0,20742797.345,0.042,-81399189.508091,0.004,-1172.077,55.9,10.829,01d03c24,8,0,22528384.243,0.061,-118387457.924629,0.008,775.156,48.5,32.964,0810bca4,8,0,22528386.777,0.241,-92249974.832392,0.009,604.018,46.9,7.744,01305cab,8,0,22528387.307,0.137,-92249977.089224,0.009,604.017,49.9,9.784,02309cab,8,0,22528386.573,0.041,-88406226.493011,0.004,578.790,53.7,11.215,01d03ca4,32,0,22686363.945,0.054,-119217646.474789,0.007,3250.487,49.6,32.423,0810bce4,32,0,22686366.736,0.229,-92896878.471411,0.009,2532.846,47.3,7.403,01305ceb,32,0,22686366.916,0.139,-92896871.724675,0.008,2532.847,49.7,9.781,02309ceb,32,0,22686366.199,0.043,-89026173.111600,0.005,2427.340,51.9,11.213,01d03ce4,24,0,22705864.682,0.086,-119320124.813728,0.010,1378.939,45.6,32.283,0810bd04,24,0,22705867.730,0.304,-92976731.939616,0.014,1074.499,44.9,7.403,01305d0b,24,0,22705867.765,0.170,-92976726.195712,0.011,1074.498,47.9,9.782,02309d0b,24,0,22705868.751,0.045,-89102704.360517,0.006,1029.886,50.4,11.143,01d03d04,21,0,25107621.799,0.157,-131941443.240112,0.015,3049.215,40.2,33.414,0810bd24,21,0,25107622.272,0.511,-102811515.463824,0.019,2376.015,40.4,7.495,01305d2b,18,0,22428269.766,0.060,-117861351.677555,0.007,-3118.904,48.7,33.104,0810bd44,18,0,22428270.582,0.341,-91840018.377299,0.009,-2430.314,48.0,1.744,01305d4b,18,0,22428270.851,0.197,-91840020.623335,0.008,-2430.314,50.7,4.004,02309d4b,18,0,22428276.184,0.070,-88013371.028066,0.008,-2328.945,53.6,5.444,01d03d44,15,0,23762435.332,0.086,-124872439.418394,0.010,-3618.623,45.6,32.360,0810bda4,15,0,23762436.149,0.288,-97303201.768388,0.010,-2819.707,45.4,7.739,01305dab,15,0,23762436.478,0.224,-97303200.020764,0.011,-2819.708,45.6,9.680,02309dab,10,0,20501716.740,0.030,-107737247.457800,0.006,669.502,54.6,33.111,1810bdc4,10,0,20501718.526,0.218,-83951109.550164,0.012,521.690,52.1,1.410,11305dcb,10,0,20501718.446,0.137,-83951105.806965,0.006,521.690,53.2,4.610,02309dcb,10,0,20501717.497,0.069,-80453142.024519,0.012,500.008,55.8,5.451,01d03dc4,27,0,21865687.995,0.047,-114904964.957329,0.009,-1313.509,50.8,33.066,0810bde4,27,0,21865689.816,0.277,-89536343.796655,0.012,-1023.514,49.9,1.406,01305deb,27,0,21865690.201,0.179,-89536345.047585,0.008,-1023.513,51.6,3.906,02309deb,27,0,21865690.220,0.069,-85805663.218944,0.005,-980.794,53.7,5.646,01d03de4,195,0,43535938.853,0.997,-228782904.394478,0.050,97.965,41.7,1.894,0805be64,39,3,23631824.987,0.161,-126103944.379482,0.008,3955.602,45.9,35.108,08119f64,39,3,23631831.178,0.095,-98080867.076891,0.010,3076.584,42.1,9.719,10b13f6b,39,3,23631830.647,0.419,-98080864.331959,0.009,3076.583,42.7,10.640,00319f6b,46,5,23394410.562,0.168,-124924846.921444,0.008,1645.097,45.5,35.091,08119fa4,46,5,23394413.840,0.138,-97163783.339546,0.008,1279.521,38.9,9.721,00b13fab,46,5,23394414.425,0.589,-97163777.588993,0.008,1279.521,39.8,10.561,10319fab,38,8,19441169.444,0.127,-103924192.060146,0.007,1354.658,47.9,35.004,18119c04,38,8,19441175.548,0.072,-80829946.284019,0.007,1053.623,44.6,9.654,10b13c0b,38,8,19441174.425,0.295,-80829936.531229,0.007,1053.623,45.8,10.554,00319c0b,61,9,19376423.087,0.084,-103614440.682349,0.005,765.021,51.4,36.434,18119c24,61,9,19376426.033,0.044,-80589020.713352,0.005,595.017,48.7,10.035,00b13c2b,61,9,19376426.215,0.193,-80589019.965771,0.005,595.016,49.3,11.032,10319c2b,60,10,20097930.916,0.086,-107510377.111368,0.006,-2789.332,51.3,35.172,08019c44,54,11,22371546.971,0.192,-119714667.286963,0.009,4013.269,44.3,34.924,08119c64,54,11,22371550.593,0.065,-93111419.410790,0.009,3121.432,45.3,10.064,10b13c6b,54,11,22371550.486,0.275,-93111420.666705,0.009,3121.432,46.1,11.216,00319c6b,44,12,23712690.875,0.292,-126935892.950525,0.011,-4027.379,40.8,34.049,08119c84,44,12,23712694.012,0.097,-98727926.080471,0.012,-3132.409,42.0,9.640,00b13c8b,44,12,23712694.402,0.452,-98727919.338653,0.012,-3132.408,42.0,10.560,00319c8b,45,13,19959067.661,0.102,-106879900.540449,0.005,-2217.328,49.6,36.453,08119ca4,45,13,19959068.752,0.045,-83128816.666560,0.006,-1724.589,48.7,9.712,00b13cab,45,13,19959068.964,0.205,-83128812.915366,0.005,-1724.589,48.9,10.632,10319cab,36,0,25125640.606,0.171,-132036132.059647,0.007,2122.474,50.4,4.515,08539cc4,36,0,25125647.090,0.096,-98598432.570003,0.038,1584.968,51.3,2.253,01933cc4,36,0,25125643.494,0.042,-101170552.953031,0.043,1626.410,52.7,2.255,02333cc4,36,0,25125644.280,0.089,-99884485.431022,0.006,1605.671,54.1,2.175,02933cc4,4,0,23704831.386,0.043,-124569729.390211,0.006,506.173,53.5,33.260,08539d24,4,0,23704835.118,0.041,-93022862.014097,0.004,378.062,54.9,11.238,01933d24,4,0,23704831.592,0.013,-95449533.729992,0.004,387.896,55.7,11.239,02333d24,4,0,23704832.864,0.040,-94236197.040798,0.004,382.983,57.7,10.939,02933d24,9,0,24337113.933,0.071,-127892396.521105,0.006,2796.031,50.2,26.798,08539dc4,9,0,24337119.145,0.055,-95504079.306541,0.006,2087.980,48.9,9.633,01933dc4,9,0,24337116.399,0.022,-97995481.519361,0.005,2142.473,51.7,9.634,02333dc4,9,0,24337117.533,0.050,-96749775.081781,0.005,2115.195,52.8,9.358,02933dc4,11,0,21764394.000,0.078,-114372662.230968,0.016,-509.639,50.4,21.106,08539e04,11,0,21764394.874,0.046,-85408159.916046,0.011,-380.564,51.2,10.826,01933e04,11,0,21764391.156,0.022,-87636185.192937,0.012,-390.407,51.4,10.758,02333e04,11,0,21764392.912,0.043,-86522171.723775,0.011,-385.475,53.8,10.766,02933e04,30,0,25347490.171,0.186,-131991032.051733,0.010,-3521.784,44.8,14.154,18149ec4,30,0,25347493.223,0.106,-102063849.002439,0.011,-2723.240,44.4,4.254,01743ec4,35,0,23318103.142,0.045,-121423482.169649,0.006,1585.411,51.0,33.541,08149ee4,35,0,23318106.047,0.074,-91505254.770271,0.008,1194.859,50.2,5.640,01343ee4,35,0,23318102.856,0.060,-93892337.335754,0.006,1225.981,47.9,9.041,01743ee4,32,0,24329230.899,0.066,-126688688.281939,0.008,-2669.839,47.8,32.658,18149f44,32,0,24329238.229,0.071,-95473152.992887,0.007,-2011.999,51.9,5.638,01343f44,32,0,24329234.245,0.054,-97963742.895374,0.005,-2064.471,49.0,9.818,01743f44,10,0,41200419.719,0.220,-214541396.438501,0.014,307.525,40.8,16.261,18149fa4,10,0,41200417.817,0.457,-165897011.707388,0.015,237.583,43.8,4.441,003497a4,23,0,26370558.823,0.115,-137318419.659615,0.010,1565.900,44.6,22.771,18149c84,23,0,26370558.170,0.084,-103483735.258005,0.014,1180.124,47.7,4.991,01343c84,23,0,26370554.485,0.071,-106183296.719354,0.008,1210.904,44.2,9.447,01743c84,19,0,23335949.237,0.049,-121516411.434889,0.006,2516.239,50.2,34.901,18149d04,19,0,23335951.484,0.072,-91575284.852926,0.011,1896.299,51.3,5.641,01343d04,19,0,23335948.398,0.056,-93964194.214218,0.006,1945.745,48.6,9.637,11743d04,20,0,21777498.539,0.035,-113401148.742895,0.005,-44.823,53.3,33.626,18149d24,20,0,21777497.588,0.071,-85459578.394430,0.015,-33.735,55.6,5.045,01343d24,20,0,21777494.410,0.051,-87688945.587293,0.004,-34.668,53.0,9.440,11743d24,25,0,26812696.158,0.132,-139620743.984209,0.012,-710.154,42.6,27.589,18149e24,25,0,26812698.725,0.104,-105218789.152803,0.012,-535.063,43.7,4.989,01343e24,25,0,26812696.208,0.075,-107963615.107809,0.009,-549.023,42.7,10.246,11743e24,29,0,22258326.689,0.039,-115904947.604645,0.006,-1580.344,52.3,33.604,08149e44,29,0,22258328.914,0.071,-87346461.870361,0.006,-1190.900,53.8,5.245,01343e44,29,0,22258324.535,0.053,-89625050.062736,0.005,-1221.969,50.8,9.436,01743e44*aced3074\r\n";

   my_filter.include_message_id(43); # Filter for RANGE
   my_filter.invert_message_id_filter(True);

   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter1)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter2)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter3)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter4)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter5)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter6)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter7)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter8)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter9)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter10)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter11)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter12)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter13)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter14)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter15)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter16)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter17)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter18)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter19)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter20)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter21)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter22)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter23)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter24)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter25)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter26)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter27)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter28)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter29)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter30)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter31)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter32)))
   assert TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(log_to_filter33)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(filtered_log_1)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(filtered_log_2)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(filtered_log_3)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(filtered_log_4)))
   assert not TestFilter(const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(filtered_log_5)))

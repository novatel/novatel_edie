
.. _program_listing_file_src_hw_interface_stream_interface_api_memorystream.hpp:

Program Listing for File memorystream.hpp
=========================================

|exhale_lsh| :ref:`Return to documentation for file <file_src_hw_interface_stream_interface_api_memorystream.hpp>` (``src/hw_interface/stream_interface/api/memorystream.hpp``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   // ===============================================================================
   // |                                                                             |
   // |  COPYRIGHT NovAtel Inc, 2022. All rights reserved.                          |
   // |                                                                             |
   // |  Permission is hereby granted, free of charge, to any person obtaining a    |
   // |  copy of this software and associated documentation files (the "Software"), |
   // |  to deal in the Software without restriction, including without limitation  |
   // |  the rights to use, copy, modify, merge, publish, distribute, sublicense,   |
   // |  and/or sell copies of the Software, and to permit persons to whom the      |
   // |  Software is furnished to do so, subject to the following conditions:       |
   // |                                                                             |
   // |  The above copyright notice and this permission notice shall be included    |
   // |  in all copies or substantial portions of the Software.                     |
   // |                                                                             |
   // |  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR |
   // |  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,   |
   // |  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL    |
   // |  THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER |
   // |  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING    |
   // |  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER        |
   // |  DEALINGS IN THE SOFTWARE.                                                  |
   // |                                                                             |
   // ===============================================================================
   // ! \file memorystream.hpp
   // ===============================================================================
   
   #ifndef MEMORYSTREAM_HPP
   #define MEMORYSTREAM_HPP
   
   #include "common.hpp"
   #include "decoders/common/api/circular_buffer.hpp"
   #include "decoders/common/api/common.hpp"
   
   class MemoryStream : public CircularBuffer
   {
     public:
       MemoryStream(uint32_t uiBufferSize);
   
       MemoryStream(uint8_t* pucBuffer, uint32_t uiContentSize);
   
       MemoryStream();
   
       ~MemoryStream();
   
       int32_t Available();
   
       void Flush();
   
       StreamReadStatus Read(char* pucBuffer, uint32_t uiSize);
   
       uint32_t Read(void);
   
       uint32_t Write(uint8_t);
   
       uint32_t Write(uint8_t* pucBuffer, uint32_t uisize);
   
       uint32_t CalculatePercentage(uint32_t);
   
       friend class MemoryStreamTest;
       friend class IOMemoryStreamTest;
   
     private:
       MemoryStream(const MemoryStream& clOther);
   
       const MemoryStream& operator=(const MemoryStream& clOther);
   
       StreamReadStatus stMemoryReadStatus;
   };
   
   #endif

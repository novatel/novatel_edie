
.. _program_listing_file_src_hw_interface_stream_interface_api_inputstreaminterface.hpp:

Program Listing for File inputstreaminterface.hpp
=================================================

|exhale_lsh| :ref:`Return to documentation for file <file_src_hw_interface_stream_interface_api_inputstreaminterface.hpp>` (``src/hw_interface/stream_interface/api/inputstreaminterface.hpp``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   // ===============================================================================
   // |                                                                             |
   // |  COPYRIGHT NovAtel Inc, 2022. All rights reserved.                          |
   // |                                                                             |
   // |  Permission is hereby granted, free of charge, to any person obtaining a    |
   // |  copy of this software and associated documentation files (the "Software"), |
   // |  to deal in the Software without restriction, including without limitation  |
   // |  the rights to use, copy, modify, merge, publish, distribute, sublicense,   |
   // |  and/or sell copies of the Software, and to permit persons to whom the      |
   // |  Software is furnished to do so, subject to the following conditions:       |
   // |                                                                             |
   // |  The above copyright notice and this permission notice shall be included    |
   // |  in all copies or substantial portions of the Software.                     |
   // |                                                                             |
   // |  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR |
   // |  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,   |
   // |  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL    |
   // |  THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER |
   // |  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING    |
   // |  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER        |
   // |  DEALINGS IN THE SOFTWARE.                                                  |
   // |                                                                             |
   // ===============================================================================
   // ! \file inputstreaminterface.hpp
   // ===============================================================================
   
   #ifndef INPUT_STREAM_INTERFACE_HPP
   #define INPUT_STREAM_INTERFACE_HPP
   
   #include <stdexcept>
   
   #include "common.hpp"
   
   //-----------------------------------------------------------------------
   // Globals
   //-----------------------------------------------------------------------
   class MemoryStream;
   
   class InputStreamInterface
   {
     public:
       virtual StreamReadStatus ReadData(ReadDataStructure& pReadDataStructure) = 0;
   
       virtual bool IsStreamAvailable() { return false; }
   
       virtual StreamReadStatus ReadLine(std::string&) { return {}; }
   
       virtual std::string GetFileExtension() const { throw std::logic_error("Unsupported method"); };
   
       virtual std::string GetFileName() const { throw std::logic_error("Unsupported method"); };
   
       virtual void SetTimeOut(double) {}
   
       virtual void Reset(std::streamoff, std::ios_base::seekdir) {}
   
       virtual uint64_t GetCurrentFilePosition() { return 0; }
   
       virtual ~InputStreamInterface() = default;
   
       virtual void SetCurrentFileOffset(uint64_t) {}
   
       virtual uint64_t GetCurrentFileOffset() const { return 0; }
   
       virtual MemoryStream* GetMemoryStream() { return nullptr; }
   };
   
   #endif
